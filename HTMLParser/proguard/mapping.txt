android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.y:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.z:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aa:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ab:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ac:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.ad:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ae:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.af:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ag:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ah:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ai:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.aj:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.al:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.am:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.an:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ao:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ap:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.aq:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ar:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.as:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.at:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.au:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.av:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ax:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ay:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.az:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ba:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bb:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bc:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bd:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.be:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bf:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bg:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
cn.waps.AdInfo -> cn.waps.AdInfo:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String[] i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    android.graphics.Bitmap l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    int w -> w
    int x -> x
    android.graphics.Bitmap y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    int D -> D
    android.graphics.Bitmap getAdIcon() -> getAdIcon
    void a(android.graphics.Bitmap) -> a
    java.lang.String getAdId() -> getAdId
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void b(java.lang.String) -> b
    java.lang.String getAdText() -> getAdText
    void c(java.lang.String) -> c
    java.lang.String b() -> b
    void d(java.lang.String) -> d
    java.lang.String c() -> c
    void e(java.lang.String) -> e
    java.lang.String getAdPackage() -> getAdPackage
    void f(java.lang.String) -> f
    java.lang.String d() -> d
    void g(java.lang.String) -> g
    java.lang.String getAdName() -> getAdName
    void h(java.lang.String) -> h
    int getAdPoints() -> getAdPoints
    void a(int) -> a
    java.lang.String getDescription() -> getDescription
    void i(java.lang.String) -> i
    java.lang.String getVersion() -> getVersion
    void j(java.lang.String) -> j
    java.lang.String getFilesize() -> getFilesize
    void k(java.lang.String) -> k
    java.lang.String getProvider() -> getProvider
    void l(java.lang.String) -> l
    java.lang.String[] getImageUrls() -> getImageUrls
    void a(java.lang.String[]) -> a
    java.lang.String e() -> e
    void m(java.lang.String) -> m
    java.lang.String getAction() -> getAction
    void n(java.lang.String) -> n
    void o(java.lang.String) -> o
    java.lang.String f() -> f
    void p(java.lang.String) -> p
    int g() -> g
    void b(int) -> b
    int h() -> h
    void c(int) -> c
    android.graphics.Bitmap i() -> i
    void b(android.graphics.Bitmap) -> b
    java.lang.String j() -> j
    void q(java.lang.String) -> q
    java.lang.String k() -> k
    void r(java.lang.String) -> r
    void s(java.lang.String) -> s
    java.lang.String l() -> l
    void t(java.lang.String) -> t
    int m() -> m
    void d(int) -> d
cn.waps.AnimationType -> cn.waps.AnimationType:
    int MINI_RANDOM -> MINI_RANDOM
    void startMiniAdAnimation(int,android.view.View) -> startMiniAdAnimation
    java.util.Map getAnimation(android.view.View) -> getAnimation
cn.waps.AppConnect -> cn.waps.AppConnect:
    java.lang.String LIBRARY_VERSION_NUMBER -> LIBRARY_VERSION_NUMBER
    cn.waps.y o -> o
    android.content.Context a -> a
    cn.waps.AppConnect p -> p
    cn.waps.ad q -> q
    android.content.SharedPreferences r -> r
    java.lang.String b -> b
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String c -> c
    java.lang.String F -> F
    java.lang.String G -> G
    int H -> H
    int I -> I
    java.lang.String J -> J
    boolean K -> K
    boolean L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    java.lang.String am -> am
    java.lang.String an -> an
    java.lang.String ao -> ao
    java.lang.String ap -> ap
    java.lang.String aq -> aq
    java.lang.String ar -> ar
    cn.waps.UpdatePointsNotifier as -> as
    cn.waps.u at -> at
    cn.waps.x au -> au
    cn.waps.t av -> av
    cn.waps.w aw -> aw
    cn.waps.v ax -> ax
    java.lang.String ay -> ay
    java.lang.String az -> az
    java.lang.String aA -> aA
    java.lang.String aB -> aB
    java.lang.String aC -> aC
    java.lang.String aD -> aD
    boolean aE -> aE
    boolean aF -> aF
    java.lang.String aG -> aG
    java.lang.String aH -> aH
    java.util.Map aI -> aI
    java.util.Map d -> d
    boolean aJ -> aJ
    boolean aK -> aK
    int e -> e
    int f -> f
    java.util.List g -> g
    java.lang.String h -> h
    cn.waps.p aL -> aL
    java.lang.String aM -> aM
    java.lang.String aN -> aN
    java.lang.String aO -> aO
    cn.waps.s aP -> aP
    boolean i -> i
    java.lang.String aQ -> aQ
    java.lang.String aR -> aR
    android.os.Handler aS -> aS
    java.lang.String connectResult -> connectResult
    cn.waps.AppListener aT -> aT
    boolean j -> j
    boolean aU -> aU
    java.lang.String aV -> aV
    int aW -> aW
    java.lang.String aX -> aX
    boolean aY -> aY
    boolean finalize_tag -> finalize_tag
    java.util.HashMap aZ -> aZ
    java.util.HashMap ba -> ba
    int bb -> bb
    android.app.Dialog k -> k
    boolean l -> l
    int bc -> bc
    cn.waps.br m -> m
    cn.waps.au n -> n
    java.lang.String TYPE_BROWSER -> TYPE_BROWSER
    java.lang.String TYPE_PLAYER -> TYPE_PLAYER
    cn.waps.AppConnect getInstance(java.lang.String,java.lang.String,android.content.Context) -> getInstance
    cn.waps.AppConnect getInstance(java.lang.String,android.content.Context) -> getInstance
    cn.waps.AppConnect getInstance(android.content.Context) -> getInstance
    java.lang.String a(android.content.Context) -> a
    void d(android.content.Context) -> d
    java.lang.String b(android.content.Context) -> b
    void a() -> a
    void a(java.lang.String,boolean,java.lang.String,java.lang.String,boolean,boolean,boolean) -> a
    boolean e(java.lang.String) -> e
    void q() -> q
    void a(cn.waps.AppListener) -> a
    void a(java.lang.String,int) -> a
    void r() -> r
    int f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    void setPointsCache(boolean) -> setPointsCache
    boolean b() -> b
    java.lang.String a(int,android.content.SharedPreferences) -> a
    void b(java.lang.String,int) -> b
    java.lang.Object[] getPointsData() -> getPointsData
    void a(java.lang.String) -> a
    java.lang.String getPointsFailedData() -> getPointsFailedData
    void clearPoints() -> clearPoints
    void setUpdatePointsFlag(boolean) -> setUpdatePointsFlag
    boolean c() -> c
    void c(java.lang.String,int) -> c
    boolean h(java.lang.String) -> h
    int getHistoryPoints(android.content.Context) -> getHistoryPoints
    java.lang.String getHistoryPointsName(android.content.Context) -> getHistoryPointsName
    void getPoints(cn.waps.UpdatePointsNotifier) -> getPoints
    void getPoints() -> getPoints
    void awardPoints(int,cn.waps.UpdatePointsNotifier) -> awardPoints
    void awardPoints(int) -> awardPoints
    void spendPoints(int,cn.waps.UpdatePointsNotifier) -> spendPoints
    void spendPoints(int) -> spendPoints
    void s() -> s
    void t() -> t
    void u() -> u
    java.lang.String getConfig(java.lang.String,java.lang.String) -> getConfig
    java.lang.String getConfig(java.lang.String) -> getConfig
    void getConfig(java.lang.String,java.lang.String,cn.waps.AppListener) -> getConfig
    java.lang.String getConfig_Sync(java.lang.String) -> getConfig_Sync
    java.util.Map getConfigMap() -> getConfigMap
    java.util.Map b(java.lang.String) -> b
    void checkUpdate(android.content.Context) -> checkUpdate
    boolean i(java.lang.String) -> i
    void j(java.lang.String) -> j
    org.w3c.dom.Document k(java.lang.String) -> k
    java.lang.String a(org.w3c.dom.NodeList) -> a
    void close() -> close
    void showMore(android.content.Context) -> showMore
    void showMore(android.content.Context,java.lang.String) -> showMore
    void setOffersCloseListener(cn.waps.AppListener) -> setOffersCloseListener
    void setMoreCloseListener(cn.waps.AppListener) -> setMoreCloseListener
    void setTuanCloseListener(cn.waps.AppListener) -> setTuanCloseListener
    void setFeedbackCloseListener(cn.waps.AppListener) -> setFeedbackCloseListener
    void a(int,cn.waps.AppListener) -> a
    void setRunnableMap(java.util.HashMap) -> setRunnableMap
    void showOffers(android.content.Context) -> showOffers
    void showOffers(android.content.Context,java.lang.String) -> showOffers
    void showGameOffers(android.content.Context) -> showGameOffers
    void showGameOffers(android.content.Context,java.lang.String) -> showGameOffers
    void showAppOffers(android.content.Context) -> showAppOffers
    void showAppOffers(android.content.Context,java.lang.String) -> showAppOffers
    void showTuanOffers(android.content.Context) -> showTuanOffers
    void showTuanOffers(android.content.Context,java.lang.String) -> showTuanOffers
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
    android.app.Dialog getOffersDialog() -> getOffersDialog
    void a(java.lang.String,java.lang.String) -> a
    cn.waps.bj c(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> c
    void showFeedback() -> showFeedback
    void showFeedback(android.content.Context) -> showFeedback
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    void setCrashReport(boolean) -> setCrashReport
    void e(android.content.Context) -> e
    java.lang.String d() -> d
    void setAdBackColor(int) -> setAdBackColor
    void setAdForeColor(int) -> setAdForeColor
    java.util.Map c(android.content.Context) -> c
    void initAdInfo() -> initAdInfo
    java.util.List getAdInfoList() -> getAdInfoList
    cn.waps.AdInfo getAdInfo() -> getAdInfo
    cn.waps.AdInfo a(java.util.List) -> a
    cn.waps.AdInfo a(java.util.List,java.lang.String) -> a
    void downloadAd(android.content.Context,java.lang.String) -> downloadAd
    void clickAd(android.content.Context,java.lang.String) -> clickAd
    void d(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> d
    java.util.List a(java.io.InputStream) -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void setWebViewTransparent(boolean) -> setWebViewTransparent
    void f(android.content.Context) -> f
    void initPopAd(android.content.Context) -> initPopAd
    void showPopAd(android.content.Context) -> showPopAd
    void showPopAd(android.content.Context,int) -> showPopAd
    android.app.Dialog getPopAdDialog() -> getPopAdDialog
    void clickPopAd() -> clickPopAd
    boolean hasPopAd(android.content.Context) -> hasPopAd
    android.widget.LinearLayout getPopAdView(android.content.Context) -> getPopAdView
    android.widget.LinearLayout getPopAdView(android.content.Context,int,int) -> getPopAdView
    void showBannerAd(android.content.Context,android.widget.LinearLayout) -> showBannerAd
    void showMiniAd(android.content.Context,android.widget.LinearLayout,int) -> showMiniAd
    void initFunAd(android.content.Context) -> initFunAd
    void showFunAd(android.content.Context,java.lang.String,java.lang.String) -> showFunAd
    void showBrowser(android.content.Context,java.lang.String) -> showBrowser
    void showBrowser(android.content.Context,java.lang.String,boolean) -> showBrowser
    void showPlayer(android.content.Context,java.lang.String) -> showPlayer
    void showPlayer(android.content.Context,java.lang.String,boolean) -> showPlayer
    java.lang.String a(cn.waps.AppConnect) -> a
    cn.waps.ad e() -> e
    boolean a(cn.waps.AppConnect,java.lang.String) -> a
    android.content.SharedPreferences f() -> f
    java.lang.String b(cn.waps.AppConnect) -> b
    boolean g() -> g
    java.lang.String c(cn.waps.AppConnect) -> c
    java.lang.String h() -> h
    boolean i() -> i
    boolean j() -> j
    boolean k() -> k
    void d(cn.waps.AppConnect) -> d
    java.lang.String l() -> l
    java.lang.String c(java.lang.String) -> c
    java.lang.String m() -> m
    java.lang.String n() -> n
    java.lang.String e(cn.waps.AppConnect) -> e
    boolean b(cn.waps.AppConnect,java.lang.String) -> b
    java.lang.String f(cn.waps.AppConnect) -> f
    java.lang.String g(cn.waps.AppConnect) -> g
    int c(cn.waps.AppConnect,java.lang.String) -> c
    java.lang.String d(cn.waps.AppConnect,java.lang.String) -> d
    cn.waps.AppListener h(cn.waps.AppConnect) -> h
    cn.waps.UpdatePointsNotifier o() -> o
    java.lang.String a(cn.waps.AppConnect,int,android.content.SharedPreferences) -> a
    boolean e(cn.waps.AppConnect,java.lang.String) -> e
    java.lang.String i(cn.waps.AppConnect) -> i
    void a(cn.waps.AppConnect,java.lang.String,int) -> a
    java.lang.String j(cn.waps.AppConnect) -> j
    java.lang.String p() -> p
    java.lang.String d(java.lang.String) -> d
    boolean f(cn.waps.AppConnect,java.lang.String) -> f
    void g(cn.waps.AppConnect,java.lang.String) -> g
    boolean a(boolean) -> a
cn.waps.AppListener -> cn.waps.AppListener:
    void a() -> a
    void onOffersClose() -> onOffersClose
    void onBannerClose() -> onBannerClose
    void onGetConfig(java.lang.String) -> onGetConfig
cn.waps.AppLog -> cn.waps.AppLog:
    boolean showLog -> showLog
    void enableLogging(boolean) -> enableLogging
    void i(java.lang.String,java.lang.String) -> i
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void d(java.lang.String,java.lang.String) -> d
    void v(java.lang.String,java.lang.String) -> v
cn.waps.SDKUtils -> cn.waps.SDKUtils:
    android.content.Context b -> b
    android.content.pm.PackageManager c -> c
    android.content.pm.PackageInfo d -> d
    android.os.Handler e -> e
    android.webkit.WebView f -> f
    android.widget.RelativeLayout g -> g
    android.widget.LinearLayout h -> h
    cn.waps.AppListener i -> i
    android.app.Dialog j -> j
    java.lang.String a -> a
    void close() -> close
    void closeSubmit(java.lang.String) -> closeSubmit
    void closeOfDialog(java.lang.String) -> closeOfDialog
    void submit(java.lang.String,java.lang.String) -> submit
    java.lang.String getUdid() -> getUdid
    java.lang.String getMac_Address() -> getMac_Address
    java.lang.String getAppVersion(java.lang.String) -> getAppVersion
    java.lang.String getLanguageCode() -> getLanguageCode
    void load(java.lang.String) -> load
    java.lang.String getInstalled() -> getInstalled
    java.lang.String isInstalled(java.lang.String) -> isInstalled
    java.lang.String getBrowserPackageName(java.lang.String) -> getBrowserPackageName
    void goToTargetBrowser(java.lang.String,java.lang.String) -> goToTargetBrowser
    android.content.Intent goToTargetBrowser_Intent(java.lang.String,java.lang.String) -> goToTargetBrowser_Intent
    android.content.Intent goToTargetBrowser_Intent(java.lang.String,java.lang.String,java.lang.String) -> goToTargetBrowser_Intent
    void openUrlByBrowser(java.lang.String,java.lang.String) -> openUrlByBrowser
    android.content.Intent openUrlByBrowser_Intent(java.lang.String,java.lang.String) -> openUrlByBrowser_Intent
    void openAppByUri(java.lang.String,java.lang.String,java.lang.String) -> openAppByUri
    java.util.Map getAppInfoMap(java.lang.String) -> getAppInfoMap
    java.lang.String getRunningAppPackageNames() -> getRunningAppPackageNames
    boolean isCmwap() -> isCmwap
    boolean isWapNetwork() -> isWapNetwork
    boolean isConnect() -> isConnect
    java.lang.String getResponseResult(org.apache.http.HttpResponse) -> getResponseResult
    void closeAd() -> closeAd
    void hideAd() -> hideAd
    void openAd() -> openAd
    void openAd(java.lang.String) -> openAd
    void full_screen() -> full_screen
    int initAdWidth() -> initAdWidth
    java.lang.String getScreenStatus() -> getScreenStatus
    void saveDataToLocal(java.lang.String,java.lang.String,java.lang.String,boolean) -> saveDataToLocal
    java.lang.String loadStringFromLocal(java.lang.String,java.lang.String) -> loadStringFromLocal
    void saveDataToLocal(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> saveDataToLocal
    java.io.InputStream loadStreamFromLocal(java.lang.String,java.lang.String) -> loadStreamFromLocal
    void deleteLocalFiles(java.io.File) -> deleteLocalFiles
    java.io.InputStream getNetDataToStream(java.lang.String) -> getNetDataToStream
    boolean isTimeLimited(java.lang.String,java.lang.String) -> isTimeLimited
    java.lang.String[] splitString(java.lang.String,java.lang.String,java.lang.String) -> splitString
    java.lang.String getNodeTrimValues(org.w3c.dom.NodeList) -> getNodeTrimValues
    java.util.List getList(java.lang.String) -> getList
    java.lang.String replaceData(java.lang.String) -> replaceData
    java.lang.String[] getAllPermissions() -> getAllPermissions
    boolean hasThePermission(java.lang.String) -> hasThePermission
    void callTel(java.lang.String) -> callTel
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    void showToast(java.lang.String) -> showToast
    java.lang.String getAppName() -> getAppName
    java.lang.String isVisible() -> isVisible
    boolean isWifi() -> isWifi
    int getDisplaySize(android.content.Context) -> getDisplaySize
    void getHtml(java.lang.String) -> getHtml
    android.content.Context access$000(cn.waps.SDKUtils) -> access$000
    android.widget.RelativeLayout access$100(cn.waps.SDKUtils) -> access$100
    android.widget.LinearLayout access$200(cn.waps.SDKUtils) -> access$200
    cn.waps.AppListener access$300(cn.waps.SDKUtils) -> access$300
cn.waps.UpdatePointsNotifier -> cn.waps.UpdatePointsNotifier:
    void getUpdatePoints(java.lang.String,int) -> getUpdatePoints
    void getUpdatePointsFailed(java.lang.String) -> getUpdatePointsFailed
cn.waps.a -> cn.waps.a:
    android.content.Context c -> c
    android.widget.LinearLayout d -> d
    long e -> e
    android.widget.RelativeLayout f -> f
    int g -> g
    boolean h -> h
    android.os.Handler i -> i
    android.webkit.WebView j -> j
    boolean a -> a
    boolean k -> k
    int l -> l
    float m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.util.Map p -> p
    cn.waps.AppListener q -> q
    android.os.Handler r -> r
    java.lang.Thread b -> b
    void a(android.content.Context,android.widget.LinearLayout,cn.waps.AppListener) -> a
    void a() -> a
    void a(int) -> a
    android.webkit.WebView b() -> b
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String) -> a
    android.content.Context a(cn.waps.a) -> a
    boolean b(cn.waps.a) -> b
    java.lang.String c(cn.waps.a) -> c
    void a(cn.waps.a,android.webkit.WebView,java.lang.String) -> a
    boolean a(cn.waps.a,boolean) -> a
    long d(cn.waps.a) -> d
    int e(cn.waps.a) -> e
    boolean f(cn.waps.a) -> f
    boolean b(cn.waps.a,boolean) -> b
    long a(cn.waps.a,long) -> a
    android.widget.RelativeLayout g(cn.waps.a) -> g
    android.os.Handler h(cn.waps.a) -> h
    int a(cn.waps.a,int) -> a
    int i(cn.waps.a) -> i
    void a(cn.waps.a,java.lang.String) -> a
cn.waps.aa -> cn.waps.aa:
    android.app.Notification a -> a
    android.app.NotificationManager f -> f
    android.content.Context g -> g
    java.lang.String h -> h
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    long e -> e
    java.util.Map i -> i
    java.util.concurrent.ScheduledExecutorService j -> j
    void a(java.lang.String,int,java.lang.String) -> a
    void a(java.lang.String,int,java.lang.Object[],java.lang.String,boolean) -> a
    android.widget.ImageView a(android.view.View) -> a
    void b(java.lang.String,int,java.lang.String) -> b
    void a(int,java.lang.String) -> a
    void a(int) -> a
cn.waps.ab -> cn.waps.b:
    android.content.Context a -> a
    java.lang.String b -> b
    cn.waps.aa c -> c
    void run() -> run
cn.waps.ac -> cn.waps.ac:
    java.lang.String e -> e
    int a -> a
    cn.waps.aa b -> b
    java.lang.String f -> f
    android.content.SharedPreferences g -> g
    android.content.SharedPreferences$Editor h -> h
    boolean c -> c
    boolean d -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.waps.ad -> cn.waps.ad:
    cn.waps.SDKUtils b -> b
    android.content.Context c -> c
    java.lang.String a -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.lang.String a() -> a
cn.waps.ae -> cn.waps.ae:
    boolean a -> a
    byte[] a(java.lang.String,int) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    java.lang.String b(byte[],int) -> b
    byte[] c(byte[],int) -> c
    byte[] b(byte[],int,int,int) -> b
cn.waps.af -> cn.waps.c:
    byte[] a -> a
    int b -> b
cn.waps.ag -> cn.waps.d:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
cn.waps.ah -> cn.waps.e:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
cn.waps.ai -> cn.waps.ai:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    void a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
    java.lang.String s() -> s
    java.lang.String t() -> t
    java.lang.String u() -> u
    java.lang.String v() -> v
    java.lang.String w() -> w
    java.lang.String x() -> x
    java.lang.String y() -> y
    java.lang.String z() -> z
    java.lang.String A() -> A
    java.lang.String B() -> B
    java.lang.String C() -> C
    java.lang.String D() -> D
    java.lang.String E() -> E
    java.lang.String F() -> F
    java.lang.String G() -> G
    java.lang.String H() -> H
    java.lang.String I() -> I
cn.waps.aj -> cn.waps.aj:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    cn.waps.aj b -> b
    android.content.Context c -> c
    cn.waps.al d -> d
    cn.waps.ad e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    cn.waps.aj a(android.content.Context,cn.waps.ad,java.lang.String) -> a
    void a() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean a(java.lang.Throwable) -> a
    void a(android.content.Context) -> a
    java.lang.String d() -> d
    void b(java.lang.Throwable) -> b
    java.lang.String a(cn.waps.aj) -> a
    java.lang.String b(cn.waps.aj) -> b
    cn.waps.ad b() -> b
    java.lang.String c(cn.waps.aj) -> c
    android.content.Context c() -> c
cn.waps.ak -> cn.waps.f:
cn.waps.al -> cn.waps.g:
    cn.waps.aj a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.am -> cn.waps.am:
    java.lang.String a -> a
    java.lang.String r -> r
    cn.waps.aa s -> s
    cn.waps.ac t -> t
    android.content.Context u -> u
    java.lang.String v -> v
    int b -> b
    java.lang.String c -> c
    java.lang.String w -> w
    boolean d -> d
    boolean e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    boolean x -> x
    android.os.Handler h -> h
    java.lang.Integer i -> i
    double j -> j
    double k -> k
    java.text.NumberFormat l -> l
    java.io.InputStream m -> m
    java.io.FileOutputStream n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    boolean q -> q
    java.io.File y -> y
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void run() -> run
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.net.HttpURLConnection,java.lang.String,double,double,java.lang.String,int,java.io.InputStream,cn.waps.aa,boolean) -> a
    void c(java.lang.String) -> c
    void a(android.os.Bundle) -> a
    void d(java.lang.String) -> d
    java.io.File a(android.content.Context,java.lang.String) -> a
    android.content.Context a(cn.waps.am) -> a
    cn.waps.aa b(cn.waps.am) -> b
cn.waps.an -> cn.waps.h:
    cn.waps.am a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.waps.ao -> cn.waps.i:
    cn.waps.am a -> a
    void run() -> run
cn.waps.ap -> cn.waps.ap:
    java.lang.String a -> a
    java.io.File b -> b
    android.app.AlertDialog c -> c
    java.util.Map d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    cn.waps.ac g -> g
    boolean h -> h
    java.lang.Thread i -> i
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    cn.waps.am a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,cn.waps.am,java.lang.String,java.lang.String,int,java.lang.String) -> a
    void a(android.content.Context,cn.waps.ac) -> a
    java.lang.String a(java.lang.String) -> a
    long a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b(android.content.Context,java.lang.String) -> b
    java.lang.String c(android.content.Context,java.lang.String) -> c
    java.lang.String a(cn.waps.ap,java.lang.String) -> a
    java.util.Map a() -> a
    java.util.Map a(java.util.Map) -> a
    boolean a(cn.waps.ap) -> a
    boolean a(cn.waps.ap,boolean) -> a
    java.lang.String b(cn.waps.ap) -> b
    java.io.File c(cn.waps.ap) -> c
    java.lang.String d(cn.waps.ap) -> d
    java.lang.String e(cn.waps.ap) -> e
    cn.waps.ac a(cn.waps.ap,cn.waps.ac) -> a
    cn.waps.ac f(cn.waps.ap) -> f
cn.waps.aq -> cn.waps.j:
    android.content.Context a -> a
    cn.waps.am b -> b
    cn.waps.ap c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.ar -> cn.waps.k:
    android.content.Context a -> a
    cn.waps.ap b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.as -> cn.waps.l:
    android.content.Context a -> a
    cn.waps.ap b -> b
    void run() -> run
cn.waps.at -> cn.waps.m:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    cn.waps.ap f -> f
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.au -> cn.waps.au:
    android.content.Context a -> a
    cn.waps.ad b -> b
    java.lang.String c -> c
    java.util.List d -> d
    void a() -> a
    void a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    void a(android.content.Context,java.util.List,java.lang.String,boolean) -> a
    void a(android.content.Context,java.util.List,int,java.lang.String,boolean) -> a
    java.util.List a(java.io.InputStream) -> a
    void b() -> b
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    android.widget.LinearLayout a(android.content.Context,android.app.Dialog,java.util.List,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(cn.waps.au) -> a
    cn.waps.ad b(cn.waps.au) -> b
    java.util.List a(cn.waps.au,java.util.List) -> a
    void a(cn.waps.au,android.content.Context,java.util.List,int,java.lang.String,boolean) -> a
cn.waps.av -> cn.waps.n:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.waps.au d -> d
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.aw -> cn.waps.o:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    cn.waps.au e -> e
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.ax -> cn.waps.p:
    android.widget.CheckBox a -> a
    cn.waps.au b -> b
    void onClick(android.view.View) -> onClick
cn.waps.ay -> cn.waps.q:
    android.content.Context a -> a
    java.util.List b -> b
    java.lang.String c -> c
    boolean d -> d
    android.widget.CheckBox e -> e
    android.app.Dialog f -> f
    cn.waps.au g -> g
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.waps.az -> cn.waps.r:
    java.util.List a -> a
    cn.waps.au b -> b
    java.lang.String a(java.lang.Void[]) -> a
    void a(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.b -> cn.waps.s:
    android.webkit.WebView a -> a
    cn.waps.a b -> b
    void run() -> run
cn.waps.ba -> cn.waps.t:
    android.content.Context a -> a
    java.util.List b -> b
    java.lang.String c -> c
    cn.waps.au d -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.waps.bb -> cn.waps.u:
    cn.waps.au a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.bc -> cn.waps.bc:
    java.util.Map a() -> a
    java.util.Map b() -> b
cn.waps.bd -> cn.waps.bd:
    android.os.Handler a -> a
    android.widget.LinearLayout b -> b
    boolean c -> c
    android.view.View d -> d
    android.content.Context e -> e
    long f -> f
    int g -> g
    cn.waps.AnimationType j -> j
    int k -> k
    boolean l -> l
    int m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    java.lang.String q -> q
    android.content.SharedPreferences r -> r
    android.content.SharedPreferences$Editor s -> s
    cn.waps.AdInfo t -> t
    java.lang.String u -> u
    java.lang.Runnable h -> h
    android.widget.TextView i -> i
    void a(int) -> a
    void b() -> b
    void c() -> c
    void c(int) -> c
    android.view.View$OnClickListener a(android.content.Context,int) -> a
    android.widget.LinearLayout a(android.content.Context,android.graphics.Bitmap,java.lang.String,int) -> a
    void a(cn.waps.bd) -> a
    boolean b(cn.waps.bd) -> b
    int c(cn.waps.bd) -> c
    int d(cn.waps.bd) -> d
    int a() -> a
    int a(cn.waps.bd,int) -> a
    int b(int) -> b
    void b(cn.waps.bd,int) -> b
    boolean a(cn.waps.bd,boolean) -> a
    int e(cn.waps.bd) -> e
cn.waps.be -> cn.waps.v:
    cn.waps.bd a -> a
    void run() -> run
cn.waps.bf -> cn.waps.w:
    cn.waps.bd a -> a
    void run() -> run
cn.waps.bg -> cn.waps.x:
    cn.waps.bd a -> a
    void run() -> run
cn.waps.bh -> cn.waps.y:
    cn.waps.bg a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.waps.bi -> cn.waps.bi:
    int a -> a
    android.content.Context b -> b
    cn.waps.bd c -> c
    void onClick(android.view.View) -> onClick
cn.waps.bj -> cn.waps.bj:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    cn.waps.AppListener k -> k
    android.os.Handler l -> l
    java.util.HashMap m -> m
    java.util.HashMap n -> n
    int o -> o
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    java.lang.String h() -> h
    void h(java.lang.String) -> h
    java.lang.String i() -> i
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    android.os.Handler j() -> j
    void a(android.os.Handler) -> a
    java.util.HashMap k() -> k
    void a(java.util.HashMap) -> a
    java.util.HashMap l() -> l
    void b(java.util.HashMap) -> b
    int m() -> m
    void a(int) -> a
cn.waps.bk -> cn.waps.bk:
    android.app.Dialog a -> a
    android.app.Dialog a(android.content.Context,cn.waps.bj) -> a
cn.waps.bl -> cn.waps.bl:
    android.webkit.WebView m -> m
    java.lang.String n -> n
    android.widget.ProgressBar o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    cn.waps.am a -> a
    boolean z -> z
    java.lang.String A -> A
    java.util.Map B -> B
    java.lang.String b -> b
    java.lang.String c -> c
    android.widget.LinearLayout d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    cn.waps.aa g -> g
    java.lang.String h -> h
    java.util.HashMap C -> C
    java.util.HashMap D -> D
    int E -> E
    android.content.SharedPreferences i -> i
    java.io.File j -> j
    android.app.AlertDialog k -> k
    android.os.Handler l -> l
    android.view.View a(android.content.Context,android.webkit.WebView,cn.waps.bj,android.app.Dialog) -> a
    void a(android.content.Context,cn.waps.am,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,android.app.Dialog) -> a
    boolean b(android.webkit.WebView,android.app.Dialog) -> b
    void a(android.content.Context,cn.waps.bj) -> a
    java.lang.String a(cn.waps.bl) -> a
    java.util.Map a() -> a
    java.lang.String b(cn.waps.bl) -> b
    java.lang.String c(cn.waps.bl) -> c
    android.webkit.WebView d(cn.waps.bl) -> d
    java.lang.String e(cn.waps.bl) -> e
    void a(cn.waps.bl,android.content.Context,cn.waps.am,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(cn.waps.bl,java.lang.String) -> a
    java.util.Map a(java.util.Map) -> a
    java.util.HashMap f(cn.waps.bl) -> f
    int g(cn.waps.bl) -> g
    java.util.HashMap h(cn.waps.bl) -> h
    boolean i(cn.waps.bl) -> i
    boolean a(cn.waps.bl,boolean) -> a
    android.widget.ProgressBar j(cn.waps.bl) -> j
    java.lang.String b(cn.waps.bl,java.lang.String) -> b
    java.lang.String c(cn.waps.bl,java.lang.String) -> c
cn.waps.bm -> cn.waps.z:
    android.content.Context a -> a
    android.app.Dialog b -> b
    cn.waps.bl c -> c
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
cn.waps.bn -> cn.waps.ab:
    cn.waps.bm a -> a
    void a() -> a
cn.waps.bo -> cn.waps.af:
    android.webkit.WebView a -> a
    cn.waps.bl b -> b
    void onCancel(android.content.DialogInterface) -> onCancel
cn.waps.bp -> cn.waps.ag:
    android.app.Dialog a -> a
    android.webkit.WebView b -> b
    cn.waps.bl c -> c
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
cn.waps.bq -> cn.waps.ah:
    android.content.Context a -> a
    cn.waps.bl b -> b
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.waps.br -> cn.waps.br:
    android.content.Context i -> i
    cn.waps.ad j -> j
    android.content.SharedPreferences k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    android.app.Dialog q -> q
    java.util.List r -> r
    java.lang.String s -> s
    cn.waps.ce t -> t
    java.util.List a -> a
    android.os.Handler u -> u
    boolean v -> v
    java.util.List b -> b
    float c -> c
    float d -> d
    android.widget.ViewFlipper e -> e
    java.util.List f -> f
    boolean g -> g
    java.lang.String h -> h
    void a(android.content.Context,cn.waps.ad,android.content.SharedPreferences,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,int) -> a
    android.app.Dialog a() -> a
    void a(android.content.Context,java.util.List,boolean,int) -> a
    java.util.List a(java.io.InputStream) -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.util.List) -> a
    void a(cn.waps.AdInfo) -> a
    android.widget.LinearLayout a(cn.waps.AdInfo,android.content.Context,android.app.Dialog) -> a
    android.widget.LinearLayout a(cn.waps.AdInfo,android.content.Context,android.app.Dialog,int,int) -> a
    android.widget.LinearLayout b(cn.waps.AdInfo,android.content.Context,android.app.Dialog,int,int) -> b
    void a(cn.waps.AdInfo,android.widget.ViewFlipper,android.widget.LinearLayout) -> a
    void b() -> b
    void a(java.lang.String,android.app.Dialog) -> a
    boolean c(android.content.Context) -> c
    cn.waps.AdInfo a(android.content.Context,java.util.List) -> a
    android.widget.LinearLayout a(android.content.Context,int,int) -> a
    cn.waps.AdInfo a(cn.waps.br,android.content.Context,java.util.List) -> a
    android.widget.LinearLayout a(cn.waps.br,cn.waps.AdInfo,android.content.Context,android.app.Dialog,int,int) -> a
    void a(cn.waps.br,cn.waps.AdInfo,android.widget.ViewFlipper,android.widget.LinearLayout) -> a
    android.content.SharedPreferences a(cn.waps.br) -> a
    java.lang.String b(cn.waps.br) -> b
    java.util.List c(cn.waps.br) -> c
    boolean a(cn.waps.br,boolean) -> a
    java.lang.String d(cn.waps.br) -> d
    cn.waps.ad e(cn.waps.br) -> e
    java.util.List a(cn.waps.br,java.util.List) -> a
    java.util.List a(cn.waps.br,java.io.InputStream) -> a
    void a(cn.waps.br,android.content.Context,java.util.List,boolean,int) -> a
    java.lang.String f(cn.waps.br) -> f
    java.lang.String g(cn.waps.br) -> g
    java.lang.String h(cn.waps.br) -> h
    void b(cn.waps.br,java.util.List) -> b
    void a(cn.waps.br,cn.waps.AdInfo) -> a
    void a(cn.waps.br,java.lang.String,android.app.Dialog) -> a
    android.os.Handler c() -> c
    java.lang.String i(cn.waps.br) -> i
    android.content.Context j(cn.waps.br) -> j
cn.waps.bs -> cn.waps.ak:
    cn.waps.br a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.waps.bt -> cn.waps.al:
    android.app.Dialog a -> a
    cn.waps.br b -> b
    void onClick(android.view.View) -> onClick
cn.waps.bu -> cn.waps.an:
    java.lang.String a -> a
    android.app.Dialog b -> b
    android.widget.LinearLayout c -> c
    android.widget.LinearLayout d -> d
    cn.waps.br e -> e
    void onClick(android.view.View) -> onClick
cn.waps.bv -> cn.waps.ao:
    android.widget.LinearLayout a -> a
    android.widget.LinearLayout b -> b
    android.view.animation.TranslateAnimation c -> c
    android.view.animation.TranslateAnimation d -> d
    android.content.Context e -> e
    android.app.Dialog f -> f
    int g -> g
    int h -> h
    android.view.animation.TranslateAnimation i -> i
    android.view.animation.TranslateAnimation j -> j
    cn.waps.br k -> k
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.waps.bw -> cn.waps.aq:
    cn.waps.bv a -> a
    void run() -> run
cn.waps.bx -> cn.waps.ar:
    java.lang.String a -> a
    android.app.Dialog b -> b
    android.widget.LinearLayout c -> c
    android.widget.LinearLayout d -> d
    android.content.Context e -> e
    cn.waps.br f -> f
    void onClick(android.view.View) -> onClick
cn.waps.by -> cn.waps.as:
    android.widget.LinearLayout a -> a
    android.widget.LinearLayout b -> b
    cn.waps.br c -> c
    void onClick(android.view.View) -> onClick
cn.waps.bz -> cn.waps.at:
    android.widget.LinearLayout a -> a
    android.graphics.drawable.GradientDrawable b -> b
    android.graphics.drawable.GradientDrawable c -> c
    cn.waps.br d -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.waps.c -> cn.waps.av:
    java.lang.String a -> a
    android.webkit.WebView b -> b
    cn.waps.a c -> c
    void run() -> run
cn.waps.ca -> cn.waps.aw:
    cn.waps.bj a -> a
    cn.waps.br b -> b
    void run() -> run
cn.waps.cb -> cn.waps.ax:
    android.app.Dialog a -> a
    cn.waps.br b -> b
    void onDraw(android.graphics.Canvas) -> onDraw
cn.waps.cc -> cn.waps.ay:
    cn.waps.AdInfo a -> a
    android.widget.LinearLayout b -> b
    cn.waps.br c -> c
    void run() -> run
cn.waps.cd -> cn.waps.az:
    cn.waps.cc a -> a
    void run() -> run
cn.waps.ce -> cn.waps.ba:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    java.lang.String d -> d
    cn.waps.br e -> e
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.cf -> cn.waps.bb:
    cn.waps.AdInfo a -> a
    cn.waps.br b -> b
    void run() -> run
cn.waps.cg -> cn.waps.be:
    cn.waps.cf a -> a
    void run() -> run
cn.waps.ch -> cn.waps.bf:
    java.util.List a -> a
    cn.waps.AdInfo b -> b
    cn.waps.br c -> c
    java.lang.Boolean a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.ci -> cn.waps.bg:
    android.widget.ImageView a -> a
    cn.waps.br b -> b
    void run() -> run
cn.waps.cj -> cn.waps.cj:
    android.content.Context a -> a
    cn.waps.SDKUtils b -> b
    java.net.HttpURLConnection a(java.lang.String,java.util.List,byte[]) -> a
    java.net.HttpURLConnection a(java.lang.String) -> a
    boolean a(android.webkit.WebView,java.lang.String) -> a
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,int) -> a
    boolean b(java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    boolean a() -> a
    void a(android.content.SharedPreferences) -> a
    boolean a(int,int) -> a
    java.lang.Object[] e(java.lang.String) -> e
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
cn.waps.ck -> cn.waps.bh:
    cn.waps.cj a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.cl -> cn.waps.bm:
    cn.waps.SDKUtils a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.cm -> cn.waps.bn:
    cn.waps.SDKUtils a -> a
    void run() -> run
cn.waps.cn -> cn.waps.bo:
    cn.waps.SDKUtils a -> a
    void run() -> run
cn.waps.co -> cn.waps.bp:
    java.lang.String a -> a
    cn.waps.SDKUtils b -> b
    void run() -> run
cn.waps.cp -> cn.waps.bq:
    cn.waps.SDKUtils a -> a
    void run() -> run
cn.waps.cq -> cn.waps.cq:
    android.graphics.drawable.ShapeDrawable a(float,java.lang.String) -> a
    android.graphics.drawable.ShapeDrawable b(float,java.lang.String) -> b
    android.graphics.drawable.ShapeDrawable c(float,java.lang.String) -> c
cn.waps.d -> cn.waps.bs:
    cn.waps.bj a -> a
    cn.waps.a b -> b
    void run() -> run
cn.waps.e -> cn.waps.bt:
    cn.waps.a a -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.waps.f -> cn.waps.bu:
    cn.waps.e a -> a
    void run() -> run
cn.waps.g -> cn.waps.bv:
    cn.waps.e a -> a
    void run() -> run
cn.waps.h -> cn.waps.bw:
    android.webkit.WebView a -> a
    cn.waps.e b -> b
    void run() -> run
cn.waps.i -> cn.waps.bx:
    java.lang.String a -> a
    cn.waps.AppConnect b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.j -> cn.waps.by:
    cn.waps.AppConnect a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.k -> cn.waps.bz:
    android.app.Dialog a -> a
    cn.waps.AppConnect b -> b
    void run() -> run
cn.waps.l -> cn.waps.ca:
    cn.waps.AppConnect a -> a
    void onShow(android.content.DialogInterface) -> onShow
cn.waps.m -> cn.waps.cb:
    android.content.Context a -> a
    cn.waps.bj b -> b
    cn.waps.AppConnect c -> c
    void run() -> run
cn.waps.n -> cn.waps.cc:
    cn.waps.AppConnect a -> a
    void run() -> run
cn.waps.o -> cn.waps.cd:
    android.content.Context a -> a
    cn.waps.bj b -> b
    cn.waps.AppConnect c -> c
    void run() -> run
cn.waps.p -> cn.waps.ce:
    android.content.Context a -> a
    cn.waps.AppConnect b -> b
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.q -> cn.waps.cf:
    cn.waps.p a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.r -> cn.waps.cg:
    cn.waps.p a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.waps.s -> cn.waps.ch:
    java.lang.String a -> a
    cn.waps.AppConnect b -> b
    java.lang.Boolean a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.t -> cn.waps.ci:
    cn.waps.AppConnect a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.u -> cn.waps.ck:
    cn.waps.AppConnect a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.v -> cn.waps.cl:
    cn.waps.AppConnect a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.w -> cn.waps.cm:
    java.lang.String b -> b
    cn.waps.AppConnect a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.x -> cn.waps.cn:
    cn.waps.AppConnect a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.y -> cn.waps.co:
    cn.waps.AppConnect a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.waps.z -> cn.waps.cp:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.waps.AppListener c -> c
    cn.waps.AppConnect d -> d
    java.lang.String a(java.lang.String[]) -> a
    void a(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.github.snowdream.android.app.AsycDownloadTask -> com.github.snowdream.android.app.AsycDownloadTask:
    int MESSAGE_POST_ERROR -> MESSAGE_POST_ERROR
    int MESSAGE_POST_ADD -> MESSAGE_POST_ADD
    int MESSAGE_POST_FINISH -> MESSAGE_POST_FINISH
    int MODE_DEFAULT -> MODE_DEFAULT
    int MODE_TRUNKED -> MODE_TRUNKED
    java.lang.String STORE_PATH -> STORE_PATH
    com.github.snowdream.android.app.AsycDownloadTask$InternalHandler sHandler -> sHandler
    boolean isOnlyGetHead -> isOnlyGetHead
    int mode -> mode
    void OnError(com.github.snowdream.android.app.DownloadTask,java.lang.Integer) -> OnError
    void OnAdd(com.github.snowdream.android.app.DownloadTask) -> OnAdd
    void OnFinish(com.github.snowdream.android.app.DownloadTask) -> OnFinish
    void SaveDownloadTask(com.github.snowdream.android.app.DownloadTask,int) -> SaveDownloadTask
    void SendError(com.github.snowdream.android.app.DownloadTask,java.lang.Integer) -> SendError
    void SendAdd(com.github.snowdream.android.app.DownloadTask) -> SendAdd
    void SendFinish(com.github.snowdream.android.app.DownloadTask) -> SendFinish
    com.github.snowdream.android.app.DownloadTask doInBackground(com.github.snowdream.android.app.DownloadTask[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void access$1(com.github.snowdream.android.app.AsycDownloadTask,com.github.snowdream.android.app.DownloadTask,java.lang.Integer) -> access$1
    void access$2(com.github.snowdream.android.app.AsycDownloadTask,com.github.snowdream.android.app.DownloadTask) -> access$2
    void access$3(com.github.snowdream.android.app.AsycDownloadTask,com.github.snowdream.android.app.DownloadTask) -> access$3
com.github.snowdream.android.app.AsycDownloadTask$AsyncTaskResult -> com.github.snowdream.android.app.a:
    java.lang.Integer mData -> a
    com.github.snowdream.android.app.DownloadTask mDownloadTask -> b
    com.github.snowdream.android.util.concurrent.AsyncTask mTask -> c
com.github.snowdream.android.app.AsycDownloadTask$InternalHandler -> com.github.snowdream.android.app.b:
    void handleMessage(android.os.Message) -> handleMessage
com.github.snowdream.android.app.DownloadException -> com.github.snowdream.android.app.DownloadException:
    int CONTEXT_NOT_VALID -> CONTEXT_NOT_VALID
    int DOWNLOAD_TASK_FAILED -> DOWNLOAD_TASK_FAILED
    int DOWNLOAD_TASK_NOT_VALID -> DOWNLOAD_TASK_NOT_VALID
    int OPERATION_NOT_VALID -> OPERATION_NOT_VALID
    int UNKNOWN -> UNKNOWN
    long serialVersionUID -> serialVersionUID
    int code -> code
    java.lang.String generateMessageFromCode(int) -> generateMessageFromCode
    int getCode() -> getCode
    void setCode(int) -> setCode
com.github.snowdream.android.app.DownloadListener -> com.github.snowdream.android.app.DownloadListener:
    void onAdd(java.lang.Object) -> onAdd
    void onDelete(java.lang.Object) -> onDelete
    void onStop(java.lang.Object) -> onStop
com.github.snowdream.android.app.DownloadManager -> com.github.snowdream.android.app.DownloadManager:
    android.content.Context context -> context
    com.github.snowdream.android.app.DownloadManager gDownloadManager -> gDownloadManager
    java.util.List mItems -> mItems
    java.util.concurrent.Executor exec -> exec
    java.util.List getList() -> getList
    void pushItem(com.github.snowdream.android.app.DownloadTask) -> pushItem
    void popItem(com.github.snowdream.android.app.DownloadTask) -> popItem
    java.util.concurrent.Executor getExecutor() -> getExecutor
    com.github.snowdream.android.app.DownloadManager getInstance(android.content.Context) -> getInstance
    void OnResult(com.github.snowdream.android.app.DownloadManager$POST_MESSAGE,com.github.snowdream.android.app.DownloadTask,com.github.snowdream.android.app.DownloadListener,java.lang.Integer) -> OnResult
    void add(com.github.snowdream.android.app.DownloadTask,com.github.snowdream.android.app.DownloadListener) -> add
    void delete(com.github.snowdream.android.app.DownloadTask,com.github.snowdream.android.app.DownloadListener) -> delete
    void deleteforever(com.github.snowdream.android.app.DownloadTask,com.github.snowdream.android.app.DownloadListener) -> deleteforever
    boolean start(com.github.snowdream.android.app.DownloadTask,com.github.snowdream.android.app.DownloadListener) -> start
    void stop(com.github.snowdream.android.app.DownloadTask,com.github.snowdream.android.app.DownloadListener) -> stop
com.github.snowdream.android.app.DownloadManager$1 -> com.github.snowdream.android.app.c:
    com.github.snowdream.android.app.DownloadManager this$0 -> a
    com.github.snowdream.android.app.DownloadListener val$listener -> b
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE val$message -> c
    com.github.snowdream.android.app.DownloadTask val$task -> d
    java.lang.Integer val$code -> e
    int[] $SWITCH_TABLE$com$github$snowdream$android$app$DownloadManager$POST_MESSAGE -> f
    void run() -> run
    int[] $SWITCH_TABLE$com$github$snowdream$android$app$DownloadManager$POST_MESSAGE() -> a
com.github.snowdream.android.app.DownloadManager$POST_MESSAGE -> com.github.snowdream.android.app.d:
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE ADD -> a
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE DELETE -> b
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE ERROR -> c
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE START -> d
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE STOP -> e
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE FINISH -> f
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE FINISH_ONLY -> g
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE[] ENUM$VALUES -> h
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE[] values() -> values
    com.github.snowdream.android.app.DownloadManager$POST_MESSAGE valueOf(java.lang.String) -> valueOf
com.github.snowdream.android.app.DownloadSettings -> com.github.snowdream.android.app.DownloadSettings:
    int max_tasks -> max_tasks
    int max_threads -> max_threads
    java.lang.String storage_path -> storage_path
com.github.snowdream.android.app.DownloadStatus -> com.github.snowdream.android.app.DownloadStatus:
    int STATUS_NONE -> STATUS_NONE
    int STATUS_PENDING -> STATUS_PENDING
    int STATUS_RUNNING -> STATUS_RUNNING
    int STATUS_STOPPED -> STATUS_STOPPED
    int STATUS_FINISHED -> STATUS_FINISHED
    int STATUS_FAILED -> STATUS_FAILED
    int STATUS_DELETED -> STATUS_DELETED
com.github.snowdream.android.app.DownloadTask -> com.github.snowdream.android.app.DownloadTask:
    android.content.Context context -> context
    long finishTime -> finishTime
    int id -> id
    com.github.snowdream.android.app.DownloadListener listener -> listener
    java.lang.String mimeType -> mimeType
    java.lang.String name -> name
    java.lang.String path -> path
    long size -> size
    boolean IsshowXiangqing -> IsshowXiangqing
    java.lang.String TextInfo -> TextInfo
    java.lang.String Textxiangqing -> Textxiangqing
    long startTime -> startTime
    int status -> status
    com.github.snowdream.android.app.AsycDownloadTask task -> task
    int type -> type
    java.lang.String url -> url
    int spead -> spead
    boolean bIsClick -> bIsClick
    void setClick(boolean) -> setClick
    boolean getClick() -> getClick
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    long getFinishTime() -> getFinishTime
    void setFinishTime(long) -> setFinishTime
    int getId() -> getId
    void setId(int) -> setId
    com.github.snowdream.android.app.DownloadListener getListener() -> getListener
    void setListener(com.github.snowdream.android.app.DownloadListener) -> setListener
    java.lang.String getMimeType() -> getMimeType
    void setMimeType(java.lang.String) -> setMimeType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    long getSize() -> getSize
    void setSize(long) -> setSize
    boolean geShwoxiangqing() -> geShwoxiangqing
    void setShwoxiangqing(boolean) -> setShwoxiangqing
    long getStartTime() -> getStartTime
    java.lang.String getTextInfo() -> getTextInfo
    void setTextInfo(java.lang.String) -> setTextInfo
    java.lang.String getTextXiangqing() -> getTextXiangqing
    void setTextXiangqing(java.lang.String) -> setTextXiangqing
    void setStartTime(long) -> setStartTime
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int getSpead() -> getSpead
    void setSpead(int) -> setSpead
    boolean isComplete() -> isComplete
    boolean isValid() -> isValid
    void setDownloadTask(com.github.snowdream.android.app.DownloadTask) -> setDownloadTask
    void start(android.content.Context,com.github.snowdream.android.app.DownloadListener,boolean) -> start
    void stop() -> stop
    void delete() -> delete
com.github.snowdream.android.app.DownloadType -> com.github.snowdream.android.app.DownloadType:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_APP -> TYPE_APP
com.github.snowdream.android.app.dao.DatabaseConfigUtil -> com.github.snowdream.android.app.dao.DatabaseConfigUtil:
    void main(java.lang.String[]) -> main
com.github.snowdream.android.app.dao.DatabaseHelper -> com.github.snowdream.android.app.dao.DatabaseHelper:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    com.j256.ormlite.dao.Dao taskDao -> taskDao
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.dao.Dao getTaskDao() -> getTaskDao
    void close() -> close
com.github.snowdream.android.app.dao.ISql -> com.github.snowdream.android.app.dao.ISql:
    void addDownloadTask(com.github.snowdream.android.app.DownloadTask) -> addDownloadTask
    void updateDownloadTask(com.github.snowdream.android.app.DownloadTask) -> updateDownloadTask
    com.github.snowdream.android.app.DownloadTask queryDownloadTask(com.github.snowdream.android.app.DownloadTask) -> queryDownloadTask
    java.util.List queryDownloadTask(java.util.HashMap) -> queryDownloadTask
    java.util.List queryAllDownloadTask() -> queryAllDownloadTask
    void deleteDownloadTask(com.github.snowdream.android.app.DownloadTask) -> deleteDownloadTask
com.github.snowdream.android.app.dao.ISqlImpl -> com.github.snowdream.android.app.dao.ISqlImpl:
    com.github.snowdream.android.app.dao.DatabaseHelper databaseHelper -> databaseHelper
    android.content.Context mContext -> mContext
    void Release() -> Release
    com.github.snowdream.android.app.dao.DatabaseHelper getHelper() -> getHelper
    void addDownloadTask(com.github.snowdream.android.app.DownloadTask) -> addDownloadTask
    void updateDownloadTask(com.github.snowdream.android.app.DownloadTask) -> updateDownloadTask
    com.github.snowdream.android.app.DownloadTask queryDownloadTask(com.github.snowdream.android.app.DownloadTask) -> queryDownloadTask
    java.util.List queryDownloadTask(java.util.HashMap) -> queryDownloadTask
    java.util.List queryAllDownloadTask() -> queryAllDownloadTask
    void deleteDownloadTask(com.github.snowdream.android.app.DownloadTask) -> deleteDownloadTask
com.github.snowdream.android.apps.downloader.DownloadTaskAdapter -> com.github.snowdream.android.apps.downloader.DownloadTaskAdapter:
    android.content.Context mContext -> mContext
    java.util.List mItems -> mItems
    int status -> status
    int list_pos_click -> list_pos_click
    com.github.snowdream.android.app.dao.ISql iSql -> iSql
    java.util.HashMap EntityMap -> EntityMap
    com.github.snowdream.android.app.DownloadManager DM -> DM
    com.github.snowdream.android.app.DownloadListener listener -> listener
    int getCount() -> getCount
    void cleanCount() -> cleanCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void destory() -> destory
    void OpenFile(java.io.File) -> OpenFile
    void showMessage(java.lang.String) -> showMessage
    int access$0(com.github.snowdream.android.apps.downloader.DownloadTaskAdapter) -> access$0
    void access$1(com.github.snowdream.android.apps.downloader.DownloadTaskAdapter,int) -> access$1
    android.content.Context access$2(com.github.snowdream.android.apps.downloader.DownloadTaskAdapter) -> access$2
    com.github.snowdream.android.app.DownloadManager access$3(com.github.snowdream.android.apps.downloader.DownloadTaskAdapter) -> access$3
    com.github.snowdream.android.app.DownloadListener access$4(com.github.snowdream.android.apps.downloader.DownloadTaskAdapter) -> access$4
    void access$5(com.github.snowdream.android.apps.downloader.DownloadTaskAdapter,java.util.List) -> access$5
    void access$6(com.github.snowdream.android.apps.downloader.DownloadTaskAdapter,java.io.File) -> access$6
com.github.snowdream.android.apps.downloader.DownloadTaskAdapter$1 -> com.github.snowdream.android.apps.downloader.a:
    com.github.snowdream.android.apps.downloader.DownloadTaskAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.github.snowdream.android.apps.downloader.DownloadTaskAdapter$2 -> com.github.snowdream.android.apps.downloader.b:
    com.github.snowdream.android.apps.downloader.DownloadTaskAdapter this$0 -> a
    com.github.snowdream.android.app.DownloadTask val$task -> b
    void onClick(android.view.View) -> onClick
com.github.snowdream.android.apps.downloader.DownloadTaskAdapter$3 -> com.github.snowdream.android.apps.downloader.c:
    com.github.snowdream.android.apps.downloader.DownloadTaskAdapter this$0 -> a
    com.github.snowdream.android.app.DownloadTask val$task -> b
    void onClick(android.view.View) -> onClick
com.github.snowdream.android.apps.downloader.DownloadTaskAdapter$4 -> com.github.snowdream.android.apps.downloader.d:
    com.github.snowdream.android.apps.downloader.DownloadTaskAdapter this$0 -> a
    com.github.snowdream.android.app.DownloadTask val$task -> b
    void onClick(android.view.View) -> onClick
com.github.snowdream.android.apps.downloader.DownloadTaskAdapter$5 -> com.github.snowdream.android.apps.downloader.e:
    com.github.snowdream.android.apps.downloader.DownloadTaskAdapter this$0 -> a
    com.github.snowdream.android.app.DownloadTask val$task -> b
    android.widget.TextView val$app_status -> c
    long val$filesize_for -> d
    void onClick(android.view.View) -> onClick
com.github.snowdream.android.apps.downloader.MainActivity -> com.github.snowdream.android.apps.downloader.MainActivity:
    com.github.snowdream.android.app.DownloadManager downloadManager -> downloadManager
    java.util.List list -> list
    com.github.snowdream.android.apps.downloader.DownloadTaskAdapter adapter -> adapter
    int[] statustbl -> statustbl
    com.github.snowdream.android.app.DownloadListener listener -> listener
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    com.github.snowdream.android.apps.downloader.DownloadTaskAdapter access$0(com.github.snowdream.android.apps.downloader.MainActivity) -> access$0
com.github.snowdream.android.apps.downloader.MainActivity$1 -> com.github.snowdream.android.apps.downloader.f:
    com.github.snowdream.android.apps.downloader.MainActivity this$0 -> a
    void onAdd(com.github.snowdream.android.app.DownloadTask) -> a
    void onDelete(com.github.snowdream.android.app.DownloadTask) -> b
    void onStop(com.github.snowdream.android.app.DownloadTask) -> c
    void onStart(com.github.snowdream.android.app.DownloadTask) -> onStart
    void onStart() -> onStart
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onSuccess(com.github.snowdream.android.app.DownloadTask) -> d
    void onCancelled() -> onCancelled
    void onError(java.lang.Throwable) -> onError
    void onFinish() -> onFinish
    void onFinish(com.github.snowdream.android.app.DownloadTask) -> onFinish
    void onDelete(java.lang.Object) -> onDelete
    void onAdd(java.lang.Object) -> onAdd
    void onStop(java.lang.Object) -> onStop
    void onSuccess(java.lang.Object) -> onSuccess
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.github.snowdream.android.apps.downloader.MenuAdapter -> com.github.snowdream.android.apps.downloader.MenuAdapter:
    android.content.Context mContext -> mContext
    java.util.List mItems -> mItems
    com.github.snowdream.android.apps.downloader.MenuAdapter$MenuListener mListener -> mListener
    int mActivePosition -> mActivePosition
    void setListener(com.github.snowdream.android.apps.downloader.MenuAdapter$MenuListener) -> setListener
    void setActivePosition(int) -> setActivePosition
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEnabled(int) -> isEnabled
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.github.snowdream.android.apps.downloader.MenuAdapter$MenuListener -> com.github.snowdream.android.apps.downloader.MenuAdapter$MenuListener:
    void onActiveViewChanged(android.view.View) -> onActiveViewChanged
com.github.snowdream.android.apps.downloader.MenuItem -> com.github.snowdream.android.apps.downloader.MenuItem:
    int mIconRes -> mIconRes
    java.lang.String mTitle -> mTitle
com.github.snowdream.android.util.Log -> com.github.snowdream.android.util.Log:
    void w(java.lang.String) -> w
    void i(java.lang.String) -> i
    void e(java.lang.String,java.lang.Exception) -> e
    void e(java.lang.String) -> e
    void d(java.lang.String) -> d
com.github.snowdream.android.util.concurrent.AsyncTask -> com.github.snowdream.android.util.concurrent.AsyncTask:
    com.github.snowdream.android.util.concurrent.TaskListener listener -> listener
    com.github.snowdream.android.util.concurrent.TaskListener getListener() -> getListener
    void setListener(com.github.snowdream.android.util.concurrent.TaskListener) -> setListener
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onCancelled() -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    java.util.concurrent.Executor getDefaultExecutor() -> getDefaultExecutor
com.github.snowdream.android.util.concurrent.TaskListener -> com.github.snowdream.android.util.concurrent.TaskListener:
    void onStart(com.github.snowdream.android.app.DownloadTask) -> onStart
    void onStart() -> onStart
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onSuccess(java.lang.Object) -> onSuccess
    void onCancelled() -> onCancelled
    void onError(java.lang.Throwable) -> onError
    void onFinish(com.github.snowdream.android.app.DownloadTask) -> onFinish
    void onFinish() -> onFinish
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.AndroidCompiledStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    com.j256.ormlite.android.compat.ApiCompatibility apiCompatibility -> apiCompatibility
    java.lang.String sql -> sql
    android.database.sqlite.SQLiteDatabase db -> db
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    android.database.Cursor cursor -> cursor
    java.util.List args -> args
    java.lang.Integer max -> max
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook cancellationHook -> cancellationHook
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runUpdate() -> runUpdate
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
    android.database.Cursor getCursor() -> getCursor
    java.lang.String toString() -> toString
    int execSql(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.Object[]) -> execSql
    void isInPrep() -> isInPrep
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.String[] getStringArray() -> getStringArray
com.j256.ormlite.android.AndroidCompiledStatement$1 -> com.j256.ormlite.android.a:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.AndroidConnectionSource:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    boolean isOpen -> isOpen
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.support.DatabaseConnectionProxyFactory connectionProxyFactory -> connectionProxyFactory
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
    void setDatabaseConnectionProxyFactory(com.j256.ormlite.support.DatabaseConnectionProxyFactory) -> setDatabaseConnectionProxyFactory
    boolean isCancelQueriesEnabled() -> isCancelQueriesEnabled
    void setCancelQueriesEnabled(boolean) -> setCancelQueriesEnabled
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.AndroidDatabaseConnection:
    java.lang.String ANDROID_VERSION -> ANDROID_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    android.database.sqlite.SQLiteDatabase db -> db
    boolean readWrite -> readWrite
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    boolean isReadWrite() -> isReadWrite
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> update
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> bindArgs
    java.lang.String[] toStrings(java.lang.Object[]) -> toStrings
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.j256.ormlite.android.b:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint -> com.j256.ormlite.android.c:
    java.lang.String name -> a
    int getSavepointId() -> getSavepointId
    java.lang.String getSavepointName() -> getSavepointName
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.AndroidDatabaseResults:
    int MIN_NUM_COLUMN_NAMES_MAP -> MIN_NUM_COLUMN_NAMES_MAP
    android.database.Cursor cursor -> cursor
    java.lang.String[] columnNames -> columnNames
    java.util.Map columnNameMap -> columnNameMap
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean next() -> next
    boolean last() -> last
    boolean previous() -> previous
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int getCount() -> getCount
    int getPosition() -> getPosition
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
    android.database.Cursor getRawCursor() -> getRawCursor
    java.lang.String toString() -> toString
    int lookupColumn(java.lang.String) -> lookupColumn
com.j256.ormlite.android.AndroidLog -> com.j256.ormlite.android.AndroidLog:
    java.lang.String ALL_LOGS_NAME -> ALL_LOGS_NAME
    int REFRESH_LEVEL_CACHE_EVERY -> REFRESH_LEVEL_CACHE_EVERY
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    java.lang.String className -> className
    int levelCacheC -> levelCacheC
    boolean[] levelCache -> levelCache
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void refreshLevelCache() -> refreshLevelCache
    boolean isLevelEnabledInternal(int) -> isLevelEnabledInternal
    int levelToAndroidLevel(com.j256.ormlite.logger.Log$Level) -> levelToAndroidLevel
com.j256.ormlite.android.AndroidLog$1 -> com.j256.ormlite.android.d:
    int[] $SwitchMap$com$j256$ormlite$logger$Log$Level -> a
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.DatabaseTableConfigUtil:
    java.lang.Class annotationFactoryClazz -> annotationFactoryClazz
    java.lang.reflect.Field elementsField -> elementsField
    java.lang.Class annotationMemberClazz -> annotationMemberClazz
    java.lang.reflect.Field nameField -> nameField
    java.lang.reflect.Field valueField -> valueField
    int workedC -> workedC
    int[] configFieldNums -> configFieldNums
    int COLUMN_NAME -> COLUMN_NAME
    int DATA_TYPE -> DATA_TYPE
    int DEFAULT_VALUE -> DEFAULT_VALUE
    int WIDTH -> WIDTH
    int CAN_BE_NULL -> CAN_BE_NULL
    int ID -> ID
    int GENERATED_ID -> GENERATED_ID
    int GENERATED_ID_SEQUENCE -> GENERATED_ID_SEQUENCE
    int FOREIGN -> FOREIGN
    int USE_GET_SET -> USE_GET_SET
    int UNKNOWN_ENUM_NAME -> UNKNOWN_ENUM_NAME
    int THROW_IF_NULL -> THROW_IF_NULL
    int PERSISTED -> PERSISTED
    int FORMAT -> FORMAT
    int UNIQUE -> UNIQUE
    int UNIQUE_COMBO -> UNIQUE_COMBO
    int INDEX -> INDEX
    int UNIQUE_INDEX -> UNIQUE_INDEX
    int INDEX_NAME -> INDEX_NAME
    int UNIQUE_INDEX_NAME -> UNIQUE_INDEX_NAME
    int FOREIGN_AUTO_REFRESH -> FOREIGN_AUTO_REFRESH
    int MAX_FOREIGN_AUTO_REFRESH_LEVEL -> MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int PERSISTER_CLASS -> PERSISTER_CLASS
    int ALLOW_GENERATED_ID_INSERT -> ALLOW_GENERATED_ID_INSERT
    int COLUMN_DEFINITON -> COLUMN_DEFINITON
    int FOREIGN_AUTO_CREATE -> FOREIGN_AUTO_CREATE
    int VERSION -> VERSION
    int FOREIGN_COLUMN_NAME -> FOREIGN_COLUMN_NAME
    int READ_ONLY -> READ_ONLY
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    int getWorkedC() -> getWorkedC
    int[] lookupClasses() -> lookupClasses
    int configFieldNameToNum(java.lang.String) -> configFieldNameToNum
    com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> configFromField
    com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> buildConfig
    void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> assignConfigField
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.e:
    java.lang.String field -> a
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.OpenHelperManager:
    java.lang.String HELPER_CLASS_RESOURCE_NAME -> HELPER_CLASS_RESOURCE_NAME
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class helperClass -> helperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean wasClosed -> wasClosed
    int instanceCount -> instanceCount
    void setOpenHelperClass(java.lang.Class) -> setOpenHelperClass
    void setHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> setHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class) -> getHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> getHelper
    void release() -> release
    void releaseHelper() -> releaseHelper
    void innerSetHelperClass(java.lang.Class) -> innerSetHelperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class) -> loadHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> constructHelper
    java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> lookupHelperClass
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
    java.lang.String toString() -> toString
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteConfigUtil -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil:
    java.lang.String RESOURCE_DIR_NAME -> RESOURCE_DIR_NAME
    java.lang.String RAW_DIR_NAME -> RAW_DIR_NAME
    int maxFindSourceLevel -> maxFindSourceLevel
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    void main(java.lang.String[]) -> main
    void writeConfigFile(java.lang.String) -> writeConfigFile
    void writeConfigFile(java.lang.String,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.lang.Class[]) -> writeConfigFile
    java.io.File findRawDir(java.io.File) -> findRawDir
    void writeHeader(java.io.BufferedWriter) -> writeHeader
    void findAnnotatedClasses(java.util.List,java.io.File,int) -> findAnnotatedClasses
    void writeConfigForTable(java.io.BufferedWriter,java.lang.Class) -> writeConfigForTable
    boolean classHasAnnotations(java.lang.Class) -> classHasAnnotations
    java.lang.String getPackageOfClass(java.io.File) -> getPackageOfClass
    java.io.File findResRawDir(java.io.File) -> findResRawDir
com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1 -> com.j256.ormlite.android.apptools.a:
    boolean accept(java.io.File) -> accept
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> connectionSource
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isOpen -> isOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    boolean isOpen() -> isOpen
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> getDao
    com.j256.ormlite.dao.RuntimeExceptionDao getRuntimeExceptionDao(java.lang.Class) -> getRuntimeExceptionDao
    java.lang.String toString() -> toString
    java.io.InputStream openFileId(android.content.Context,int) -> openFileId
    java.io.InputStream openFile(java.io.File) -> openFile
com.j256.ormlite.android.compat.ApiCompatibility -> com.j256.ormlite.android.compat.ApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook -> com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook:
    void cancel() -> cancel
com.j256.ormlite.android.compat.ApiCompatibilityUtils -> com.j256.ormlite.android.compat.ApiCompatibilityUtils:
    com.j256.ormlite.android.compat.ApiCompatibility compatibility -> compatibility
    int BASE -> BASE
    int BASE_1_1 -> BASE_1_1
    int CUPCAKE -> CUPCAKE
    int DONUT -> DONUT
    int ECLAIR -> ECLAIR
    int ECLAIR_0_1 -> ECLAIR_0_1
    int ECLAIR_MR1 -> ECLAIR_MR1
    int FROYO -> FROYO
    int GINGERBREAD -> GINGERBREAD
    int GINGERBREAD_MR1 -> GINGERBREAD_MR1
    int HONEYCOMB -> HONEYCOMB
    int HONEYCOMB_MR1 -> HONEYCOMB_MR1
    int HONEYCOMB_MR2 -> HONEYCOMB_MR2
    int ICE_CREAM_SANDWICH -> ICE_CREAM_SANDWICH
    int ICE_CREAM_SANDWICH_MR1 -> ICE_CREAM_SANDWICH_MR1
    int JELLY_BEAN -> JELLY_BEAN
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    int JELLY_BEAN_MR2 -> JELLY_BEAN_MR2
    com.j256.ormlite.android.compat.ApiCompatibility getCompatibility() -> getCompatibility
com.j256.ormlite.android.compat.BasicApiCompatibility -> com.j256.ormlite.android.compat.BasicApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook:
    android.os.CancellationSignal cancellationSignal -> cancellationSignal
    void cancel() -> cancel
    android.os.CancellationSignal access$000(com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook) -> access$000
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.dao.BaseDaoImpl:
    boolean initialized -> initialized
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> statementExecutor
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.table.ObjectFactory objectFactory -> objectFactory
    java.lang.ThreadLocal daoConfigLevelLocal -> daoConfigLevelLocal
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> defaultObjectCache
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    void initialize() -> initialize
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    void clearAllInternalObjectCaches() -> clearAllInternalObjectCaches
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> getObjectFactory
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.table.DatabaseTableConfig getTableConfig() -> getTableConfig
    com.j256.ormlite.table.TableInfo getTableInfo() -> getTableInfo
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void setTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setTableConfig
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    void checkForInitialized() -> checkForInitialized
    com.j256.ormlite.dao.ForeignCollection makeEmptyForeignCollection(java.lang.Object,java.lang.String) -> makeEmptyForeignCollection
    com.j256.ormlite.dao.CloseableIterator createIterator(int) -> createIterator
    com.j256.ormlite.dao.CloseableIterator createIterator(com.j256.ormlite.stmt.PreparedQuery,int) -> createIterator
    java.util.List queryForMatching(java.lang.Object,boolean) -> queryForMatching
    java.util.List queryForFieldValues(java.util.Map,boolean) -> queryForFieldValues
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.BaseDaoImpl,int) -> access$000
    com.j256.ormlite.dao.CloseableIterator access$100(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.stmt.PreparedQuery,int) -> access$100
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.dao.a:
    java.util.List initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$2 -> com.j256.ormlite.dao.b:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> a
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$3 -> com.j256.ormlite.dao.c:
    com.j256.ormlite.stmt.PreparedQuery val$preparedQuery -> a
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> b
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.dao.d:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.j256.ormlite.dao.e:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.dao.BaseForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    java.lang.Object parentId -> parentId
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.lang.String orderColumn -> orderColumn
    boolean orderAscending -> orderAscending
    java.lang.Object parent -> parent
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int update(java.lang.Object) -> update
    int refresh(java.lang.Object) -> refresh
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
    boolean addElement(java.lang.Object) -> addElement
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.dao.CloseableIterable:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.dao.CloseableIterator:
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object moveRelative(int) -> moveRelative
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.dao.CloseableWrappedIterable:
    void close() -> close
com.j256.ormlite.dao.CloseableWrappedIterableImpl -> com.j256.ormlite.dao.CloseableWrappedIterableImpl:
    com.j256.ormlite.dao.CloseableIterable iterable -> iterable
    com.j256.ormlite.dao.CloseableIterator iterator -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.Dao -> com.j256.ormlite.dao.Dao:
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.dao.Dao$CreateOrUpdateStatus:
    boolean created -> created
    boolean updated -> updated
    int numLinesChanged -> numLinesChanged
    boolean isCreated() -> isCreated
    boolean isUpdated() -> isUpdated
    int getNumLinesChanged() -> getNumLinesChanged
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.dao.DaoManager:
    java.util.Map configMap -> configMap
    java.util.Map classMap -> classMap
    java.util.Map tableConfigMap -> tableConfigMap
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> lookupDao
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDao
    void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> unregisterDao
    void registerDaoWithTableConfig(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDaoWithTableConfig
    void clearCache() -> clearCache
    void clearDaoCache() -> clearDaoCache
    void addCachedDatabaseConfigs(java.util.Collection) -> addCachedDatabaseConfigs
    void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToClassMap
    void removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> removeDaoToClassMap
    void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToTableMap
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> lookupDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> lookupDao
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> findConstructor
    java.lang.Object createDaoFromConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDaoFromConfig
    com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> doCreateDao
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.dao.f:
    com.j256.ormlite.support.ConnectionSource connectionSource -> a
    java.lang.Class clazz -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.dao.g:
    com.j256.ormlite.support.ConnectionSource connectionSource -> a
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.dao.EagerForeignCollection:
    long serialVersionUID -> serialVersionUID
    java.util.List results -> results
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void close() -> close
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> access$000
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.dao.h:
    int offset -> b
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object next() -> next
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object current() -> current
    java.lang.Object previous() -> previous
    java.lang.Object moveRelative(int) -> moveRelative
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.dao.ForeignCollection:
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int update(java.lang.Object) -> update
    int updateAll() -> updateAll
    int refresh(java.lang.Object) -> refresh
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean add(java.lang.Object) -> add
com.j256.ormlite.dao.GenericRawResults -> com.j256.ormlite.dao.GenericRawResults:
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    void close() -> close
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.dao.LazyForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow(int) -> seperateIteratorThrow
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.LazyForeignCollection,int) -> access$000
com.j256.ormlite.dao.LazyForeignCollection$1 -> com.j256.ormlite.dao.i:
    int val$flags -> a
    com.j256.ormlite.dao.LazyForeignCollection this$0 -> b
    com.j256.ormlite.dao.CloseableIterator iterator() -> a
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LruObjectCache -> com.j256.ormlite.dao.LruObjectCache:
    int capacity -> capacity
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap -> com.j256.ormlite.dao.j:
    int capacity -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.dao.ObjectCache:
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
com.j256.ormlite.dao.RawRowMapper -> com.j256.ormlite.dao.RawRowMapper:
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.dao.RawRowObjectMapper -> com.j256.ormlite.dao.RawRowObjectMapper:
    java.lang.Object mapRow(java.lang.String[],com.j256.ormlite.field.DataType[],java.lang.Object[]) -> mapRow
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.dao.ReferenceObjectCache:
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    boolean useWeak -> useWeak
    com.j256.ormlite.dao.ReferenceObjectCache makeWeakCache() -> makeWeakCache
    com.j256.ormlite.dao.ReferenceObjectCache makeSoftCache() -> makeSoftCache
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    void cleanNullReferences(java.lang.Class) -> cleanNullReferences
    void cleanNullReferencesAll() -> cleanNullReferencesAll
    void cleanMap(java.util.Map) -> cleanMap
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.RuntimeExceptionDao -> com.j256.ormlite.dao.RuntimeExceptionDao:
    com.j256.ormlite.logger.Log$Level LOG_LEVEL -> LOG_LEVEL
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void logMessage(java.lang.Exception,java.lang.String) -> logMessage
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.db.BaseDatabaseType:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> DEFAULT_SEQUENCE_SUFFIX
    java.sql.Driver driver -> driver
    java.lang.String getDriverClassName() -> getDriverClassName
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void appendStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendStringType
    void appendLongStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongStringType
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    void appendCharType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendCharType
    void appendByteType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteType
    void appendShortType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendShortType
    void appendIntegerType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendIntegerType
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void appendFloatType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendFloatType
    void appendDoubleType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDoubleType
    void appendByteArrayType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteArrayType
    void appendSerializableType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendSerializableType
    void appendBigDecimalNumericType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBigDecimalNumericType
    void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> appendDefaultValue
    void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureGeneratedIdSequence
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureId
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
    void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> appendCanBeNull
    void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> addSingleUnique
com.j256.ormlite.db.BaseDatabaseType$1 -> com.j256.ormlite.db.a:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter:
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.db.BaseSqliteDatabaseType:
    com.j256.ormlite.field.FieldConverter booleanConverter -> booleanConverter
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.j256.ormlite.db.b:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.db.DatabaseType:
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    java.lang.String getDatabaseName() -> getDatabaseName
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.db.SqliteAndroidDatabaseType:
    void loadDriver() -> loadDriver
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    java.lang.String getDriverClassName() -> getDriverClassName
    java.lang.String getDatabaseName() -> getDatabaseName
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.j256.ormlite.db.c:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.field.BaseFieldConverter -> com.j256.ormlite.field.BaseFieldConverter:
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isStreamType() -> isStreamType
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.field.DataPersister:
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.field.DataPersisterManager:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> DEFAULT_ENUM_PERSISTER
    java.util.Map builtInMap -> builtInMap
    java.util.List registeredPersisters -> registeredPersisters
    void registerDataPersisters(com.j256.ormlite.field.DataPersister[]) -> registerDataPersisters
    void clear() -> clear
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> lookupForField
com.j256.ormlite.field.DataType -> com.j256.ormlite.field.DataType:
    com.j256.ormlite.field.DataType STRING -> STRING
    com.j256.ormlite.field.DataType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.DataType STRING_BYTES -> STRING_BYTES
    com.j256.ormlite.field.DataType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> BOOLEAN_OBJ
    com.j256.ormlite.field.DataType DATE -> DATE
    com.j256.ormlite.field.DataType DATE_LONG -> DATE_LONG
    com.j256.ormlite.field.DataType DATE_STRING -> DATE_STRING
    com.j256.ormlite.field.DataType CHAR -> CHAR
    com.j256.ormlite.field.DataType CHAR_OBJ -> CHAR_OBJ
    com.j256.ormlite.field.DataType BYTE -> BYTE
    com.j256.ormlite.field.DataType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.DataType BYTE_OBJ -> BYTE_OBJ
    com.j256.ormlite.field.DataType SHORT -> SHORT
    com.j256.ormlite.field.DataType SHORT_OBJ -> SHORT_OBJ
    com.j256.ormlite.field.DataType INTEGER -> INTEGER
    com.j256.ormlite.field.DataType INTEGER_OBJ -> INTEGER_OBJ
    com.j256.ormlite.field.DataType LONG -> LONG
    com.j256.ormlite.field.DataType LONG_OBJ -> LONG_OBJ
    com.j256.ormlite.field.DataType FLOAT -> FLOAT
    com.j256.ormlite.field.DataType FLOAT_OBJ -> FLOAT_OBJ
    com.j256.ormlite.field.DataType DOUBLE -> DOUBLE
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> DOUBLE_OBJ
    com.j256.ormlite.field.DataType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.DataType ENUM_STRING -> ENUM_STRING
    com.j256.ormlite.field.DataType ENUM_INTEGER -> ENUM_INTEGER
    com.j256.ormlite.field.DataType UUID -> UUID
    com.j256.ormlite.field.DataType BIG_INTEGER -> BIG_INTEGER
    com.j256.ormlite.field.DataType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> BIG_DECIMAL_NUMERIC
    com.j256.ormlite.field.DataType DATE_TIME -> DATE_TIME
    com.j256.ormlite.field.DataType SQL_DATE -> SQL_DATE
    com.j256.ormlite.field.DataType TIME_STAMP -> TIME_STAMP
    com.j256.ormlite.field.DataType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    com.j256.ormlite.field.DataType[] $VALUES -> $VALUES
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.field.DatabaseField:
    java.lang.String DEFAULT_STRING -> DEFAULT_STRING
    int NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED -> NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String columnName() -> columnName
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean foreign() -> foreign
    boolean useGetSet() -> useGetSet
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    boolean persisted() -> persisted
    java.lang.String format() -> format
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass() -> persisterClass
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
    java.lang.String columnDefinition() -> columnDefinition
    boolean foreignAutoCreate() -> foreignAutoCreate
    boolean version() -> version
    java.lang.String foreignColumnName() -> foreignColumnName
    boolean readOnly() -> readOnly
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.field.DatabaseFieldConfig:
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> DEFAULT_DATA_TYPE
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    boolean DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING -> DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String fieldName -> fieldName
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DataType dataType -> dataType
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.String defaultValue -> defaultValue
    int width -> width
    boolean canBeNull -> canBeNull
    boolean id -> id
    boolean generatedId -> generatedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    boolean foreign -> foreign
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> foreignTableConfig
    boolean useGetSet -> useGetSet
    java.lang.Enum unknownEnumValue -> unknownEnumValue
    boolean throwIfNull -> throwIfNull
    boolean persisted -> persisted
    java.lang.String format -> format
    boolean unique -> unique
    boolean uniqueCombo -> uniqueCombo
    boolean index -> index
    java.lang.String indexName -> indexName
    boolean uniqueIndex -> uniqueIndex
    java.lang.String uniqueIndexName -> uniqueIndexName
    boolean foreignAutoRefresh -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass -> persisterClass
    boolean allowGeneratedIdInsert -> allowGeneratedIdInsert
    java.lang.String columnDefinition -> columnDefinition
    boolean foreignAutoCreate -> foreignAutoCreate
    boolean version -> version
    java.lang.String foreignColumnName -> foreignColumnName
    boolean readOnly -> readOnly
    boolean foreignCollection -> foreignCollection
    boolean foreignCollectionEager -> foreignCollectionEager
    int foreignCollectionMaxEagerLevel -> foreignCollectionMaxEagerLevel
    java.lang.String foreignCollectionColumnName -> foreignCollectionColumnName
    java.lang.String foreignCollectionOrderColumnName -> foreignCollectionOrderColumnName
    boolean foreignCollectionOrderAscending -> foreignCollectionOrderAscending
    java.lang.String foreignCollectionForeignFieldName -> foreignCollectionForeignFieldName
    java.lang.String getFieldName() -> getFieldName
    void setFieldName(java.lang.String) -> setFieldName
    java.lang.String getColumnName() -> getColumnName
    void setColumnName(java.lang.String) -> setColumnName
    com.j256.ormlite.field.DataType getDataType() -> getDataType
    void setDataType(com.j256.ormlite.field.DataType) -> setDataType
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> setDataPersister
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    boolean isCanBeNull() -> isCanBeNull
    void setCanBeNull(boolean) -> setCanBeNull
    boolean isId() -> isId
    void setId(boolean) -> setId
    boolean isGeneratedId() -> isGeneratedId
    void setGeneratedId(boolean) -> setGeneratedId
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    void setGeneratedIdSequence(java.lang.String) -> setGeneratedIdSequence
    boolean isForeign() -> isForeign
    void setForeign(boolean) -> setForeign
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> getForeignTableConfig
    void setForeignTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setForeignTableConfig
    boolean isUseGetSet() -> isUseGetSet
    void setUseGetSet(boolean) -> setUseGetSet
    java.lang.Enum getUnknownEnumValue() -> getUnknownEnumValue
    void setUnknownEnumValue(java.lang.Enum) -> setUnknownEnumValue
    boolean isThrowIfNull() -> isThrowIfNull
    void setThrowIfNull(boolean) -> setThrowIfNull
    boolean isPersisted() -> isPersisted
    void setPersisted(boolean) -> setPersisted
    java.lang.String getFormat() -> getFormat
    void setFormat(java.lang.String) -> setFormat
    boolean isUnique() -> isUnique
    void setUnique(boolean) -> setUnique
    boolean isUniqueCombo() -> isUniqueCombo
    void setUniqueCombo(boolean) -> setUniqueCombo
    boolean isIndex() -> isIndex
    void setIndex(boolean) -> setIndex
    java.lang.String getIndexName(java.lang.String) -> getIndexName
    void setIndexName(java.lang.String) -> setIndexName
    boolean isUniqueIndex() -> isUniqueIndex
    void setUniqueIndex(boolean) -> setUniqueIndex
    java.lang.String getUniqueIndexName(java.lang.String) -> getUniqueIndexName
    void setUniqueIndexName(java.lang.String) -> setUniqueIndexName
    void setForeignAutoRefresh(boolean) -> setForeignAutoRefresh
    boolean isForeignAutoRefresh() -> isForeignAutoRefresh
    int getMaxForeignAutoRefreshLevel() -> getMaxForeignAutoRefreshLevel
    void setMaxForeignAutoRefreshLevel(int) -> setMaxForeignAutoRefreshLevel
    boolean isForeignCollection() -> isForeignCollection
    void setForeignCollection(boolean) -> setForeignCollection
    boolean isForeignCollectionEager() -> isForeignCollectionEager
    void setForeignCollectionEager(boolean) -> setForeignCollectionEager
    int getForeignCollectionMaxEagerLevel() -> getForeignCollectionMaxEagerLevel
    void setForeignCollectionMaxEagerLevel(int) -> setForeignCollectionMaxEagerLevel
    void setMaxEagerForeignCollectionLevel(int) -> setMaxEagerForeignCollectionLevel
    void setForeignCollectionMaxEagerForeignCollectionLevel(int) -> setForeignCollectionMaxEagerForeignCollectionLevel
    java.lang.String getForeignCollectionColumnName() -> getForeignCollectionColumnName
    void setForeignCollectionColumnName(java.lang.String) -> setForeignCollectionColumnName
    java.lang.String getForeignCollectionOrderColumnName() -> getForeignCollectionOrderColumnName
    void setForeignCollectionOrderColumn(java.lang.String) -> setForeignCollectionOrderColumn
    void setForeignCollectionOrderColumnName(java.lang.String) -> setForeignCollectionOrderColumnName
    boolean isForeignCollectionOrderAscending() -> isForeignCollectionOrderAscending
    void setForeignCollectionOrderAscending(boolean) -> setForeignCollectionOrderAscending
    java.lang.String getForeignCollectionForeignFieldName() -> getForeignCollectionForeignFieldName
    void setForeignCollectionForeignColumnName(java.lang.String) -> setForeignCollectionForeignColumnName
    void setForeignCollectionForeignFieldName(java.lang.String) -> setForeignCollectionForeignFieldName
    java.lang.Class getPersisterClass() -> getPersisterClass
    void setPersisterClass(java.lang.Class) -> setPersisterClass
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    void setAllowGeneratedIdInsert(boolean) -> setAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    void setColumnDefinition(java.lang.String) -> setColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    void setForeignAutoCreate(boolean) -> setForeignAutoCreate
    boolean isVersion() -> isVersion
    void setVersion(boolean) -> setVersion
    java.lang.String getForeignColumnName() -> getForeignColumnName
    void setForeignColumnName(java.lang.String) -> setForeignColumnName
    boolean isReadOnly() -> isReadOnly
    void setReadOnly(boolean) -> setReadOnly
    com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> fromField
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> findGetMethod
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> findSetMethod
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> fromDatabaseField
    void postProcess() -> postProcess
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> findMatchingEnumVal
    com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> fromForeignCollection
    java.lang.String findIndexName(java.lang.String) -> findIndexName
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> methodFromField
com.j256.ormlite.field.DatabaseFieldConfigLoader -> com.j256.ormlite.field.DatabaseFieldConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    java.lang.String FIELD_NAME_FIELD_NAME -> FIELD_NAME_FIELD_NAME
    java.lang.String FIELD_NAME_COLUMN_NAME -> FIELD_NAME_COLUMN_NAME
    java.lang.String FIELD_NAME_DATA_PERSISTER -> FIELD_NAME_DATA_PERSISTER
    java.lang.String FIELD_NAME_DEFAULT_VALUE -> FIELD_NAME_DEFAULT_VALUE
    java.lang.String FIELD_NAME_WIDTH -> FIELD_NAME_WIDTH
    java.lang.String FIELD_NAME_CAN_BE_NULL -> FIELD_NAME_CAN_BE_NULL
    java.lang.String FIELD_NAME_ID -> FIELD_NAME_ID
    java.lang.String FIELD_NAME_GENERATED_ID -> FIELD_NAME_GENERATED_ID
    java.lang.String FIELD_NAME_GENERATED_ID_SEQUENCE -> FIELD_NAME_GENERATED_ID_SEQUENCE
    java.lang.String FIELD_NAME_FOREIGN -> FIELD_NAME_FOREIGN
    java.lang.String FIELD_NAME_USE_GET_SET -> FIELD_NAME_USE_GET_SET
    java.lang.String FIELD_NAME_UNKNOWN_ENUM_VALUE -> FIELD_NAME_UNKNOWN_ENUM_VALUE
    java.lang.String FIELD_NAME_THROW_IF_NULL -> FIELD_NAME_THROW_IF_NULL
    java.lang.String FIELD_NAME_FORMAT -> FIELD_NAME_FORMAT
    java.lang.String FIELD_NAME_UNIQUE -> FIELD_NAME_UNIQUE
    java.lang.String FIELD_NAME_UNIQUE_COMBO -> FIELD_NAME_UNIQUE_COMBO
    java.lang.String FIELD_NAME_INDEX -> FIELD_NAME_INDEX
    java.lang.String FIELD_NAME_INDEX_NAME -> FIELD_NAME_INDEX_NAME
    java.lang.String FIELD_NAME_UNIQUE_INDEX -> FIELD_NAME_UNIQUE_INDEX
    java.lang.String FIELD_NAME_UNIQUE_INDEX_NAME -> FIELD_NAME_UNIQUE_INDEX_NAME
    java.lang.String FIELD_NAME_FOREIGN_AUTO_REFRESH -> FIELD_NAME_FOREIGN_AUTO_REFRESH
    java.lang.String FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String FIELD_NAME_PERSISTER_CLASS -> FIELD_NAME_PERSISTER_CLASS
    java.lang.String FIELD_NAME_ALLOW_GENERATED_ID_INSERT -> FIELD_NAME_ALLOW_GENERATED_ID_INSERT
    java.lang.String FIELD_NAME_COLUMN_DEFINITION -> FIELD_NAME_COLUMN_DEFINITION
    java.lang.String FIELD_NAME_FOREIGN_AUTO_CREATE -> FIELD_NAME_FOREIGN_AUTO_CREATE
    java.lang.String FIELD_NAME_VERSION -> FIELD_NAME_VERSION
    java.lang.String FIELD_NAME_FOREIGN_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLUMN_NAME
    java.lang.String FIELD_NAME_READ_ONLY -> FIELD_NAME_READ_ONLY
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION -> FIELD_NAME_FOREIGN_COLLECTION
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_EAGER -> FIELD_NAME_FOREIGN_COLLECTION_EAGER
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME
    com.j256.ormlite.field.DatabaseFieldConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> writeConfig
    void readField(com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String,java.lang.String) -> readField
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.field.FieldConverter:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    boolean isStreamType() -> isStreamType
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.FieldType -> com.j256.ormlite.field.FieldType:
    java.lang.String FOREIGN_ID_FIELD_SUFFIX -> FOREIGN_ID_FIELD_SUFFIX
    boolean DEFAULT_VALUE_BOOLEAN -> DEFAULT_VALUE_BOOLEAN
    byte DEFAULT_VALUE_BYTE -> DEFAULT_VALUE_BYTE
    char DEFAULT_VALUE_CHAR -> DEFAULT_VALUE_CHAR
    short DEFAULT_VALUE_SHORT -> DEFAULT_VALUE_SHORT
    int DEFAULT_VALUE_INT -> DEFAULT_VALUE_INT
    long DEFAULT_VALUE_LONG -> DEFAULT_VALUE_LONG
    float DEFAULT_VALUE_FLOAT -> DEFAULT_VALUE_FLOAT
    double DEFAULT_VALUE_DOUBLE -> DEFAULT_VALUE_DOUBLE
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.String tableName -> tableName
    java.lang.reflect.Field field -> field
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> fieldConfig
    boolean isId -> isId
    boolean isGeneratedId -> isGeneratedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    java.lang.reflect.Method fieldGetMethod -> fieldGetMethod
    java.lang.reflect.Method fieldSetMethod -> fieldSetMethod
    java.lang.Class parentClass -> parentClass
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object dataTypeConfigObj -> dataTypeConfigObj
    com.j256.ormlite.field.FieldConverter fieldConverter -> fieldConverter
    com.j256.ormlite.field.FieldType foreignIdField -> foreignIdField
    com.j256.ormlite.table.TableInfo foreignTableInfo -> foreignTableInfo
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    com.j256.ormlite.dao.BaseDaoImpl foreignDao -> foreignDao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    java.lang.ThreadLocal threadLevelCounters -> threadLevelCounters
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> configDaoInformation
    java.lang.reflect.Field getField() -> getField
    java.lang.String getTableName() -> getTableName
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getType() -> getType
    java.lang.String getColumnName() -> getColumnName
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    java.lang.Object getDataTypeConfigObj() -> getDataTypeConfigObj
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object getDefaultValue() -> getDefaultValue
    int getWidth() -> getWidth
    boolean isCanBeNull() -> isCanBeNull
    boolean isId() -> isId
    boolean isGeneratedId() -> isGeneratedId
    boolean isGeneratedIdSequence() -> isGeneratedIdSequence
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    boolean isForeign() -> isForeign
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> assignField
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> extractRawJavaFieldValue
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> extractJavaFieldValue
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> extractJavaFieldToSqlArgValue
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> convertJavaFieldToSqlArgValue
    java.lang.Object convertStringToJavaField(java.lang.String,int) -> convertStringToJavaField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.FieldType getForeignIdField() -> getForeignIdField
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Enum getUnknownEnumVal() -> getUnknownEnumVal
    java.lang.String getFormat() -> getFormat
    boolean isUnique() -> isUnique
    boolean isUniqueCombo() -> isUniqueCombo
    java.lang.String getIndexName() -> getIndexName
    java.lang.String getUniqueIndexName() -> getUniqueIndexName
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isComparable() -> isComparable
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isForeignCollection() -> isForeignCollection
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object) -> buildForeignCollection
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> resultToJava
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    boolean isVersion() -> isVersion
    java.lang.Object generateId() -> generateId
    boolean isReadOnly() -> isReadOnly
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> getFieldValueIfNotDefault
    boolean isObjectsFieldValueDefault(java.lang.Object) -> isObjectsFieldValueDefault
    java.lang.Object getJavaDefaultValueDefault() -> getJavaDefaultValueDefault
    int createWithForeignDao(java.lang.Object) -> createWithForeignDao
    com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> createFieldType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isFieldValueDefault(java.lang.Object) -> isFieldValueDefault
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> findForeignFieldType
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> assignDataType
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.field.a:
    com.j256.ormlite.field.FieldType$LevelCounters initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.field.b:
    int autoRefreshLevel -> a
    int autoRefreshLevelMax -> b
    int foreignCollectionLevel -> c
    int foreignCollectionLevelMax -> d
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.field.ForeignCollectionField:
    int MAX_EAGER_LEVEL -> MAX_EAGER_LEVEL
    boolean eager() -> eager
    int maxEagerForeignCollectionLevel() -> maxEagerForeignCollectionLevel
    int maxEagerLevel() -> maxEagerLevel
    java.lang.String columnName() -> columnName
    java.lang.String orderColumnName() -> orderColumnName
    boolean orderAscending() -> orderAscending
    java.lang.String foreignColumnName() -> foreignColumnName
    java.lang.String foreignFieldName() -> foreignFieldName
com.j256.ormlite.field.SqlType -> com.j256.ormlite.field.SqlType:
    com.j256.ormlite.field.SqlType STRING -> STRING
    com.j256.ormlite.field.SqlType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.SqlType DATE -> DATE
    com.j256.ormlite.field.SqlType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.SqlType CHAR -> CHAR
    com.j256.ormlite.field.SqlType BYTE -> BYTE
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.SqlType SHORT -> SHORT
    com.j256.ormlite.field.SqlType INTEGER -> INTEGER
    com.j256.ormlite.field.SqlType LONG -> LONG
    com.j256.ormlite.field.SqlType FLOAT -> FLOAT
    com.j256.ormlite.field.SqlType DOUBLE -> DOUBLE
    com.j256.ormlite.field.SqlType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.SqlType BLOB -> BLOB
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.SqlType OTHER -> OTHER
    com.j256.ormlite.field.SqlType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.SqlType[] $VALUES -> $VALUES
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.field.types.BaseDataType:
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Class[] classes -> classes
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.field.types.BaseDateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> convertDateStringConfig
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> parseDateString
    java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> normalizeDateString
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig:
    java.lang.ThreadLocal threadLocal -> threadLocal
    java.lang.String dateFormatStr -> dateFormatStr
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.j256.ormlite.field.types.a:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$0 -> a
    java.text.DateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.field.types.BaseEnumType:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> enumVal
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.field.types.BigDecimalNumericType:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.field.types.BigDecimalStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.field.types.BigIntegerType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.field.types.BooleanObjectType:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.field.types.BooleanType:
    com.j256.ormlite.field.types.BooleanType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.field.types.ByteArrayType:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.field.types.ByteObjectType:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.field.types.ByteType:
    com.j256.ormlite.field.types.ByteType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.field.types.CharType:
    com.j256.ormlite.field.types.CharType singleTon -> singleTon
    com.j256.ormlite.field.types.CharType getSingleton() -> getSingleton
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.field.types.CharacterObjectType:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.field.types.DateLongType:
    com.j256.ormlite.field.types.DateLongType singleTon -> singleTon
    com.j256.ormlite.field.types.DateLongType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.field.types.DateStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.DateStringType singleTon -> singleTon
    com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateTimeType -> com.j256.ormlite.field.types.DateTimeType:
    com.j256.ormlite.field.types.DateTimeType singleTon -> singleTon
    java.lang.Class dateTimeClass -> dateTimeClass
    java.lang.reflect.Method getMillisMethod -> getMillisMethod
    java.lang.reflect.Constructor millisConstructor -> millisConstructor
    java.lang.String[] associatedClassNames -> associatedClassNames
    com.j256.ormlite.field.types.DateTimeType getSingleton() -> getSingleton
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.reflect.Method getMillisMethod() -> getMillisMethod
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.Class getDateTimeClass() -> getDateTimeClass
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.field.types.DateType:
    com.j256.ormlite.field.types.DateType singleTon -> singleTon
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.field.types.DoubleObjectType:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.field.types.DoubleType:
    com.j256.ormlite.field.types.DoubleType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.field.types.EnumIntegerType:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.field.types.EnumStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.EnumStringType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.field.types.FloatObjectType:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.field.types.FloatType:
    com.j256.ormlite.field.types.FloatType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.field.types.IntType:
    com.j256.ormlite.field.types.IntType singleTon -> singleTon
    com.j256.ormlite.field.types.IntType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.field.types.IntegerObjectType:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.field.types.LongObjectType:
    com.j256.ormlite.field.types.LongObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.field.types.LongStringType:
    com.j256.ormlite.field.types.LongStringType singleTon -> singleTon
    com.j256.ormlite.field.types.LongStringType getSingleton() -> getSingleton
    boolean isAppropriateId() -> isAppropriateId
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.field.types.LongType:
    com.j256.ormlite.field.types.LongType singleTon -> singleTon
    com.j256.ormlite.field.types.LongType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.field.types.SerializableType:
    com.j256.ormlite.field.types.SerializableType singleTon -> singleTon
    com.j256.ormlite.field.types.SerializableType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isStreamType() -> isStreamType
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.field.types.ShortObjectType:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.field.types.ShortType:
    com.j256.ormlite.field.types.ShortType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SqlDateType -> com.j256.ormlite.field.types.SqlDateType:
    com.j256.ormlite.field.types.SqlDateType singleTon -> singleTon
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> sqlDateFormatConfig
    com.j256.ormlite.field.types.SqlDateType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.field.types.StringBytesType:
    java.lang.String DEFAULT_STRING_BYTES_CHARSET_NAME -> DEFAULT_STRING_BYTES_CHARSET_NAME
    com.j256.ormlite.field.types.StringBytesType singleTon -> singleTon
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> getCharsetName
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.field.types.StringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.StringType singleTon -> singleTon
    com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.TimeStampType -> com.j256.ormlite.field.types.TimeStampType:
    com.j256.ormlite.field.types.TimeStampType singleTon -> singleTon
    com.j256.ormlite.field.types.TimeStampType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.field.types.UuidType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.UuidType singleTon -> singleTon
    com.j256.ormlite.field.types.UuidType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.field.types.VoidType:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.logger.LocalLog:
    java.lang.String LOCAL_LOG_LEVEL_PROPERTY -> LOCAL_LOG_LEVEL_PROPERTY
    java.lang.String LOCAL_LOG_FILE_PROPERTY -> LOCAL_LOG_FILE_PROPERTY
    java.lang.String LOCAL_LOG_PROPERTIES_FILE -> LOCAL_LOG_PROPERTIES_FILE
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.ThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    java.io.PrintStream printStream -> printStream
    java.util.List classLevels -> classLevels
    java.lang.String className -> className
    com.j256.ormlite.logger.Log$Level level -> level
    void openLogFile(java.lang.String) -> openLogFile
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void flush() -> flush
    java.util.List readLevelResourceFile(java.io.InputStream) -> readLevelResourceFile
    java.util.List configureClassLevels(java.io.InputStream) -> configureClassLevels
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> printMessage
com.j256.ormlite.logger.LocalLog$1 -> com.j256.ormlite.logger.a:
    java.text.DateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.logger.b:
    java.util.regex.Pattern pattern -> a
    com.j256.ormlite.logger.Log$Level level -> b
com.j256.ormlite.logger.Log -> com.j256.ormlite.logger.Log:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.logger.Log$Level:
    com.j256.ormlite.logger.Log$Level TRACE -> TRACE
    com.j256.ormlite.logger.Log$Level DEBUG -> DEBUG
    com.j256.ormlite.logger.Log$Level INFO -> INFO
    com.j256.ormlite.logger.Log$Level WARNING -> WARNING
    com.j256.ormlite.logger.Log$Level ERROR -> ERROR
    com.j256.ormlite.logger.Log$Level FATAL -> FATAL
    int level -> level
    com.j256.ormlite.logger.Log$Level[] $VALUES -> $VALUES
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> isEnabled
com.j256.ormlite.logger.Logger -> com.j256.ormlite.logger.Logger:
    java.lang.String ARG_STRING -> ARG_STRING
    int ARG_STRING_LENGTH -> ARG_STRING_LENGTH
    java.lang.Object UNKNOWN_ARG -> UNKNOWN_ARG
    com.j256.ormlite.logger.Log log -> log
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.String) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.String) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.String) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.String) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.String) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void fatal(java.lang.String) -> fatal
    void fatal(java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object[]) -> fatal
    void fatal(java.lang.Throwable,java.lang.String) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> fatal
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object[]) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    void innerLog(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> innerLog
    java.lang.String buildFullMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> buildFullMessage
    void appendArg(java.lang.StringBuilder,java.lang.Object) -> appendArg
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.logger.LoggerFactory:
    java.lang.String LOG_TYPE_SYSTEM_PROPERTY -> LOG_TYPE_SYSTEM_PROPERTY
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> logType
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> getLogger
    com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> getLogger
    java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> findLogType
com.j256.ormlite.logger.LoggerFactory$1 -> com.j256.ormlite.logger.c:
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.logger.LoggerFactory$LogType:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> ANDROID
    com.j256.ormlite.logger.LoggerFactory$LogType SLF4J -> SLF4J
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> COMMONS_LOGGING
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J2 -> LOG4J2
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> LOG4J
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> LOCAL
    java.lang.String detectClassName -> detectClassName
    java.lang.String logClassName -> logClassName
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> $VALUES
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> createLogFromClassName
    boolean isAvailableTestClass() -> isAvailableTestClass
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.logger.d:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.misc.BaseDaoEnabled:
    com.j256.ormlite.dao.Dao dao -> dao
    int create() -> create
    int refresh() -> refresh
    int update() -> update
    int updateId(java.lang.Object) -> updateId
    int delete() -> delete
    java.lang.String objectToString() -> objectToString
    java.lang.Object extractId() -> extractId
    boolean objectsEqual(java.lang.Object) -> objectsEqual
    void setDao(com.j256.ormlite.dao.Dao) -> setDao
    com.j256.ormlite.dao.Dao getDao() -> getDao
    void checkForDao() -> checkForDao
com.j256.ormlite.misc.JavaxPersistence -> com.j256.ormlite.misc.JavaxPersistence:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    java.lang.String getEntityName(java.lang.Class) -> getEntityName
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.misc.SqlExceptionUtil:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> create
com.j256.ormlite.misc.TransactionManager -> com.j256.ormlite.misc.TransactionManager:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String SAVE_POINT_PREFIX -> SAVE_POINT_PREFIX
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.util.concurrent.atomic.AtomicInteger savePointCounter -> savePointCounter
    void initialize() -> initialize
    java.lang.Object callInTransaction(java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,boolean,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void commit(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> rollBack
com.j256.ormlite.misc.VersionUtils -> com.j256.ormlite.misc.VersionUtils:
    java.lang.String CORE_VERSION -> CORE_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    boolean thrownOnErrors -> thrownOnErrors
    java.lang.String coreVersion -> coreVersion
    void checkCoreVersusJdbcVersions(java.lang.String) -> checkCoreVersusJdbcVersions
    void checkCoreVersusAndroidVersions(java.lang.String) -> checkCoreVersusAndroidVersions
    java.lang.String getCoreVersion() -> getCoreVersion
    void setThrownOnErrors(boolean) -> setThrownOnErrors
    void logVersionWarnings(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> logVersionWarnings
    void warning(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[]) -> warning
    com.j256.ormlite.logger.Logger getLogger() -> getLogger
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.stmt.ArgumentHolder:
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.stmt.BaseArgumentHolder:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.ColumnArg -> com.j256.ormlite.stmt.ColumnArg:
    java.lang.String tableName -> tableName
    java.lang.String columnName -> columnName
    java.lang.String getTableName() -> getTableName
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.DeleteBuilder -> com.j256.ormlite.stmt.DeleteBuilder:
    com.j256.ormlite.stmt.PreparedDelete prepare() -> prepare
    int delete() -> delete
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.stmt.GenericRowMapper:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.NullArgHolder -> com.j256.ormlite.stmt.NullArgHolder:
    java.lang.String getColumnName() -> getColumnName
    void setValue(java.lang.Object) -> setValue
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.stmt.PreparedDelete:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.stmt.PreparedQuery:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.stmt.PreparedStmt:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.stmt.PreparedUpdate:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.stmt.QueryBuilder:
    com.j256.ormlite.field.FieldType idField -> idField
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> resultFieldTypes
    boolean distinct -> distinct
    boolean selectIdColumn -> selectIdColumn
    java.util.List selectColumnList -> selectColumnList
    java.util.List selectRawList -> selectRawList
    java.util.List orderByList -> orderByList
    java.lang.String orderByRaw -> orderByRaw
    com.j256.ormlite.stmt.ArgumentHolder[] orderByArgs -> orderByArgs
    java.util.List groupByList -> groupByList
    java.lang.String groupByRaw -> groupByRaw
    boolean isInnerQuery -> isInnerQuery
    boolean isCountOfQuery -> isCountOfQuery
    java.lang.String having -> having
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    java.util.List joinList -> joinList
    void enableInnerQuery() -> enableInnerQuery
    int getSelectColumnCount() -> getSelectColumnCount
    java.util.List getSelectColumns() -> getSelectColumns
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.String[]) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.Iterable) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> selectRaw
    com.j256.ormlite.stmt.QueryBuilder groupBy(java.lang.String) -> groupBy
    com.j256.ormlite.stmt.QueryBuilder groupByRaw(java.lang.String) -> groupByRaw
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> orderBy
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder distinct() -> distinct
    com.j256.ormlite.stmt.QueryBuilder limit(int) -> limit
    com.j256.ormlite.stmt.QueryBuilder limit(java.lang.Long) -> limit
    com.j256.ormlite.stmt.QueryBuilder offset(int) -> offset
    com.j256.ormlite.stmt.QueryBuilder offset(java.lang.Long) -> offset
    com.j256.ormlite.stmt.QueryBuilder setCountOf(boolean) -> setCountOf
    com.j256.ormlite.stmt.QueryBuilder having(java.lang.String) -> having
    com.j256.ormlite.stmt.QueryBuilder join(com.j256.ormlite.stmt.QueryBuilder) -> join
    com.j256.ormlite.stmt.QueryBuilder joinOr(com.j256.ormlite.stmt.QueryBuilder) -> joinOr
    com.j256.ormlite.stmt.QueryBuilder leftJoin(com.j256.ormlite.stmt.QueryBuilder) -> leftJoin
    com.j256.ormlite.stmt.QueryBuilder leftJoinOr(com.j256.ormlite.stmt.QueryBuilder) -> leftJoinOr
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    long countOf() -> countOf
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    void setAddTableName(boolean) -> setAddTableName
    void addJoinInfo(java.lang.String,com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> addJoinInfo
    void matchJoinedFields(com.j256.ormlite.stmt.QueryBuilder$JoinInfo,com.j256.ormlite.stmt.QueryBuilder) -> matchJoinedFields
    void addSelectColumnToList(java.lang.String) -> addSelectColumnToList
    void appendJoinSql(java.lang.StringBuilder) -> appendJoinSql
    void appendSelectRaw(java.lang.StringBuilder) -> appendSelectRaw
    void appendColumns(java.lang.StringBuilder) -> appendColumns
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    void appendLimit(java.lang.StringBuilder) -> appendLimit
    void appendOffset(java.lang.StringBuilder) -> appendOffset
    void appendGroupBys(java.lang.StringBuilder) -> appendGroupBys
    boolean hasGroupStuff() -> hasGroupStuff
    void appendGroupBys(java.lang.StringBuilder,boolean) -> appendGroupBys
    void appendOrderBys(java.lang.StringBuilder,java.util.List) -> appendOrderBys
    boolean hasOrderStuff() -> hasOrderStuff
    void appendOrderBys(java.lang.StringBuilder,boolean,java.util.List) -> appendOrderBys
    void appendColumnName(java.lang.StringBuilder,java.lang.String) -> appendColumnName
    void appendHaving(java.lang.StringBuilder) -> appendHaving
com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper -> com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper:
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
com.j256.ormlite.stmt.QueryBuilder$JoinInfo -> com.j256.ormlite.stmt.a:
    java.lang.String type -> a
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> b
    com.j256.ormlite.field.FieldType localField -> c
    com.j256.ormlite.field.FieldType remoteField -> d
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation operation -> e
    com.j256.ormlite.stmt.QueryBuilder this$0 -> f
com.j256.ormlite.stmt.RawResultsImpl -> com.j256.ormlite.stmt.RawResultsImpl:
    com.j256.ormlite.stmt.SelectIterator iterator -> iterator
    java.lang.String[] columnNames -> columnNames
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.stmt.RawRowMapperImpl -> com.j256.ormlite.stmt.RawRowMapperImpl:
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.stmt.SelectArg:
    boolean hasBeenSet -> hasBeenSet
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.stmt.SelectIterator:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.dao.Dao classDao -> classDao
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    com.j256.ormlite.support.CompiledStatement compiledStmt -> compiledStmt
    com.j256.ormlite.support.DatabaseResults results -> results
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> rowMapper
    java.lang.String statement -> statement
    boolean first -> first
    boolean closed -> closed
    boolean alreadyMoved -> alreadyMoved
    java.lang.Object last -> last
    int rowC -> rowC
    boolean hasNextThrow() -> hasNextThrow
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object next() -> next
    java.lang.Object moveRelative(int) -> moveRelative
    void removeThrow() -> removeThrow
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object getCurrent() -> getCurrent
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.stmt.StatementBuilder:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.String tableName -> tableName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean addTableName -> addTableName
    com.j256.ormlite.stmt.Where where -> where
    com.j256.ormlite.stmt.Where where() -> where
    void setWhere(com.j256.ormlite.stmt.Where) -> setWhere
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement(java.lang.Long) -> prepareStatement
    java.lang.String prepareStatementString() -> prepareStatementString
    com.j256.ormlite.stmt.StatementBuilder$StatementInfo prepareStatementInfo() -> prepareStatementInfo
    void clear() -> clear
    void reset() -> reset
    java.lang.String buildStatementString(java.util.List) -> buildStatementString
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> verifyColumnName
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.StatementBuilder$1 -> com.j256.ormlite.stmt.b:
com.j256.ormlite.stmt.StatementBuilder$StatementInfo -> com.j256.ormlite.stmt.StatementBuilder$StatementInfo:
    java.lang.String statement -> statement
    java.util.List argList -> argList
    java.lang.String getStatement() -> getStatement
    java.util.List getArgList() -> getArgList
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.stmt.StatementBuilder$StatementType:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> SELECT
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> SELECT_LONG
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> SELECT_RAW
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> UPDATE
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> DELETE
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> EXECUTE
    boolean okForStatementBuilder -> okForStatementBuilder
    boolean okForQuery -> okForQuery
    boolean okForUpdate -> okForUpdate
    boolean okForExecute -> okForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    boolean isOkForStatementBuilder() -> isOkForStatementBuilder
    boolean isOkForQuery() -> isOkForQuery
    boolean isOkForUpdate() -> isOkForUpdate
    boolean isOkForExecute() -> isOkForExecute
com.j256.ormlite.stmt.StatementBuilder$WhereOperation -> com.j256.ormlite.stmt.StatementBuilder$WhereOperation:
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation FIRST -> FIRST
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation AND -> AND
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation OR -> OR
    java.lang.String before -> before
    java.lang.String after -> after
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation valueOf(java.lang.String) -> valueOf
    void appendBefore(java.lang.StringBuilder) -> appendBefore
    void appendAfter(java.lang.StringBuilder) -> appendAfter
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.stmt.StatementExecutor:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> preparedQueryForAll
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> mappedInsert
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> mappedUpdate
    com.j256.ormlite.stmt.mapped.MappedUpdateId mappedUpdateId -> mappedUpdateId
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> mappedDelete
    com.j256.ormlite.stmt.mapped.MappedRefresh mappedRefresh -> mappedRefresh
    java.lang.String countStarQuery -> countStarQuery
    java.lang.String ifExistsQuery -> ifExistsQuery
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> ifExistsFieldTypes
    com.j256.ormlite.dao.RawRowMapper rawRowMapper -> rawRowMapper
    java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> queryForFirst
    java.util.List queryForAll(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> queryForAll
    long queryForCountStar(com.j256.ormlite.support.DatabaseConnection) -> queryForCountStar
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt) -> queryForLong
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> queryForLong
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> query
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,int,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache,int) -> buildIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    int updateRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> updateRaw
    int executeRawNoArgs(com.j256.ormlite.support.DatabaseConnection,java.lang.String) -> executeRawNoArgs
    int executeRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> executeRaw
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> create
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    int updateId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> updateId
    int update(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> refresh
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
    int deleteObjects(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    int delete(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedDelete) -> delete
    java.lang.Object callBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> ifExists
    void assignStatementArguments(com.j256.ormlite.support.CompiledStatement,java.lang.String[]) -> assignStatementArguments
    void prepareQueryForAll() -> prepareQueryForAll
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper -> com.j256.ormlite.stmt.c:
    com.j256.ormlite.field.DataType[] columnTypes -> a
    java.lang.Object[] mapRow(com.j256.ormlite.support.DatabaseResults) -> a
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper -> com.j256.ormlite.stmt.d:
    com.j256.ormlite.dao.RawRowMapper mapper -> a
    com.j256.ormlite.stmt.GenericRowMapper stringRowMapper -> b
    java.lang.String[] columnNames -> c
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> a
com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper -> com.j256.ormlite.stmt.e:
    com.j256.ormlite.dao.RawRowObjectMapper mapper -> a
    com.j256.ormlite.field.DataType[] columnTypes -> b
    java.lang.String[] columnNames -> c
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> a
com.j256.ormlite.stmt.ThreadLocalSelectArg -> com.j256.ormlite.stmt.ThreadLocalSelectArg:
    java.lang.ThreadLocal threadValue -> threadValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper -> com.j256.ormlite.stmt.f:
    java.lang.Object value -> a
com.j256.ormlite.stmt.UpdateBuilder -> com.j256.ormlite.stmt.UpdateBuilder:
    java.util.List updateClauseList -> updateClauseList
    com.j256.ormlite.stmt.PreparedUpdate prepare() -> prepare
    com.j256.ormlite.stmt.StatementBuilder updateColumnValue(java.lang.String,java.lang.Object) -> updateColumnValue
    com.j256.ormlite.stmt.StatementBuilder updateColumnExpression(java.lang.String,java.lang.String) -> updateColumnExpression
    void escapeColumnName(java.lang.StringBuilder,java.lang.String) -> escapeColumnName
    java.lang.String escapeColumnName(java.lang.String) -> escapeColumnName
    void escapeValue(java.lang.StringBuilder,java.lang.String) -> escapeValue
    java.lang.String escapeValue(java.lang.String) -> escapeValue
    int update() -> update
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    void addUpdateColumnToList(java.lang.String,com.j256.ormlite.stmt.query.Clause) -> addUpdateColumnToList
com.j256.ormlite.stmt.Where -> com.j256.ormlite.stmt.Where:
    int CLAUSE_STACK_START_SIZE -> CLAUSE_STACK_START_SIZE
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> statementBuilder
    com.j256.ormlite.field.FieldType idFieldType -> idFieldType
    java.lang.String idColumnName -> idColumnName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> clauseStack
    int clauseStackLevel -> clauseStackLevel
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> needsFuture
    com.j256.ormlite.stmt.Where and() -> and
    com.j256.ormlite.stmt.Where and(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> and
    com.j256.ormlite.stmt.Where and(int) -> and
    com.j256.ormlite.stmt.Where between(java.lang.String,java.lang.Object,java.lang.Object) -> between
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> eq
    com.j256.ormlite.stmt.Where ge(java.lang.String,java.lang.Object) -> ge
    com.j256.ormlite.stmt.Where gt(java.lang.String,java.lang.Object) -> gt
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Iterable) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Iterable) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> notIn
    com.j256.ormlite.stmt.Where exists(com.j256.ormlite.stmt.QueryBuilder) -> exists
    com.j256.ormlite.stmt.Where isNull(java.lang.String) -> isNull
    com.j256.ormlite.stmt.Where isNotNull(java.lang.String) -> isNotNull
    com.j256.ormlite.stmt.Where le(java.lang.String,java.lang.Object) -> le
    com.j256.ormlite.stmt.Where lt(java.lang.String,java.lang.Object) -> lt
    com.j256.ormlite.stmt.Where like(java.lang.String,java.lang.Object) -> like
    com.j256.ormlite.stmt.Where ne(java.lang.String,java.lang.Object) -> ne
    com.j256.ormlite.stmt.Where not() -> not
    com.j256.ormlite.stmt.Where not(com.j256.ormlite.stmt.Where) -> not
    com.j256.ormlite.stmt.Where or() -> or
    com.j256.ormlite.stmt.Where or(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> or
    com.j256.ormlite.stmt.Where or(int) -> or
    com.j256.ormlite.stmt.Where idEq(java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where idEq(com.j256.ormlite.dao.Dao,java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where raw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> raw
    com.j256.ormlite.stmt.Where rawComparison(java.lang.String,java.lang.String,java.lang.Object) -> rawComparison
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    long countOf() -> countOf
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.stmt.Where clear() -> clear
    com.j256.ormlite.stmt.Where reset() -> reset
    java.lang.String getStatement() -> getStatement
    void appendSql(java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
    com.j256.ormlite.stmt.QueryBuilder checkQueryBuilderMethod(java.lang.String) -> checkQueryBuilderMethod
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.query.Clause[] buildClauseArray(com.j256.ormlite.stmt.Where[],java.lang.String) -> buildClauseArray
    void addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause) -> addNeedsFuture
    void addClause(com.j256.ormlite.stmt.query.Clause) -> addClause
    com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> findColumnFieldType
    void push(com.j256.ormlite.stmt.query.Clause) -> push
    com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> pop
    com.j256.ormlite.stmt.query.Clause peek() -> peek
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.stmt.mapped.BaseMappedQuery:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> resultsFieldTypes
    java.util.Map columnPositions -> columnPositions
    java.lang.Object parent -> parent
    java.lang.Object parentId -> parentId
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    void setParentInformation(java.lang.Object,java.lang.Object) -> setParentInformation
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.stmt.mapped.BaseMappedStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Class clazz -> clazz
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.String statement -> statement
    com.j256.ormlite.field.FieldType[] argFieldTypes -> argFieldTypes
    java.lang.Object[] getFieldObjects(java.lang.Object) -> getFieldObjects
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> convertIdToFieldObject
    void appendWhereFieldEq(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> appendWhereFieldEq
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTableName
    void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.stmt.mapped.MappedCreate:
    java.lang.String queryNextSequenceStmt -> queryNextSequenceStmt
    java.lang.String dataClassName -> dataClassName
    int versionFieldTypeIndex -> versionFieldTypeIndex
    int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> insert
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> foreignCollectionsAreAssigned
    boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> isFieldCreatable
    java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> buildQueryNextSequence
    void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> assignSequenceId
    void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
com.j256.ormlite.stmt.mapped.MappedCreate$1 -> com.j256.ormlite.stmt.mapped.a:
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.stmt.mapped.b:
    java.lang.Number key -> a
    java.lang.Number getKey() -> a
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.stmt.mapped.MappedDelete:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
com.j256.ormlite.stmt.mapped.MappedDeleteCollection -> com.j256.ormlite.stmt.mapped.MappedDeleteCollection:
    int deleteObjects(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    com.j256.ormlite.stmt.mapped.MappedDeleteCollection build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,int) -> build
    int updateRows(com.j256.ormlite.support.DatabaseConnection,java.lang.Class,com.j256.ormlite.stmt.mapped.MappedDeleteCollection,java.lang.Object[],com.j256.ormlite.dao.ObjectCache) -> updateRows
    void appendWhereIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int,com.j256.ormlite.field.FieldType[]) -> appendWhereIds
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.stmt.mapped.MappedPreparedStmt:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> argHolders
    java.lang.Long limit -> limit
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
    com.j256.ormlite.support.CompiledStatement assignStatementArguments(com.j256.ormlite.support.CompiledStatement) -> assignStatementArguments
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.stmt.mapped.MappedQueryForId:
    java.lang.String label -> label
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> build
    java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> buildStatement
    void logArgs(java.lang.Object[]) -> logArgs
com.j256.ormlite.stmt.mapped.MappedRefresh -> com.j256.ormlite.stmt.mapped.MappedRefresh:
    int executeRefresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> executeRefresh
    com.j256.ormlite.stmt.mapped.MappedRefresh build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.stmt.mapped.MappedUpdate:
    com.j256.ormlite.field.FieldType versionFieldType -> versionFieldType
    int versionFieldTypeIndex -> versionFieldTypeIndex
    com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> isFieldUpdatable
com.j256.ormlite.stmt.mapped.MappedUpdateId -> com.j256.ormlite.stmt.mapped.MappedUpdateId:
    int execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedUpdateId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    java.lang.Object extractIdToFieldObject(java.lang.Object) -> extractIdToFieldObject
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.stmt.query.a:
    java.lang.String NUMBER_CHARACTERS -> NUMBER_CHARACTERS
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    java.lang.Object value -> value
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Between -> com.j256.ormlite.stmt.query.Between:
    java.lang.Object low -> low
    java.lang.Object high -> high
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.stmt.query.Clause:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.stmt.query.b:
    java.lang.String getColumnName() -> getColumnName
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
com.j256.ormlite.stmt.query.Exists -> com.j256.ormlite.stmt.query.Exists:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.In -> com.j256.ormlite.stmt.query.In:
    java.lang.Iterable objects -> objects
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.InSubQuery -> com.j256.ormlite.stmt.query.InSubQuery:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNotNull -> com.j256.ormlite.stmt.query.IsNotNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNull -> com.j256.ormlite.stmt.query.IsNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.ManyClause -> com.j256.ormlite.stmt.query.ManyClause:
    java.lang.String AND_OPERATION -> AND_OPERATION
    java.lang.String OR_OPERATION -> OR_OPERATION
    com.j256.ormlite.stmt.query.Clause first -> first
    com.j256.ormlite.stmt.query.Clause second -> second
    com.j256.ormlite.stmt.query.Clause[] others -> others
    int startOthersAt -> startOthersAt
    java.lang.String operation -> operation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.stmt.query.NeedsFutureClause:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.Not -> com.j256.ormlite.stmt.query.Not:
    com.j256.ormlite.stmt.query.Comparison comparison -> comparison
    com.j256.ormlite.stmt.query.Exists exists -> exists
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.stmt.query.OrderBy:
    java.lang.String columnName -> columnName
    boolean ascending -> ascending
    java.lang.String getColumnName() -> getColumnName
    boolean isAscending() -> isAscending
com.j256.ormlite.stmt.query.Raw -> com.j256.ormlite.stmt.query.Raw:
    java.lang.String statement -> statement
    com.j256.ormlite.stmt.ArgumentHolder[] args -> args
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetExpression -> com.j256.ormlite.stmt.query.SetExpression:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetValue -> com.j256.ormlite.stmt.query.SetValue:
    com.j256.ormlite.stmt.ArgumentHolder nullValue -> nullValue
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.stmt.query.SimpleComparison:
    java.lang.String EQUAL_TO_OPERATION -> EQUAL_TO_OPERATION
    java.lang.String GREATER_THAN_OPERATION -> GREATER_THAN_OPERATION
    java.lang.String GREATER_THAN_EQUAL_TO_OPERATION -> GREATER_THAN_EQUAL_TO_OPERATION
    java.lang.String LESS_THAN_OPERATION -> LESS_THAN_OPERATION
    java.lang.String LESS_THAN_EQUAL_TO_OPERATION -> LESS_THAN_EQUAL_TO_OPERATION
    java.lang.String LIKE_OPERATION -> LIKE_OPERATION
    java.lang.String NOT_EQUAL_TO_OPERATION -> NOT_EQUAL_TO_OPERATION
    java.lang.String operation -> operation
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.support.BaseConnectionSource:
    java.lang.ThreadLocal specialConnection -> specialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> getSavedConnection
    boolean isSavedConnection(com.j256.ormlite.support.DatabaseConnection) -> isSavedConnection
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> saveSpecial
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> clearSpecial
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.support.a:
    com.j256.ormlite.support.DatabaseConnection connection -> a
    int nestedC -> b
    void increment() -> a
    int decrementAndGet() -> b
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.support.CompiledStatement:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    int runUpdate() -> runUpdate
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.support.ConnectionSource:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.support.DatabaseConnection:
    java.lang.Object MORE_THAN_ONE -> MORE_THAN_ONE
    int DEFAULT_RESULT_FLAGS -> DEFAULT_RESULT_FLAGS
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxy -> com.j256.ormlite.support.DatabaseConnectionProxy:
    com.j256.ormlite.support.DatabaseConnection proxy -> proxy
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxyFactory -> com.j256.ormlite.support.DatabaseConnectionProxyFactory:
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.support.DatabaseResults:
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean previous() -> previous
    boolean next() -> next
    boolean last() -> last
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.support.GeneratedKeyHolder:
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory -> com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory:
    java.lang.Class proxyClass -> proxyClass
    java.lang.reflect.Constructor constructor -> constructor
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.table.DatabaseTable:
    java.lang.String tableName() -> tableName
    java.lang.Class daoClass() -> daoClass
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.table.DatabaseTableConfig:
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    java.util.List fieldConfigs -> fieldConfigs
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    java.lang.reflect.Constructor constructor -> constructor
    void initialize() -> initialize
    java.lang.Class getDataClass() -> getDataClass
    void setDataClass(java.lang.Class) -> setDataClass
    java.lang.String getTableName() -> getTableName
    void setTableName(java.lang.String) -> setTableName
    void setFieldConfigs(java.util.List) -> setFieldConfigs
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> getFieldTypes
    java.util.List getFieldConfigs() -> getFieldConfigs
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    void setConstructor(java.lang.reflect.Constructor) -> setConstructor
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    java.lang.String extractTableName(java.lang.Class) -> extractTableName
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> findNoArgConstructor
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> convertFieldConfigs
com.j256.ormlite.table.DatabaseTableConfigLoader -> com.j256.ormlite.table.DatabaseTableConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    java.lang.String CONFIG_FILE_FIELDS_START -> CONFIG_FILE_FIELDS_START
    java.lang.String CONFIG_FILE_FIELDS_END -> CONFIG_FILE_FIELDS_END
    java.lang.String FIELD_NAME_DATA_CLASS -> FIELD_NAME_DATA_CLASS
    java.lang.String FIELD_NAME_TABLE_NAME -> FIELD_NAME_TABLE_NAME
    java.util.List loadDatabaseConfigFromReader(java.io.BufferedReader) -> loadDatabaseConfigFromReader
    com.j256.ormlite.table.DatabaseTableConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> writeConfig
    void readTableField(com.j256.ormlite.table.DatabaseTableConfig,java.lang.String,java.lang.String) -> readTableField
    void readFields(java.io.BufferedReader,com.j256.ormlite.table.DatabaseTableConfig) -> readFields
com.j256.ormlite.table.ObjectFactory -> com.j256.ormlite.table.ObjectFactory:
    java.lang.Object createObject(java.lang.reflect.Constructor,java.lang.Class) -> createObject
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.table.TableInfo:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> NO_FOREIGN_COLLECTIONS
    com.j256.ormlite.dao.BaseDaoImpl baseDaoImpl -> baseDaoImpl
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    com.j256.ormlite.field.FieldType[] foreignCollections -> foreignCollections
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.reflect.Constructor constructor -> constructor
    boolean foreignAutoCreate -> foreignAutoCreate
    java.util.Map fieldNameMap -> fieldNameMap
    java.lang.Class getDataClass() -> getDataClass
    java.lang.String getTableName() -> getTableName
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> getFieldTypes
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> getFieldTypeByColumnName
    com.j256.ormlite.field.FieldType getIdField() -> getIdField
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.String objectToString(java.lang.Object) -> objectToString
    java.lang.Object createObject() -> createObject
    boolean isUpdatable() -> isUpdatable
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    com.j256.ormlite.field.FieldType[] getForeignCollections() -> getForeignCollections
    boolean hasColumnName(java.lang.String) -> hasColumnName
    void wireNewInstance(com.j256.ormlite.dao.BaseDaoImpl,java.lang.Object) -> wireNewInstance
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.table.TableUtils:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTableIfNotExists
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTableIfNotExists
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> getCreateTableStatements
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> getCreateTableStatements
    int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> dropTable
    int dropTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> dropTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> clearTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> clearTable
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> createTable
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> createTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.String) -> clearTable
    int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doDropTable
    void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropIndexStatements
    void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> addCreateTableStatements
    void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> addCreateIndexStatements
    void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropTableStatements
    int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doCreateTable
    int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean,boolean) -> doStatements
    int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> doCreateTestQueries
    java.util.List addCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> addCreateTableStatements
com.lohanry.andfilemanage.AndFileManageActivity -> com.lohanry.andfilemanage.AndFileManageActivity:
    java.lang.String path -> a
    com.lohanry.andfilemanage.tools.FileManageListViewAdapter mFileManageLVAdapter -> b
    java.util.ArrayList fileList -> c
    boolean isOutOfList -> d
    boolean isUseOutOfList -> e
    java.lang.String[] OutOfList -> f
    com.lohanry.andfilemanage.tools.FileInfo getFile_mFileInfo -> g
    android.view.GestureDetector mGestureDetector -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void destroy() -> a
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void finishAndturn(int,java.util.ArrayList) -> a
    void init(android.os.Bundle) -> a
    void createActiveX() -> b
    void initActiveX() -> c
    void listenActiveX() -> d
    void changeTitleText() -> e
    void reFresh(java.io.File) -> a
    void doFileFail(java.lang.String,int) -> a
    java.util.ArrayList getFileList(java.io.File) -> b
    void addHighFolderItem(java.util.ArrayList) -> a
    void addNowFolderItem(java.util.ArrayList) -> b
    com.lohanry.andfilemanage.tools.FileInfo getFile(java.io.File) -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void cleanAllChoose() -> f
    boolean isRight(float,float) -> a
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.lohanry.andfilemanage.TEST -> com.lohanry.andfilemanage.TEST:
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.lohanry.andfilemanage.tools.AndFileManage -> com.lohanry.andfilemanage.a.a:
    android.content.Intent intent -> a
    android.os.Bundle b -> b
    android.app.Activity mActivity -> c
    void startOpenActivity() -> a
com.lohanry.andfilemanage.tools.ConstantParameterTable -> com.lohanry.andfilemanage.a.b:
    int[] EXTENSIONICON -> a
    java.lang.String[] EXTENSION -> b
com.lohanry.andfilemanage.tools.FileInfo -> com.lohanry.andfilemanage.a.c:
    java.lang.String filename -> a
    java.lang.String timestamp -> b
    java.lang.String filesize -> c
    java.lang.String absolutePath -> d
    int icon -> e
    boolean isFile -> f
    java.lang.String permissions -> g
    java.io.File m -> h
    boolean isEnd -> i
    int mark -> j
    boolean isChoose -> k
com.lohanry.andfilemanage.tools.FileManageListViewAdapter -> com.lohanry.andfilemanage.a.d:
    android.content.Context mContext -> a
    int mResource -> b
    java.util.ArrayList fileList -> c
    int[] mItemIDs -> d
    android.view.LayoutInflater mInflater -> e
    com.lohanry.andfilemanage.tools.FileInfo tempFileInfo -> f
    boolean isInChooseActivity -> g
    com.lohanry.andfilemanage.tools.FileManageListViewAdapter$ViewHolder holder -> h
    android.view.View convertView -> i
    android.view.ViewGroup parent -> j
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void initActionX(int) -> a
    void creatActionX() -> b
    void setIsInChooseActivity(boolean) -> a
    boolean getIsInChooseActivity() -> a
com.lohanry.andfilemanage.tools.FileManageListViewAdapter$ViewHolder -> com.lohanry.andfilemanage.a.e:
    android.widget.ImageView icon -> a
    android.widget.TextView filename -> b
    android.widget.TextView timestamp -> c
    android.widget.TextView permissions -> d
    android.widget.TextView filesize -> e
    android.widget.ImageView isChoose -> f
com.lohanry.andfilemanage.tools.Tools -> com.lohanry.andfilemanage.a.f:
    java.lang.String getFileSize(long) -> a
    java.lang.String getFilePermissions(java.io.File) -> a
    java.lang.String getFileExtensions(java.io.File) -> b
    int getExtensionIconPosition(java.lang.String) -> a
    int getIcon(int) -> a
com.lxm.htmlparser.DisplayWH -> com.lxm.htmlparser.a:
    java.lang.String TAG -> a
    com.lxm.htmlparser.ShowWH DisplayWH(android.app.Activity) -> a
com.lxm.htmlparser.MainActivity -> com.lxm.htmlparser.MainActivity:
    android.os.Handler MyHandler -> b
    boolean bIsSave -> c
    com.lxm.htmlparser.ReadUrlThread MyThread -> a
    com.lxm.htmlparser.MyProgressDialog pd -> d
    com.markupartist.android.widget.PullToRefreshListView listView -> e
    int list_pos_click -> f
    com.lxm.htmlparser.MainActivity$PaginationAdapter adapter -> g
    android.os.Handler handler -> h
    com.github.snowdream.android.app.DownloadManager downloadManager -> i
    android.widget.ScrollView MyScrollView -> j
    void disableConnectionReuseIfNecessary() -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void initializeAdapter() -> b
    void loadMoreData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void updataurlgoing(int) -> a
    void Seachering(int) -> b
    void getdownurl(int,java.util.ArrayList) -> a
    int access$0(com.lxm.htmlparser.MainActivity) -> a
    com.lxm.htmlparser.MainActivity$PaginationAdapter access$1(com.lxm.htmlparser.MainActivity) -> b
    void access$2(com.lxm.htmlparser.MainActivity,int) -> a
    void access$3(com.lxm.htmlparser.MainActivity,int,java.util.ArrayList) -> a
    void access$4(com.lxm.htmlparser.MainActivity,boolean) -> a
    com.lxm.htmlparser.MyProgressDialog access$5(com.lxm.htmlparser.MainActivity) -> c
    void access$6(com.lxm.htmlparser.MainActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    android.widget.ScrollView access$7(com.lxm.htmlparser.MainActivity) -> d
    void access$8(com.lxm.htmlparser.MainActivity,int) -> b
    void access$9(com.lxm.htmlparser.MainActivity,int) -> c
com.lxm.htmlparser.MainActivity$1 -> com.lxm.htmlparser.b:
    com.lxm.htmlparser.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.lxm.htmlparser.MainActivity$2 -> com.lxm.htmlparser.c:
    com.lxm.htmlparser.MainActivity this$0 -> a
    void onRefresh() -> a
com.lxm.htmlparser.MainActivity$3 -> com.lxm.htmlparser.d:
    com.lxm.htmlparser.MainActivity this$0 -> a
    android.widget.EditText val$cc -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.lxm.htmlparser.MainActivity$PaginationAdapter -> com.lxm.htmlparser.e:
    java.util.List newsItems -> a
    com.lxm.htmlparser.MainActivity this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void addNewsItem(com.lxm.htmlparser.News) -> a
    com.lxm.htmlparser.News getNewsItem(int) -> a
    void clean() -> a
    void SetClick(int,boolean) -> a
    void Setisdown(int,boolean) -> b
    com.lxm.htmlparser.MainActivity access$0(com.lxm.htmlparser.MainActivity$PaginationAdapter) -> a
com.lxm.htmlparser.MainActivity$PaginationAdapter$1 -> com.lxm.htmlparser.f:
    com.lxm.htmlparser.MainActivity$PaginationAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.lxm.htmlparser.MainActivity$PaginationAdapter$2 -> com.lxm.htmlparser.g:
    com.lxm.htmlparser.MainActivity$PaginationAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.lxm.htmlparser.MyDialog -> com.lxm.htmlparser.h:
    android.widget.Button Myok -> a
    android.content.Context context -> b
    int Res_String_id -> c
    int layout_id -> d
    android.widget.Button Mycancel -> e
    boolean isLauncherSet -> f
    void setlauncherset(boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean access$0(com.lxm.htmlparser.MyDialog) -> a
com.lxm.htmlparser.MyDialog$1 -> com.lxm.htmlparser.i:
    com.lxm.htmlparser.MyDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.lxm.htmlparser.MyDialog$2 -> com.lxm.htmlparser.j:
    com.lxm.htmlparser.MyDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.lxm.htmlparser.MyMainActivity -> com.lxm.htmlparser.MyMainActivity:
    java.lang.String Search_key -> a
    android.widget.EditText Search_text -> b
    com.lxm.tools.ExitDoubleClick ExitClick -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    android.widget.EditText access$0(com.lxm.htmlparser.MyMainActivity) -> a
com.lxm.htmlparser.MyMainActivity$1 -> com.lxm.htmlparser.k:
    com.lxm.htmlparser.MyMainActivity this$0 -> a
    void OnDoubleClickCb() -> a
com.lxm.htmlparser.MyMainActivity$2 -> com.lxm.htmlparser.l:
    com.lxm.htmlparser.MyMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lxm.htmlparser.MyProgressDialog -> com.lxm.htmlparser.m:
    void onBackPressed() -> onBackPressed
    void dismiss() -> dismiss
com.lxm.htmlparser.MySetting -> com.lxm.htmlparser.MySetting:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
com.lxm.htmlparser.MyToast -> com.lxm.htmlparser.n:
    android.widget.Toast toast -> a
    android.os.Handler handler -> b
    java.lang.Runnable run -> c
    void showToast(android.app.Activity,int,int) -> a
    void toast(android.content.Context,java.lang.CharSequence,int) -> b
    void show(android.content.Context,java.lang.CharSequence,int) -> a
    android.widget.Toast access$0() -> a
com.lxm.htmlparser.MyToast$1 -> com.lxm.htmlparser.o:
    void run() -> run
com.lxm.htmlparser.MyUtil -> com.lxm.htmlparser.p:
    java.lang.String zhPattern -> a
    boolean isNetworkAvailable(android.content.Context) -> a
    void fenxiang(android.content.Context,com.github.snowdream.android.app.DownloadTask) -> a
    void OpenSetting(android.content.Context) -> b
    com.lxm.htmlparser.MyProgressDialog showprocessDialog(android.content.Context) -> c
    java.lang.String numberFormat2(double) -> a
    java.lang.String encode(java.lang.String,java.lang.String) -> a
com.lxm.htmlparser.Myapplication -> com.lxm.htmlparser.Myapplication:
    java.util.List ListenerArr -> a
    com.github.snowdream.android.app.DownloadListener listener -> b
    void onCreate() -> onCreate
    void putDownloadListener(com.github.snowdream.android.app.DownloadListener) -> a
    void popDownloadListener(com.github.snowdream.android.app.DownloadListener) -> b
    com.github.snowdream.android.app.DownloadListener getDownloadListener() -> a
    java.util.List access$0(com.lxm.htmlparser.Myapplication) -> a
com.lxm.htmlparser.Myapplication$1 -> com.lxm.htmlparser.q:
    com.lxm.htmlparser.Myapplication this$0 -> a
    void onAdd(com.github.snowdream.android.app.DownloadTask) -> a
    void onDelete(com.github.snowdream.android.app.DownloadTask) -> b
    void onStop(com.github.snowdream.android.app.DownloadTask) -> c
    void onStart(com.github.snowdream.android.app.DownloadTask) -> onStart
    void onStart() -> onStart
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onSuccess(com.github.snowdream.android.app.DownloadTask) -> d
    void onCancelled() -> onCancelled
    void onError(java.lang.Throwable) -> onError
    void onFinish() -> onFinish
    void onFinish(com.github.snowdream.android.app.DownloadTask) -> onFinish
    void onDelete(java.lang.Object) -> onDelete
    void onAdd(java.lang.Object) -> onAdd
    void onStop(java.lang.Object) -> onStop
    void onSuccess(java.lang.Object) -> onSuccess
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.lxm.htmlparser.News -> com.lxm.htmlparser.r:
    java.lang.String title -> a
    java.lang.String content -> b
    java.lang.String downloadurl -> c
    boolean click -> d
    boolean isshowdownload -> e
    boolean isdownloading -> f
    java.lang.String zuozhe -> g
    java.lang.String zuopin_leibie -> h
    java.lang.String getTitle() -> a
    java.lang.String getzuozhe() -> b
    void setzuozhe(java.lang.String) -> a
    java.lang.String getzuopin_leibie() -> c
    void setzuopin_leibie(java.lang.String) -> b
    void setdownloadurl(java.lang.String) -> c
    void setdownloading(boolean) -> a
    java.lang.String getdownloadurl() -> d
    void setTitle(java.lang.String) -> d
    java.lang.String getContent() -> e
    boolean getclick() -> f
    void Setclick(boolean) -> b
    void isshowdownload(boolean) -> c
    boolean showdownload() -> g
    void setContent(java.lang.String) -> e
com.lxm.htmlparser.R -> com.lxm.htmlparser.s:
com.lxm.htmlparser.R$styleable -> com.lxm.htmlparser.t:
    int[] MenuDrawer -> MenuDrawer
    int MenuDrawer_mdActiveIndicator -> MenuDrawer_mdActiveIndicator
    int MenuDrawer_mdAllowIndicatorAnimation -> MenuDrawer_mdAllowIndicatorAnimation
    int MenuDrawer_mdContentBackground -> MenuDrawer_mdContentBackground
    int MenuDrawer_mdDrawOverlay -> MenuDrawer_mdDrawOverlay
    int MenuDrawer_mdDrawerClosedUpContentDescription -> MenuDrawer_mdDrawerClosedUpContentDescription
    int MenuDrawer_mdDrawerOpenUpContentDescription -> MenuDrawer_mdDrawerOpenUpContentDescription
    int MenuDrawer_mdDropShadow -> MenuDrawer_mdDropShadow
    int MenuDrawer_mdDropShadowColor -> MenuDrawer_mdDropShadowColor
    int MenuDrawer_mdDropShadowEnabled -> MenuDrawer_mdDropShadowEnabled
    int MenuDrawer_mdDropShadowSize -> MenuDrawer_mdDropShadowSize
    int MenuDrawer_mdMaxAnimationDuration -> MenuDrawer_mdMaxAnimationDuration
    int MenuDrawer_mdMenuBackground -> MenuDrawer_mdMenuBackground
    int MenuDrawer_mdMenuSize -> MenuDrawer_mdMenuSize
    int MenuDrawer_mdPosition -> MenuDrawer_mdPosition
    int MenuDrawer_mdSlideDrawable -> MenuDrawer_mdSlideDrawable
    int MenuDrawer_mdTouchBezelSize -> MenuDrawer_mdTouchBezelSize
    int[] SmoothProgressBar -> SmoothProgressBar
    int SmoothProgressBar_spbStyle -> SmoothProgressBar_spbStyle
    int SmoothProgressBar_spb_color -> SmoothProgressBar_spb_color
    int SmoothProgressBar_spb_colors -> SmoothProgressBar_spb_colors
    int SmoothProgressBar_spb_default_color -> SmoothProgressBar_spb_default_color
    int SmoothProgressBar_spb_interpolator -> SmoothProgressBar_spb_interpolator
    int SmoothProgressBar_spb_mirror_mode -> SmoothProgressBar_spb_mirror_mode
    int SmoothProgressBar_spb_reversed -> SmoothProgressBar_spb_reversed
    int SmoothProgressBar_spb_sections_count -> SmoothProgressBar_spb_sections_count
    int SmoothProgressBar_spb_speed -> SmoothProgressBar_spb_speed
    int SmoothProgressBar_spb_stroke_separator_length -> SmoothProgressBar_spb_stroke_separator_length
    int SmoothProgressBar_spb_stroke_width -> SmoothProgressBar_spb_stroke_width
com.lxm.htmlparser.ReadUrlThread -> com.lxm.htmlparser.u:
    java.lang.String Url -> g
    android.os.Handler MyHandle -> a
    boolean bExitFlag -> b
    android.os.Handler CallerHandler -> c
    boolean bIsRuning -> d
    org.jsoup.nodes.Document Doc -> e
    int num -> h
    int getnum -> i
    java.lang.String getlist -> j
    boolean bCanLoading -> k
    java.lang.String bakUrl -> l
    boolean cancel -> m
    boolean bIsfirstRun -> n
    java.lang.String SeachStr -> o
    com.lxm.htmlparser.Search sear -> f
    com.lxm.htmlparser.ReadUrlThread$SearchRet Ret -> p
    android.os.Handler GetMyHandle() -> a
    void run() -> run
    void Gooning() -> b
    void Search() -> c
    void SendMessageToCaller(int,java.lang.Object) -> a
    void SetInitUrl(java.lang.String) -> a
    void getdownloadUrlEx(java.lang.String,java.lang.String) -> a
    java.lang.String getdownloadUrl(java.lang.String) -> b
    java.lang.String access$0(com.lxm.htmlparser.ReadUrlThread) -> a
    void access$1(com.lxm.htmlparser.ReadUrlThread,java.lang.String) -> a
    void access$2(com.lxm.htmlparser.ReadUrlThread,boolean) -> a
    boolean access$3(com.lxm.htmlparser.ReadUrlThread) -> b
    java.lang.String access$4(com.lxm.htmlparser.ReadUrlThread) -> c
    void access$5(com.lxm.htmlparser.ReadUrlThread) -> d
    void access$6(com.lxm.htmlparser.ReadUrlThread,boolean) -> b
    void access$7(com.lxm.htmlparser.ReadUrlThread) -> e
com.lxm.htmlparser.ReadUrlThread$1 -> com.lxm.htmlparser.v:
    com.lxm.htmlparser.ReadUrlThread this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.lxm.htmlparser.ReadUrlThread$SearchRet -> com.lxm.htmlparser.w:
    boolean bCanLoading -> a
    boolean bIserror -> b
    boolean bIsend -> c
    java.util.ArrayList al -> d
    int searchNum -> e
    void init() -> a
com.lxm.htmlparser.Search -> com.lxm.htmlparser.x:
    int index -> a
    java.lang.String searchNum -> b
    java.lang.String CurrPageUrl -> c
    java.lang.String NextPageUrl -> d
    int CurrPageNum -> e
    int CurrSearchNum -> f
    org.jsoup.nodes.Document Doc -> g
    java.lang.String SearchStr -> h
    java.lang.String Searchpre -> i
    java.lang.String baseUrl -> j
    void init(java.lang.String) -> a
    com.lxm.htmlparser.ReadUrlThread$SearchRet initSql() -> a
    void GetNextPage() -> c
    com.lxm.htmlparser.ReadUrlThread$SearchRet Searching() -> b
com.lxm.htmlparser.ShowWH -> com.lxm.htmlparser.y:
    int screenWidth -> a
    int screenHeight -> b
com.lxm.tools.DoubleClick -> com.lxm.a.a:
    android.content.Context mContext -> a
    long mStartTime -> b
    void doDoubleClick(int,int) -> a
    void afterDoubleClick() -> a
com.lxm.tools.ExitDoubleClick -> com.lxm.a.b:
    com.lxm.tools.ExitDoubleClick exitDoubleClick -> b
    com.lxm.tools.ExitDoubleClick$OnDoubleClick cb -> c
    com.lxm.tools.ExitDoubleClick getInstance(android.content.Context,com.lxm.tools.ExitDoubleClick$OnDoubleClick) -> a
    void afterDoubleClick() -> a
    void destroy() -> b
com.lxm.tools.ExitDoubleClick$OnDoubleClick -> com.lxm.a.c:
    void OnDoubleClickCb() -> a
com.lxm.tools.OpenFiles -> com.lxm.a.d:
    java.lang.String[][] MIME_MapTable -> a
    java.lang.String checkEndsWithInStringArray(java.lang.String) -> a
    android.content.Intent getIntent(java.lang.String,java.io.File) -> a
com.markupartist.android.widget.PullToRefreshListView -> com.markupartist.android.widget.PullToRefreshListView:
    com.markupartist.android.widget.PullToRefreshListView$OnRefreshListener mOnRefreshListener -> a
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> b
    android.view.LayoutInflater mInflater -> c
    android.widget.LinearLayout mRefreshView -> d
    int mCurrentScrollState -> e
    int mRefreshState -> f
    android.view.animation.RotateAnimation mFlipAnimation -> g
    android.view.animation.RotateAnimation mReverseFlipAnimation -> h
    int mRefreshViewHeight -> i
    int mRefreshOriginalTopPadding -> j
    boolean mBounceHack -> k
    void init(android.content.Context) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void RemoveFooterView() -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnRefreshListener(com.markupartist.android.widget.PullToRefreshListView$OnRefreshListener) -> setOnRefreshListener
    void setLastUpdated(java.lang.CharSequence) -> setLastUpdated
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void resetHeaderPadding() -> e
    void resetHeader() -> f
    void measureView(android.view.View) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void prepareForRefresh() -> b
    void onRefresh() -> c
    void onRefreshComplete() -> d
    int access$0(com.markupartist.android.widget.PullToRefreshListView) -> a
com.markupartist.android.widget.PullToRefreshListView$OnClickRefreshListener -> com.markupartist.android.widget.a:
    com.markupartist.android.widget.PullToRefreshListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.markupartist.android.widget.PullToRefreshListView$OnRefreshListener -> com.markupartist.android.widget.b:
    void onRefresh() -> a
fr.castorflex.android.smoothprogressbar.SmoothProgressBar -> fr.castorflex.android.smoothprogressbar.SmoothProgressBar:
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable checkIndeterminateDrawable() -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void setSmoothProgressDrawableInterpolator(android.view.animation.Interpolator) -> setSmoothProgressDrawableInterpolator
    void setSmoothProgressDrawableColors(int[]) -> setSmoothProgressDrawableColors
    void setSmoothProgressDrawableColor(int) -> setSmoothProgressDrawableColor
    void setSmoothProgressDrawableSpeed(float) -> setSmoothProgressDrawableSpeed
    void setSmoothProgressDrawableSectionsCount(int) -> setSmoothProgressDrawableSectionsCount
    void setSmoothProgressDrawableSeparatorLength(int) -> setSmoothProgressDrawableSeparatorLength
    void setSmoothProgressDrawableStrokeWidth(float) -> setSmoothProgressDrawableStrokeWidth
    void setSmoothProgressDrawableReversed(boolean) -> setSmoothProgressDrawableReversed
    void setSmoothProgressDrawableMirrorMode(boolean) -> setSmoothProgressDrawableMirrorMode
fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable -> fr.castorflex.android.smoothprogressbar.a:
    android.view.animation.Interpolator mInterpolator -> a
    android.graphics.Rect mBounds -> b
    android.graphics.Paint mPaint -> c
    int[] mColors -> d
    int mColorsIndex -> e
    boolean mRunning -> f
    float mCurrentOffset -> g
    int mSeparatorLength -> h
    int mSectionsCount -> i
    float mSpeed -> j
    boolean mReversed -> k
    boolean mNewTurn -> l
    boolean mMirrorMode -> m
    float mMaxOffset -> n
    java.lang.Runnable mUpdater -> o
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setColors(int[]) -> a
    void setColor(int) -> a
    void setSpeed(float) -> a
    void setSectionsCount(int) -> b
    void setSeparatorLength(int) -> c
    void setStrokeWidth(float) -> b
    void setReversed(boolean) -> a
    void setMirrorMode(boolean) -> b
    void draw(android.graphics.Canvas) -> draw
    void drawStrokes(android.graphics.Canvas) -> a
    void drawLine(android.graphics.Canvas,int,float,float,float,float,int) -> a
    int incrementColor(int) -> d
    int decrementColor(int) -> e
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void start() -> start
    void stop() -> stop
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    boolean isRunning() -> isRunning
    float access$0(fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable) -> a
    float access$1(fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable) -> b
    void access$2(fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable,float) -> a
    float access$3(fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable) -> c
    void access$4(fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable,boolean) -> a
    java.lang.Runnable access$5(fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable) -> d
fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$1 -> fr.castorflex.android.smoothprogressbar.b:
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable this$0 -> a
    void run() -> run
fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder -> fr.castorflex.android.smoothprogressbar.c:
    android.view.animation.Interpolator mInterpolator -> a
    int mSectionsCount -> b
    int[] mColors -> c
    float mSpeed -> d
    boolean mReversed -> e
    boolean mMirrorMode -> f
    int mStrokeSeparatorLength -> g
    float mStrokeWidth -> h
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable build() -> a
    void initValues(android.content.Context) -> a
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder interpolator(android.view.animation.Interpolator) -> a
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder sectionsCount(int) -> a
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder separatorLength(int) -> b
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder color(int) -> c
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder colors(int[]) -> a
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder strokeWidth(float) -> a
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder speed(float) -> b
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder reversed(boolean) -> a
    fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder mirrorMode(boolean) -> b
net.simonvt.menudrawer.BuildLayerFrameLayout -> net.simonvt.menudrawer.a:
    boolean mChanged -> a
    boolean mHardwareLayersEnabled -> b
    boolean mAttached -> c
    boolean mFirst -> d
    void setHardwareLayersEnabled(boolean) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void access$0(net.simonvt.menudrawer.BuildLayerFrameLayout,boolean) -> a
    boolean access$1(net.simonvt.menudrawer.BuildLayerFrameLayout) -> a
    boolean access$2(net.simonvt.menudrawer.BuildLayerFrameLayout) -> b
    void access$3(net.simonvt.menudrawer.BuildLayerFrameLayout,boolean) -> b
net.simonvt.menudrawer.BuildLayerFrameLayout$1 -> net.simonvt.menudrawer.b:
    net.simonvt.menudrawer.BuildLayerFrameLayout this$0 -> a
    void run() -> run
net.simonvt.menudrawer.BuildLayerFrameLayout$2 -> net.simonvt.menudrawer.c:
    net.simonvt.menudrawer.BuildLayerFrameLayout this$0 -> a
    void run() -> run
net.simonvt.menudrawer.ColorDrawable -> net.simonvt.menudrawer.d:
    net.simonvt.menudrawer.ColorDrawable$ColorState mState -> a
    android.graphics.Paint mPaint -> b
    int getChangingConfigurations() -> getChangingConfigurations
    void draw(android.graphics.Canvas) -> draw
    void setColor(int) -> a
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
net.simonvt.menudrawer.ColorDrawable$ColorState -> net.simonvt.menudrawer.e:
    int mBaseColor -> a
    int mUseColor -> b
    int mChangingConfigurations -> c
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
net.simonvt.menudrawer.DraggableDrawer -> net.simonvt.menudrawer.f:
    android.view.animation.Interpolator PEEK_INTERPOLATOR -> Z
    int mTouchSlop -> a
    java.lang.Runnable mPeekRunnable -> b
    java.lang.Runnable mDragRunnable -> aa
    boolean mIsDragging -> c
    int mActivePointerId -> d
    float mInitialMotionX -> e
    float mInitialMotionY -> f
    float mLastMotionX -> g
    float mLastMotionY -> h
    long mPeekDelay -> i
    net.simonvt.menudrawer.Scroller mPeekScroller -> j
    android.view.VelocityTracker mVelocityTracker -> k
    int mMaxVelocity -> l
    boolean mOffsetMenu -> m
    int mCloseEnough -> n
    java.lang.Runnable mPeekStartRunnable -> ab
    net.simonvt.menudrawer.Scroller mScroller -> ac
    boolean mLayerTypeHardware -> o
    int[] $SWITCH_TABLE$net$simonvt$menudrawer$Position -> ad
    void initDrawer(android.content.Context,android.util.AttributeSet,int) -> a
    boolean isMenuVisible() -> a
    void setMenuSize(int) -> setMenuSize
    void setOffsetMenuEnabled(boolean) -> setOffsetMenuEnabled
    boolean getOffsetMenuEnabled() -> getOffsetMenuEnabled
    void setHardwareLayerEnabled(boolean) -> setHardwareLayerEnabled
    int getTouchMode() -> getTouchMode
    void setTouchMode(int) -> setTouchMode
    void setTouchBezelSize(int) -> setTouchBezelSize
    int getTouchBezelSize() -> getTouchBezelSize
    void startLayerTranslation() -> b
    void stopLayerTranslation() -> c
    void endDrag() -> d
    void stopAnimation() -> e
    void completeAnimation() -> r
    void animateOffsetTo(int,int,boolean) -> a
    void animateOffsetTo(int,int) -> a
    void postAnimationInvalidate() -> s
    void startPeek() -> f
    void initPeekScroller() -> g
    void peekDrawerInvalidate() -> t
    void completePeek() -> u
    void endPeek() -> h
    boolean isCloseEnough() -> i
    boolean canChildrenScroll(int,int,int,int) -> a
    boolean canChildScrollHorizontally(android.view.View,boolean,int,int,int) -> a
    boolean canChildScrollVertically(android.view.View,boolean,int,int,int) -> b
    float getXVelocity(android.view.VelocityTracker) -> a
    float getYVelocity(android.view.VelocityTracker) -> b
    int supportGetTranslationY(android.view.View) -> b
    int supportGetTranslationX(android.view.View) -> c
    void saveState(android.os.Bundle) -> a
    void restoreState(android.os.Parcelable) -> a
    void access$0(net.simonvt.menudrawer.DraggableDrawer) -> a
    void access$1(net.simonvt.menudrawer.DraggableDrawer) -> b
    int[] $SWITCH_TABLE$net$simonvt$menudrawer$Position() -> j
net.simonvt.menudrawer.DraggableDrawer$1 -> net.simonvt.menudrawer.g:
    net.simonvt.menudrawer.DraggableDrawer this$0 -> a
    void run() -> run
net.simonvt.menudrawer.DraggableDrawer$2 -> net.simonvt.menudrawer.h:
    net.simonvt.menudrawer.DraggableDrawer this$0 -> a
    void run() -> run
net.simonvt.menudrawer.DraggableDrawer$4 -> net.simonvt.menudrawer.i:
    net.simonvt.menudrawer.DraggableDrawer this$0 -> a
    void run() -> run
net.simonvt.menudrawer.FloatScroller -> net.simonvt.menudrawer.j:
    float mStart -> a
    float mFinal -> b
    float mCurr -> c
    long mStartTime -> d
    int mDuration -> e
    float mDurationReciprocal -> f
    float mDeltaX -> g
    boolean mFinished -> h
    android.view.animation.Interpolator mInterpolator -> i
    boolean isFinished() -> a
    float getCurr() -> b
    boolean computeScrollOffset() -> c
    void startScroll(float,float,int) -> a
net.simonvt.menudrawer.MenuDrawer -> net.simonvt.menudrawer.MenuDrawer:
    boolean USE_TRANSLATIONS -> p
    android.view.animation.Interpolator SMOOTH_INTERPOLATOR -> q
    android.view.animation.Interpolator INDICATOR_INTERPOLATOR -> r
    android.graphics.drawable.Drawable mMenuOverlay -> s
    boolean mDropShadowEnabled -> t
    int mDropShadowColor -> u
    android.graphics.drawable.Drawable mDropShadowDrawable -> v
    boolean mCustomDropShadow -> a
    int mDropShadowSize -> w
    android.graphics.Bitmap mActiveIndicator -> x
    android.view.View mActiveView -> y
    int mActivePosition -> z
    boolean mAllowIndicatorAnimation -> b
    android.graphics.Rect mActiveRect -> A
    android.graphics.Rect mTempRect -> c
    android.view.View mMenuView -> d
    net.simonvt.menudrawer.BuildLayerFrameLayout mMenuContainer -> B
    net.simonvt.menudrawer.BuildLayerFrameLayout mContentContainer -> C
    int mMenuSize -> D
    boolean mMenuVisible -> E
    int mDragMode -> e
    int mDrawerState -> F
    int mTouchBezelSize -> G
    int mTouchSize -> H
    net.simonvt.menudrawer.MenuDrawer$OnDrawerStateChangeListener mOnDrawerStateChangeListener -> f
    int mTouchMode -> I
    boolean mHardwareLayersEnabled -> J
    android.app.Activity mActivity -> g
    net.simonvt.menudrawer.FloatScroller mIndicatorScroller -> h
    java.lang.Runnable mIndicatorRunnable -> i
    int mIndicatorStartPos -> K
    float mIndicatorOffset -> L
    boolean mIndicatorAnimating -> M
    android.os.Bundle mState -> N
    int mMaxAnimationDuration -> O
    net.simonvt.menudrawer.MenuDrawer$OnInterceptMoveEventListener mOnInterceptMoveEventListener -> P
    net.simonvt.menudrawer.SlideDrawable mSlideDrawable -> Q
    android.graphics.drawable.Drawable mThemeUpIndicator -> R
    boolean mDrawerIndicatorEnabled -> S
    net.simonvt.menudrawer.compat.ActionBarHelper mActionBarHelper -> j
    int mCurrentUpContentDesc -> k
    int mDrawerOpenContentDesc -> l
    int mDrawerClosedContentDesc -> m
    net.simonvt.menudrawer.Position mPosition -> n
    net.simonvt.menudrawer.Position mResolvedPosition -> o
    android.graphics.Rect mIndicatorClipRect -> Z
    boolean mIsStatic -> T
    android.graphics.Rect mDropShadowRect -> U
    float mOffsetPixels -> V
    boolean mDrawOverlay -> W
    android.view.ViewTreeObserver$OnScrollChangedListener mScrollListener -> aa
    int[] $SWITCH_TABLE$net$simonvt$menudrawer$Position -> ab
    void initDrawer(android.content.Context,android.util.AttributeSet,int) -> a
    void onFinishInflate() -> onFinishInflate
    int dpToPx(int) -> a
    boolean isViewDescendant(android.view.View) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDrawIndicator() -> b
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void drawOverlay(android.graphics.Canvas) -> a
    void drawDropShadow(android.graphics.Canvas) -> b
    void updateDropShadowRect() -> k
    void drawIndicator(android.graphics.Canvas) -> c
    void updateIndicatorClipRect() -> l
    void setPosition(net.simonvt.menudrawer.Position) -> setPosition
    net.simonvt.menudrawer.Position getPosition() -> getPosition
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void setOffsetPixels(float) -> setOffsetPixels
    void onOffsetPixelsChanged(int) -> b
    void openMenu() -> m
    void openMenu(boolean) -> a
    void closeMenu() -> n
    void closeMenu(boolean) -> b
    boolean isMenuVisible() -> a
    void setMenuSize(int) -> setMenuSize
    int getMenuSize() -> getMenuSize
    void setActiveView(android.view.View) -> setActiveView
    void setActiveView(android.view.View,int) -> a
    void setAllowIndicatorAnimation(boolean) -> setAllowIndicatorAnimation
    boolean getAllowIndicatorAnimation() -> getAllowIndicatorAnimation
    void startAnimatingIndicator() -> c
    int getIndicatorStartPos() -> getIndicatorStartPos
    void updateTouchAreaSize() -> o
    void animateIndicatorInvalidate() -> d
    void completeAnimatingIndicator() -> e
    void setOffsetMenuEnabled(boolean) -> setOffsetMenuEnabled
    boolean getOffsetMenuEnabled() -> getOffsetMenuEnabled
    int getDrawerState() -> getDrawerState
    void setOnDrawerStateChangeListener(net.simonvt.menudrawer.MenuDrawer$OnDrawerStateChangeListener) -> setOnDrawerStateChangeListener
    void setOnInterceptMoveEventListener(net.simonvt.menudrawer.MenuDrawer$OnInterceptMoveEventListener) -> setOnInterceptMoveEventListener
    void setDropShadowEnabled(boolean) -> setDropShadowEnabled
    android.graphics.drawable.GradientDrawable$Orientation getDropShadowOrientation() -> getDropShadowOrientation
    void setDropShadowColor(int) -> setDropShadowColor
    void setDropShadow(android.graphics.drawable.Drawable) -> setDropShadow
    void setDropShadow(int) -> setDropShadow
    android.graphics.drawable.Drawable getDropShadow() -> getDropShadow
    void setDropShadowSize(int) -> setDropShadowSize
    void setHardwareLayerEnabled(boolean) -> setHardwareLayerEnabled
    void setMaxAnimationDuration(int) -> setMaxAnimationDuration
    void setDrawOverlay(boolean) -> setDrawOverlay
    boolean getDrawOverlay() -> getDrawOverlay
    void updateUpContentDescription() -> p
    void setSlideDrawable(int) -> setSlideDrawable
    void setSlideDrawable(android.graphics.drawable.Drawable) -> setSlideDrawable
    void setupUpIndicator(android.app.Activity) -> setupUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    android.view.ViewGroup getMenuContainer() -> getMenuContainer
    android.view.ViewGroup getContentContainer() -> getContentContainer
    void setMenuView(int) -> setMenuView
    void setMenuView(android.view.View) -> setMenuView
    void setMenuView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    android.view.View getMenuView() -> getMenuView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void setDrawerState(int) -> setDrawerState
    int getTouchMode() -> getTouchMode
    void setTouchMode(int) -> setTouchMode
    void setTouchBezelSize(int) -> setTouchBezelSize
    int getTouchBezelSize() -> getTouchBezelSize
    void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void dispatchOnDrawerSlide(float,int) -> a
    void saveState(android.os.Bundle) -> a
    void restoreState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$0(net.simonvt.menudrawer.MenuDrawer) -> a
    android.graphics.Rect access$1(net.simonvt.menudrawer.MenuDrawer) -> b
    int[] $SWITCH_TABLE$net$simonvt$menudrawer$Position() -> q
net.simonvt.menudrawer.MenuDrawer$1 -> net.simonvt.menudrawer.k:
    net.simonvt.menudrawer.MenuDrawer this$0 -> a
    void run() -> run
net.simonvt.menudrawer.MenuDrawer$2 -> net.simonvt.menudrawer.l:
    net.simonvt.menudrawer.MenuDrawer this$0 -> a
    void onScrollChanged() -> onScrollChanged
net.simonvt.menudrawer.MenuDrawer$OnDrawerStateChangeListener -> net.simonvt.menudrawer.m:
    void onDrawerStateChange(int,int) -> a
    void onDrawerSlide(float,int) -> a
net.simonvt.menudrawer.MenuDrawer$OnInterceptMoveEventListener -> net.simonvt.menudrawer.n:
    boolean isViewDraggable(android.view.View,int,int,int) -> a
net.simonvt.menudrawer.MenuDrawer$SavedState -> net.simonvt.menudrawer.MenuDrawer$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
net.simonvt.menudrawer.MenuDrawer$SavedState$1 -> net.simonvt.menudrawer.o:
    net.simonvt.menudrawer.MenuDrawer$SavedState createFromParcel(android.os.Parcel) -> a
    net.simonvt.menudrawer.MenuDrawer$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
net.simonvt.menudrawer.NoClickThroughFrameLayout -> net.simonvt.menudrawer.p:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
net.simonvt.menudrawer.PeekInterpolator -> net.simonvt.menudrawer.q:
    net.simonvt.menudrawer.SinusoidalInterpolator SINUSOIDAL_INTERPOLATOR -> a
    float getInterpolation(float) -> getInterpolation
net.simonvt.menudrawer.Position -> net.simonvt.menudrawer.r:
    net.simonvt.menudrawer.Position LEFT -> a
    net.simonvt.menudrawer.Position TOP -> b
    net.simonvt.menudrawer.Position RIGHT -> c
    net.simonvt.menudrawer.Position BOTTOM -> d
    net.simonvt.menudrawer.Position START -> e
    net.simonvt.menudrawer.Position END -> f
    int mValue -> g
    android.util.SparseArray STRING_MAPPING -> h
    net.simonvt.menudrawer.Position[] ENUM$VALUES -> i
    net.simonvt.menudrawer.Position fromValue(int) -> a
    net.simonvt.menudrawer.Position[] values() -> values
    net.simonvt.menudrawer.Position valueOf(java.lang.String) -> valueOf
net.simonvt.menudrawer.Scroller -> net.simonvt.menudrawer.s:
    int mMode -> a
    int mStartX -> b
    int mStartY -> c
    int mFinalX -> d
    int mFinalY -> e
    int mMinX -> f
    int mMaxX -> g
    int mMinY -> h
    int mMaxY -> i
    int mCurrX -> j
    int mCurrY -> k
    long mStartTime -> l
    int mDuration -> m
    float mDurationReciprocal -> n
    float mDeltaX -> o
    float mDeltaY -> p
    boolean mFinished -> q
    android.view.animation.Interpolator mInterpolator -> r
    boolean mFlywheel -> s
    float DECELERATION_RATE -> t
    float[] SPLINE -> u
    float mDeceleration -> v
    float mPpi -> w
    float sViscousFluidScale -> x
    float sViscousFluidNormalize -> y
    float computeDeceleration(float) -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getFinalX() -> c
    boolean computeScrollOffset() -> d
    void startScroll(int,int,int,int,int) -> a
    float viscousFluid(float) -> a
    void abortAnimation() -> e
net.simonvt.menudrawer.SinusoidalInterpolator -> net.simonvt.menudrawer.t:
    float getInterpolation(float) -> getInterpolation
net.simonvt.menudrawer.SlideDrawable -> net.simonvt.menudrawer.u:
    android.graphics.drawable.Drawable mWrapped -> a
    float mOffset -> b
    android.graphics.Rect mTmpRect -> c
    boolean mIsRtl -> d
    void setOffset(float) -> a
    void setIsRtl(boolean) -> a
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
net.simonvt.menudrawer.SlidingDrawer -> net.simonvt.menudrawer.SlidingDrawer:
    int[] $SWITCH_TABLE$net$simonvt$menudrawer$Position -> Z
    void initDrawer(android.content.Context,android.util.AttributeSet,int) -> a
    void openMenu(boolean) -> a
    void closeMenu(boolean) -> b
    void onOffsetPixelsChanged(int) -> b
    void initPeekScroller() -> g
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void drawOverlay(android.graphics.Canvas) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void offsetMenu(int) -> c
    void onMeasure(int,int) -> onMeasure
    boolean isContentTouch(int,int) -> d
    boolean onDownAllowDrag(int,int) -> b
    boolean onMoveAllowDrag(int,int,float,float) -> a
    void onMoveEvent(float,float) -> a
    void onUpEvent(int,int) -> c
    boolean checkTouchSlop(float,float) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onPointerUp(android.view.MotionEvent) -> a
    int[] $SWITCH_TABLE$net$simonvt$menudrawer$Position() -> r
net.simonvt.menudrawer.SmoothInterpolator -> net.simonvt.menudrawer.v:
    float getInterpolation(float) -> getInterpolation
net.simonvt.menudrawer.ViewHelper -> net.simonvt.menudrawer.w:
    int getLeft(android.view.View) -> a
    int getTop(android.view.View) -> b
    int getRight(android.view.View) -> c
    int getBottom(android.view.View) -> d
    int getLayoutDirection(android.view.View) -> e
net.simonvt.menudrawer.compat.ActionBarHelper -> net.simonvt.menudrawer.a.a:
    android.app.Activity mActivity -> a
    java.lang.Object mIndicatorInfo -> b
    boolean mUsesCompat -> c
    java.lang.Object getIndicatorInfo() -> b
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setDisplayShowHomeAsUpEnabled(boolean) -> a
net.simonvt.menudrawer.compat.ActionBarHelperCompat -> net.simonvt.menudrawer.a.b:
    void setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(java.lang.Object) -> a
    java.lang.Object getIndicatorInfo(android.app.Activity) -> a
    void setDisplayHomeAsUpEnabled(java.lang.Object,boolean) -> a
net.simonvt.menudrawer.compat.ActionBarHelperCompat$SetIndicatorInfo -> net.simonvt.menudrawer.a.c:
    android.widget.ImageView mUpIndicatorView -> a
    java.lang.Object mActionBar -> b
    java.lang.reflect.Method mHomeAsUpEnabled -> c
net.simonvt.menudrawer.compat.ActionBarHelperNative -> net.simonvt.menudrawer.a.d:
    int[] THEME_ATTRS -> a
    void setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(java.lang.Object,android.app.Activity) -> a
    java.lang.Object getIndicatorInfo(android.app.Activity) -> a
    void setDisplayHomeAsUpEnabled(android.app.Activity,boolean) -> a
net.simonvt.menudrawer.compat.ActionBarHelperNative$SetIndicatorInfo -> net.simonvt.menudrawer.a.e:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
org.apache.commons.lang3.AnnotationUtils -> org.apache.commons.lang3.AnnotationUtils:
    org.apache.commons.lang3.builder.ToStringStyle TO_STRING_STYLE -> TO_STRING_STYLE
    boolean equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation) -> equals
    int hashCode(java.lang.annotation.Annotation) -> hashCode
    java.lang.String toString(java.lang.annotation.Annotation) -> toString
    boolean isValidAnnotationMemberType(java.lang.Class) -> isValidAnnotationMemberType
    int hashMember(java.lang.String,java.lang.Object) -> hashMember
    boolean memberEquals(java.lang.Class,java.lang.Object,java.lang.Object) -> memberEquals
    boolean arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object) -> arrayMemberEquals
    boolean annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[]) -> annotationArrayMemberEquals
    int arrayMemberHash(java.lang.Class,java.lang.Object) -> arrayMemberHash
org.apache.commons.lang3.AnnotationUtils$1 -> org.apache.commons.lang3.a:
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
org.apache.commons.lang3.ArrayUtils -> org.apache.commons.lang3.ArrayUtils:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> EMPTY_OBJECT_ARRAY
    java.lang.Class[] EMPTY_CLASS_ARRAY -> EMPTY_CLASS_ARRAY
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    long[] EMPTY_LONG_ARRAY -> EMPTY_LONG_ARRAY
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> EMPTY_LONG_OBJECT_ARRAY
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> EMPTY_INTEGER_OBJECT_ARRAY
    short[] EMPTY_SHORT_ARRAY -> EMPTY_SHORT_ARRAY
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> EMPTY_SHORT_OBJECT_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> EMPTY_BYTE_OBJECT_ARRAY
    double[] EMPTY_DOUBLE_ARRAY -> EMPTY_DOUBLE_ARRAY
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> EMPTY_DOUBLE_OBJECT_ARRAY
    float[] EMPTY_FLOAT_ARRAY -> EMPTY_FLOAT_ARRAY
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> EMPTY_FLOAT_OBJECT_ARRAY
    boolean[] EMPTY_BOOLEAN_ARRAY -> EMPTY_BOOLEAN_ARRAY
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> EMPTY_BOOLEAN_OBJECT_ARRAY
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> EMPTY_CHARACTER_OBJECT_ARRAY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    int hashCode(java.lang.Object) -> hashCode
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    java.util.Map toMap(java.lang.Object[]) -> toMap
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object[] clone(java.lang.Object[]) -> clone
    long[] clone(long[]) -> clone
    int[] clone(int[]) -> clone
    short[] clone(short[]) -> clone
    char[] clone(char[]) -> clone
    byte[] clone(byte[]) -> clone
    double[] clone(double[]) -> clone
    float[] clone(float[]) -> clone
    boolean[] clone(boolean[]) -> clone
    java.lang.Object[] nullToEmpty(java.lang.Object[]) -> nullToEmpty
    java.lang.Class[] nullToEmpty(java.lang.Class[]) -> nullToEmpty
    java.lang.String[] nullToEmpty(java.lang.String[]) -> nullToEmpty
    long[] nullToEmpty(long[]) -> nullToEmpty
    int[] nullToEmpty(int[]) -> nullToEmpty
    short[] nullToEmpty(short[]) -> nullToEmpty
    char[] nullToEmpty(char[]) -> nullToEmpty
    byte[] nullToEmpty(byte[]) -> nullToEmpty
    double[] nullToEmpty(double[]) -> nullToEmpty
    float[] nullToEmpty(float[]) -> nullToEmpty
    boolean[] nullToEmpty(boolean[]) -> nullToEmpty
    java.lang.Long[] nullToEmpty(java.lang.Long[]) -> nullToEmpty
    java.lang.Integer[] nullToEmpty(java.lang.Integer[]) -> nullToEmpty
    java.lang.Short[] nullToEmpty(java.lang.Short[]) -> nullToEmpty
    java.lang.Character[] nullToEmpty(java.lang.Character[]) -> nullToEmpty
    java.lang.Byte[] nullToEmpty(java.lang.Byte[]) -> nullToEmpty
    java.lang.Double[] nullToEmpty(java.lang.Double[]) -> nullToEmpty
    java.lang.Float[] nullToEmpty(java.lang.Float[]) -> nullToEmpty
    java.lang.Boolean[] nullToEmpty(java.lang.Boolean[]) -> nullToEmpty
    java.lang.Object[] subarray(java.lang.Object[],int,int) -> subarray
    long[] subarray(long[],int,int) -> subarray
    int[] subarray(int[],int,int) -> subarray
    short[] subarray(short[],int,int) -> subarray
    char[] subarray(char[],int,int) -> subarray
    byte[] subarray(byte[],int,int) -> subarray
    double[] subarray(double[],int,int) -> subarray
    float[] subarray(float[],int,int) -> subarray
    boolean[] subarray(boolean[],int,int) -> subarray
    boolean isSameLength(java.lang.Object[],java.lang.Object[]) -> isSameLength
    boolean isSameLength(long[],long[]) -> isSameLength
    boolean isSameLength(int[],int[]) -> isSameLength
    boolean isSameLength(short[],short[]) -> isSameLength
    boolean isSameLength(char[],char[]) -> isSameLength
    boolean isSameLength(byte[],byte[]) -> isSameLength
    boolean isSameLength(double[],double[]) -> isSameLength
    boolean isSameLength(float[],float[]) -> isSameLength
    boolean isSameLength(boolean[],boolean[]) -> isSameLength
    int getLength(java.lang.Object) -> getLength
    boolean isSameType(java.lang.Object,java.lang.Object) -> isSameType
    void reverse(java.lang.Object[]) -> reverse
    void reverse(long[]) -> reverse
    void reverse(int[]) -> reverse
    void reverse(short[]) -> reverse
    void reverse(char[]) -> reverse
    void reverse(byte[]) -> reverse
    void reverse(double[]) -> reverse
    void reverse(float[]) -> reverse
    void reverse(boolean[]) -> reverse
    void reverse(boolean[],int,int) -> reverse
    void reverse(byte[],int,int) -> reverse
    void reverse(char[],int,int) -> reverse
    void reverse(double[],int,int) -> reverse
    void reverse(float[],int,int) -> reverse
    void reverse(int[],int,int) -> reverse
    void reverse(long[],int,int) -> reverse
    void reverse(java.lang.Object[],int,int) -> reverse
    void reverse(short[],int,int) -> reverse
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    int indexOf(java.lang.Object[],java.lang.Object,int) -> indexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object) -> lastIndexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object,int) -> lastIndexOf
    boolean contains(java.lang.Object[],java.lang.Object) -> contains
    int indexOf(long[],long) -> indexOf
    int indexOf(long[],long,int) -> indexOf
    int lastIndexOf(long[],long) -> lastIndexOf
    int lastIndexOf(long[],long,int) -> lastIndexOf
    boolean contains(long[],long) -> contains
    int indexOf(int[],int) -> indexOf
    int indexOf(int[],int,int) -> indexOf
    int lastIndexOf(int[],int) -> lastIndexOf
    int lastIndexOf(int[],int,int) -> lastIndexOf
    boolean contains(int[],int) -> contains
    int indexOf(short[],short) -> indexOf
    int indexOf(short[],short,int) -> indexOf
    int lastIndexOf(short[],short) -> lastIndexOf
    int lastIndexOf(short[],short,int) -> lastIndexOf
    boolean contains(short[],short) -> contains
    int indexOf(char[],char) -> indexOf
    int indexOf(char[],char,int) -> indexOf
    int lastIndexOf(char[],char) -> lastIndexOf
    int lastIndexOf(char[],char,int) -> lastIndexOf
    boolean contains(char[],char) -> contains
    int indexOf(byte[],byte) -> indexOf
    int indexOf(byte[],byte,int) -> indexOf
    int lastIndexOf(byte[],byte) -> lastIndexOf
    int lastIndexOf(byte[],byte,int) -> lastIndexOf
    boolean contains(byte[],byte) -> contains
    int indexOf(double[],double) -> indexOf
    int indexOf(double[],double,double) -> indexOf
    int indexOf(double[],double,int) -> indexOf
    int indexOf(double[],double,int,double) -> indexOf
    int lastIndexOf(double[],double) -> lastIndexOf
    int lastIndexOf(double[],double,double) -> lastIndexOf
    int lastIndexOf(double[],double,int) -> lastIndexOf
    int lastIndexOf(double[],double,int,double) -> lastIndexOf
    boolean contains(double[],double) -> contains
    boolean contains(double[],double,double) -> contains
    int indexOf(float[],float) -> indexOf
    int indexOf(float[],float,int) -> indexOf
    int lastIndexOf(float[],float) -> lastIndexOf
    int lastIndexOf(float[],float,int) -> lastIndexOf
    boolean contains(float[],float) -> contains
    int indexOf(boolean[],boolean) -> indexOf
    int indexOf(boolean[],boolean,int) -> indexOf
    int lastIndexOf(boolean[],boolean) -> lastIndexOf
    int lastIndexOf(boolean[],boolean,int) -> lastIndexOf
    boolean contains(boolean[],boolean) -> contains
    char[] toPrimitive(java.lang.Character[]) -> toPrimitive
    char[] toPrimitive(java.lang.Character[],char) -> toPrimitive
    java.lang.Character[] toObject(char[]) -> toObject
    long[] toPrimitive(java.lang.Long[]) -> toPrimitive
    long[] toPrimitive(java.lang.Long[],long) -> toPrimitive
    java.lang.Long[] toObject(long[]) -> toObject
    int[] toPrimitive(java.lang.Integer[]) -> toPrimitive
    int[] toPrimitive(java.lang.Integer[],int) -> toPrimitive
    java.lang.Integer[] toObject(int[]) -> toObject
    short[] toPrimitive(java.lang.Short[]) -> toPrimitive
    short[] toPrimitive(java.lang.Short[],short) -> toPrimitive
    java.lang.Short[] toObject(short[]) -> toObject
    byte[] toPrimitive(java.lang.Byte[]) -> toPrimitive
    byte[] toPrimitive(java.lang.Byte[],byte) -> toPrimitive
    java.lang.Byte[] toObject(byte[]) -> toObject
    double[] toPrimitive(java.lang.Double[]) -> toPrimitive
    double[] toPrimitive(java.lang.Double[],double) -> toPrimitive
    java.lang.Double[] toObject(double[]) -> toObject
    float[] toPrimitive(java.lang.Float[]) -> toPrimitive
    float[] toPrimitive(java.lang.Float[],float) -> toPrimitive
    java.lang.Float[] toObject(float[]) -> toObject
    boolean[] toPrimitive(java.lang.Boolean[]) -> toPrimitive
    boolean[] toPrimitive(java.lang.Boolean[],boolean) -> toPrimitive
    java.lang.Boolean[] toObject(boolean[]) -> toObject
    boolean isEmpty(java.lang.Object[]) -> isEmpty
    boolean isEmpty(long[]) -> isEmpty
    boolean isEmpty(int[]) -> isEmpty
    boolean isEmpty(short[]) -> isEmpty
    boolean isEmpty(char[]) -> isEmpty
    boolean isEmpty(byte[]) -> isEmpty
    boolean isEmpty(double[]) -> isEmpty
    boolean isEmpty(float[]) -> isEmpty
    boolean isEmpty(boolean[]) -> isEmpty
    boolean isNotEmpty(java.lang.Object[]) -> isNotEmpty
    boolean isNotEmpty(long[]) -> isNotEmpty
    boolean isNotEmpty(int[]) -> isNotEmpty
    boolean isNotEmpty(short[]) -> isNotEmpty
    boolean isNotEmpty(char[]) -> isNotEmpty
    boolean isNotEmpty(byte[]) -> isNotEmpty
    boolean isNotEmpty(double[]) -> isNotEmpty
    boolean isNotEmpty(float[]) -> isNotEmpty
    boolean isNotEmpty(boolean[]) -> isNotEmpty
    java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[]) -> addAll
    boolean[] addAll(boolean[],boolean[]) -> addAll
    char[] addAll(char[],char[]) -> addAll
    byte[] addAll(byte[],byte[]) -> addAll
    short[] addAll(short[],short[]) -> addAll
    int[] addAll(int[],int[]) -> addAll
    long[] addAll(long[],long[]) -> addAll
    float[] addAll(float[],float[]) -> addAll
    double[] addAll(double[],double[]) -> addAll
    java.lang.Object[] add(java.lang.Object[],java.lang.Object) -> add
    boolean[] add(boolean[],boolean) -> add
    byte[] add(byte[],byte) -> add
    char[] add(char[],char) -> add
    double[] add(double[],double) -> add
    float[] add(float[],float) -> add
    int[] add(int[],int) -> add
    long[] add(long[],long) -> add
    short[] add(short[],short) -> add
    java.lang.Object copyArrayGrow1(java.lang.Object,java.lang.Class) -> copyArrayGrow1
    java.lang.Object[] add(java.lang.Object[],int,java.lang.Object) -> add
    boolean[] add(boolean[],int,boolean) -> add
    char[] add(char[],int,char) -> add
    byte[] add(byte[],int,byte) -> add
    short[] add(short[],int,short) -> add
    int[] add(int[],int,int) -> add
    long[] add(long[],int,long) -> add
    float[] add(float[],int,float) -> add
    double[] add(double[],int,double) -> add
    java.lang.Object add(java.lang.Object,int,java.lang.Object,java.lang.Class) -> add
    java.lang.Object[] remove(java.lang.Object[],int) -> remove
    java.lang.Object[] removeElement(java.lang.Object[],java.lang.Object) -> removeElement
    boolean[] remove(boolean[],int) -> remove
    boolean[] removeElement(boolean[],boolean) -> removeElement
    byte[] remove(byte[],int) -> remove
    byte[] removeElement(byte[],byte) -> removeElement
    char[] remove(char[],int) -> remove
    char[] removeElement(char[],char) -> removeElement
    double[] remove(double[],int) -> remove
    double[] removeElement(double[],double) -> removeElement
    float[] remove(float[],int) -> remove
    float[] removeElement(float[],float) -> removeElement
    int[] remove(int[],int) -> remove
    int[] removeElement(int[],int) -> removeElement
    long[] remove(long[],int) -> remove
    long[] removeElement(long[],long) -> removeElement
    short[] remove(short[],int) -> remove
    short[] removeElement(short[],short) -> removeElement
    java.lang.Object remove(java.lang.Object,int) -> remove
    java.lang.Object[] removeAll(java.lang.Object[],int[]) -> removeAll
    java.lang.Object[] removeElements(java.lang.Object[],java.lang.Object[]) -> removeElements
    byte[] removeAll(byte[],int[]) -> removeAll
    byte[] removeElements(byte[],byte[]) -> removeElements
    short[] removeAll(short[],int[]) -> removeAll
    short[] removeElements(short[],short[]) -> removeElements
    int[] removeAll(int[],int[]) -> removeAll
    int[] removeElements(int[],int[]) -> removeElements
    char[] removeAll(char[],int[]) -> removeAll
    char[] removeElements(char[],char[]) -> removeElements
    long[] removeAll(long[],int[]) -> removeAll
    long[] removeElements(long[],long[]) -> removeElements
    float[] removeAll(float[],int[]) -> removeAll
    float[] removeElements(float[],float[]) -> removeElements
    double[] removeAll(double[],int[]) -> removeAll
    double[] removeElements(double[],double[]) -> removeElements
    boolean[] removeAll(boolean[],int[]) -> removeAll
    boolean[] removeElements(boolean[],boolean[]) -> removeElements
    java.lang.Object removeAll(java.lang.Object,int[]) -> removeAll
    java.lang.Object removeAll(java.lang.Object,java.util.BitSet) -> removeAll
org.apache.commons.lang3.BitField -> org.apache.commons.lang3.BitField:
    int _mask -> _mask
    int _shift_count -> _shift_count
    int getValue(int) -> getValue
    short getShortValue(short) -> getShortValue
    int getRawValue(int) -> getRawValue
    short getShortRawValue(short) -> getShortRawValue
    boolean isSet(int) -> isSet
    boolean isAllSet(int) -> isAllSet
    int setValue(int,int) -> setValue
    short setShortValue(short,short) -> setShortValue
    int clear(int) -> clear
    short clearShort(short) -> clearShort
    byte clearByte(byte) -> clearByte
    int set(int) -> set
    short setShort(short) -> setShort
    byte setByte(byte) -> setByte
    int setBoolean(int,boolean) -> setBoolean
    short setShortBoolean(short,boolean) -> setShortBoolean
    byte setByteBoolean(byte,boolean) -> setByteBoolean
org.apache.commons.lang3.BooleanUtils -> org.apache.commons.lang3.BooleanUtils:
    java.lang.Boolean negate(java.lang.Boolean) -> negate
    boolean isTrue(java.lang.Boolean) -> isTrue
    boolean isNotTrue(java.lang.Boolean) -> isNotTrue
    boolean isFalse(java.lang.Boolean) -> isFalse
    boolean isNotFalse(java.lang.Boolean) -> isNotFalse
    boolean toBoolean(java.lang.Boolean) -> toBoolean
    boolean toBooleanDefaultIfNull(java.lang.Boolean,boolean) -> toBooleanDefaultIfNull
    boolean toBoolean(int) -> toBoolean
    java.lang.Boolean toBooleanObject(int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer) -> toBooleanObject
    boolean toBoolean(int,int,int) -> toBoolean
    boolean toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBoolean
    java.lang.Boolean toBooleanObject(int,int,int,int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBooleanObject
    int toInteger(boolean) -> toInteger
    java.lang.Integer toIntegerObject(boolean) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean) -> toIntegerObject
    int toInteger(boolean,int,int) -> toInteger
    int toInteger(java.lang.Boolean,int,int,int) -> toInteger
    java.lang.Integer toIntegerObject(boolean,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Boolean toBooleanObject(java.lang.String) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> toBooleanObject
    boolean toBoolean(java.lang.String) -> toBoolean
    boolean toBoolean(java.lang.String,java.lang.String,java.lang.String) -> toBoolean
    java.lang.String toStringTrueFalse(java.lang.Boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(java.lang.Boolean) -> toStringOnOff
    java.lang.String toStringYesNo(java.lang.Boolean) -> toStringYesNo
    java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String) -> toString
    java.lang.String toStringTrueFalse(boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(boolean) -> toStringOnOff
    java.lang.String toStringYesNo(boolean) -> toStringYesNo
    java.lang.String toString(boolean,java.lang.String,java.lang.String) -> toString
    boolean and(boolean[]) -> and
    java.lang.Boolean and(java.lang.Boolean[]) -> and
    boolean or(boolean[]) -> or
    java.lang.Boolean or(java.lang.Boolean[]) -> or
    boolean xor(boolean[]) -> xor
    java.lang.Boolean xor(java.lang.Boolean[]) -> xor
org.apache.commons.lang3.CharEncoding -> org.apache.commons.lang3.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
    boolean isSupported(java.lang.String) -> isSupported
org.apache.commons.lang3.CharRange -> org.apache.commons.lang3.b:
    char start -> a
    char end -> b
    boolean negated -> c
    java.lang.String iToString -> d
    org.apache.commons.lang3.CharRange is(char) -> a
    org.apache.commons.lang3.CharRange isNot(char) -> b
    org.apache.commons.lang3.CharRange isIn(char,char) -> a
    org.apache.commons.lang3.CharRange isNotIn(char,char) -> b
    boolean isNegated() -> a
    boolean contains(char) -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean access$100(org.apache.commons.lang3.CharRange) -> a
    char access$200(org.apache.commons.lang3.CharRange) -> b
    char access$300(org.apache.commons.lang3.CharRange) -> c
org.apache.commons.lang3.CharRange$1 -> org.apache.commons.lang3.c:
org.apache.commons.lang3.CharRange$CharacterIterator -> org.apache.commons.lang3.d:
    char current -> a
    org.apache.commons.lang3.CharRange range -> b
    boolean hasNext -> c
    void prepareNext() -> b
    boolean hasNext() -> hasNext
    java.lang.Character next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.CharSequenceUtils -> org.apache.commons.lang3.CharSequenceUtils:
    java.lang.CharSequence subSequence(java.lang.CharSequence,int) -> subSequence
    int indexOf(java.lang.CharSequence,int,int) -> indexOf
    int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOf
    int lastIndexOf(java.lang.CharSequence,int,int) -> lastIndexOf
    int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOf
    char[] toCharArray(java.lang.CharSequence) -> toCharArray
    boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int) -> regionMatches
org.apache.commons.lang3.CharSet -> org.apache.commons.lang3.CharSet:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.CharSet EMPTY -> EMPTY
    org.apache.commons.lang3.CharSet ASCII_ALPHA -> ASCII_ALPHA
    org.apache.commons.lang3.CharSet ASCII_ALPHA_LOWER -> ASCII_ALPHA_LOWER
    org.apache.commons.lang3.CharSet ASCII_ALPHA_UPPER -> ASCII_ALPHA_UPPER
    org.apache.commons.lang3.CharSet ASCII_NUMERIC -> ASCII_NUMERIC
    java.util.Map COMMON -> COMMON
    java.util.Set set -> set
    org.apache.commons.lang3.CharSet getInstance(java.lang.String[]) -> getInstance
    void add(java.lang.String) -> add
    org.apache.commons.lang3.CharRange[] getCharRanges() -> getCharRanges
    boolean contains(char) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang3.CharSetUtils -> org.apache.commons.lang3.CharSetUtils:
    java.lang.String squeeze(java.lang.String,java.lang.String[]) -> squeeze
    boolean containsAny(java.lang.String,java.lang.String[]) -> containsAny
    int count(java.lang.String,java.lang.String[]) -> count
    java.lang.String keep(java.lang.String,java.lang.String[]) -> keep
    java.lang.String delete(java.lang.String,java.lang.String[]) -> delete
    java.lang.String modify(java.lang.String,java.lang.String[],boolean) -> modify
    boolean deepEmpty(java.lang.String[]) -> deepEmpty
org.apache.commons.lang3.CharUtils -> org.apache.commons.lang3.CharUtils:
    java.lang.String[] CHAR_STRING_ARRAY -> CHAR_STRING_ARRAY
    char LF -> LF
    char CR -> CR
    java.lang.Character toCharacterObject(char) -> toCharacterObject
    java.lang.Character toCharacterObject(java.lang.String) -> toCharacterObject
    char toChar(java.lang.Character) -> toChar
    char toChar(java.lang.Character,char) -> toChar
    char toChar(java.lang.String) -> toChar
    char toChar(java.lang.String,char) -> toChar
    int toIntValue(char) -> toIntValue
    int toIntValue(char,int) -> toIntValue
    int toIntValue(java.lang.Character) -> toIntValue
    int toIntValue(java.lang.Character,int) -> toIntValue
    java.lang.String toString(char) -> toString
    java.lang.String toString(java.lang.Character) -> toString
    java.lang.String unicodeEscaped(char) -> unicodeEscaped
    java.lang.String unicodeEscaped(java.lang.Character) -> unicodeEscaped
    boolean isAscii(char) -> isAscii
    boolean isAsciiPrintable(char) -> isAsciiPrintable
    boolean isAsciiControl(char) -> isAsciiControl
    boolean isAsciiAlpha(char) -> isAsciiAlpha
    boolean isAsciiAlphaUpper(char) -> isAsciiAlphaUpper
    boolean isAsciiAlphaLower(char) -> isAsciiAlphaLower
    boolean isAsciiNumeric(char) -> isAsciiNumeric
    boolean isAsciiAlphanumeric(char) -> isAsciiAlphanumeric
org.apache.commons.lang3.ClassUtils -> org.apache.commons.lang3.ClassUtils:
    char PACKAGE_SEPARATOR_CHAR -> PACKAGE_SEPARATOR_CHAR
    java.lang.String PACKAGE_SEPARATOR -> PACKAGE_SEPARATOR
    char INNER_CLASS_SEPARATOR_CHAR -> INNER_CLASS_SEPARATOR_CHAR
    java.lang.String INNER_CLASS_SEPARATOR -> INNER_CLASS_SEPARATOR
    java.util.Map primitiveWrapperMap -> primitiveWrapperMap
    java.util.Map wrapperPrimitiveMap -> wrapperPrimitiveMap
    java.util.Map abbreviationMap -> abbreviationMap
    java.util.Map reverseAbbreviationMap -> reverseAbbreviationMap
    java.lang.String getShortClassName(java.lang.Object,java.lang.String) -> getShortClassName
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    java.lang.String getShortClassName(java.lang.String) -> getShortClassName
    java.lang.String getSimpleName(java.lang.Class) -> getSimpleName
    java.lang.String getSimpleName(java.lang.Object,java.lang.String) -> getSimpleName
    java.lang.String getPackageName(java.lang.Object,java.lang.String) -> getPackageName
    java.lang.String getPackageName(java.lang.Class) -> getPackageName
    java.lang.String getPackageName(java.lang.String) -> getPackageName
    java.util.List getAllSuperclasses(java.lang.Class) -> getAllSuperclasses
    java.util.List getAllInterfaces(java.lang.Class) -> getAllInterfaces
    void getAllInterfaces(java.lang.Class,java.util.HashSet) -> getAllInterfaces
    java.util.List convertClassNamesToClasses(java.util.List) -> convertClassNamesToClasses
    java.util.List convertClassesToClassNames(java.util.List) -> convertClassesToClassNames
    boolean isAssignable(java.lang.Class[],java.lang.Class[]) -> isAssignable
    boolean isAssignable(java.lang.Class[],java.lang.Class[],boolean) -> isAssignable
    boolean isPrimitiveOrWrapper(java.lang.Class) -> isPrimitiveOrWrapper
    boolean isPrimitiveWrapper(java.lang.Class) -> isPrimitiveWrapper
    boolean isAssignable(java.lang.Class,java.lang.Class) -> isAssignable
    boolean isAssignable(java.lang.Class,java.lang.Class,boolean) -> isAssignable
    java.lang.Class primitiveToWrapper(java.lang.Class) -> primitiveToWrapper
    java.lang.Class[] primitivesToWrappers(java.lang.Class[]) -> primitivesToWrappers
    java.lang.Class wrapperToPrimitive(java.lang.Class) -> wrapperToPrimitive
    java.lang.Class[] wrappersToPrimitives(java.lang.Class[]) -> wrappersToPrimitives
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean) -> getClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String,boolean) -> getClass
    java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    java.lang.String toCanonicalName(java.lang.String) -> toCanonicalName
    java.lang.Class[] toClass(java.lang.Object[]) -> toClass
    java.lang.String getShortCanonicalName(java.lang.Object,java.lang.String) -> getShortCanonicalName
    java.lang.String getShortCanonicalName(java.lang.Class) -> getShortCanonicalName
    java.lang.String getShortCanonicalName(java.lang.String) -> getShortCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.Object,java.lang.String) -> getPackageCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.Class) -> getPackageCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.String) -> getPackageCanonicalName
    java.lang.String getCanonicalName(java.lang.String) -> getCanonicalName
    java.lang.Iterable hierarchy(java.lang.Class) -> hierarchy
    java.lang.Iterable hierarchy(java.lang.Class,org.apache.commons.lang3.ClassUtils$Interfaces) -> hierarchy
org.apache.commons.lang3.ClassUtils$1 -> org.apache.commons.lang3.e:
    java.lang.Class val$type -> a
    java.util.Iterator iterator() -> iterator
org.apache.commons.lang3.ClassUtils$1$1 -> org.apache.commons.lang3.f:
    org.apache.commons.lang3.mutable.MutableObject val$next -> a
    org.apache.commons.lang3.ClassUtils$1 this$0 -> b
    boolean hasNext() -> hasNext
    java.lang.Class next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.ClassUtils$2 -> org.apache.commons.lang3.g:
    java.lang.Iterable val$classes -> a
    java.util.Iterator iterator() -> iterator
org.apache.commons.lang3.ClassUtils$2$1 -> org.apache.commons.lang3.h:
    java.util.Iterator interfaces -> a
    java.util.Iterator val$wrapped -> b
    java.util.Set val$seenInterfaces -> c
    org.apache.commons.lang3.ClassUtils$2 this$0 -> d
    boolean hasNext() -> hasNext
    java.lang.Class next() -> a
    void walkInterfaces(java.util.Set,java.lang.Class) -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.ClassUtils$Interfaces -> org.apache.commons.lang3.ClassUtils$Interfaces:
    org.apache.commons.lang3.ClassUtils$Interfaces INCLUDE -> INCLUDE
    org.apache.commons.lang3.ClassUtils$Interfaces EXCLUDE -> EXCLUDE
    org.apache.commons.lang3.ClassUtils$Interfaces[] $VALUES -> $VALUES
    org.apache.commons.lang3.ClassUtils$Interfaces[] values() -> values
    org.apache.commons.lang3.ClassUtils$Interfaces valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.Conversion -> org.apache.commons.lang3.Conversion:
    boolean $assertionsDisabled -> $assertionsDisabled
    int hexDigitToInt(char) -> hexDigitToInt
    int hexDigitMsb0ToInt(char) -> hexDigitMsb0ToInt
    boolean[] hexDigitToBinary(char) -> hexDigitToBinary
    boolean[] hexDigitMsb0ToBinary(char) -> hexDigitMsb0ToBinary
    char binaryToHexDigit(boolean[]) -> binaryToHexDigit
    char binaryToHexDigit(boolean[],int) -> binaryToHexDigit
    char binaryToHexDigitMsb0_4bits(boolean[]) -> binaryToHexDigitMsb0_4bits
    char binaryToHexDigitMsb0_4bits(boolean[],int) -> binaryToHexDigitMsb0_4bits
    char binaryBeMsb0ToHexDigit(boolean[]) -> binaryBeMsb0ToHexDigit
    char binaryBeMsb0ToHexDigit(boolean[],int) -> binaryBeMsb0ToHexDigit
    char intToHexDigit(int) -> intToHexDigit
    char intToHexDigitMsb0(int) -> intToHexDigitMsb0
    long intArrayToLong(int[],int,long,int,int) -> intArrayToLong
    long shortArrayToLong(short[],int,long,int,int) -> shortArrayToLong
    int shortArrayToInt(short[],int,int,int,int) -> shortArrayToInt
    long byteArrayToLong(byte[],int,long,int,int) -> byteArrayToLong
    int byteArrayToInt(byte[],int,int,int,int) -> byteArrayToInt
    short byteArrayToShort(byte[],int,short,int,int) -> byteArrayToShort
    long hexToLong(java.lang.String,int,long,int,int) -> hexToLong
    int hexToInt(java.lang.String,int,int,int,int) -> hexToInt
    short hexToShort(java.lang.String,int,short,int,int) -> hexToShort
    byte hexToByte(java.lang.String,int,byte,int,int) -> hexToByte
    long binaryToLong(boolean[],int,long,int,int) -> binaryToLong
    int binaryToInt(boolean[],int,int,int,int) -> binaryToInt
    short binaryToShort(boolean[],int,short,int,int) -> binaryToShort
    byte binaryToByte(boolean[],int,byte,int,int) -> binaryToByte
    int[] longToIntArray(long,int,int[],int,int) -> longToIntArray
    short[] longToShortArray(long,int,short[],int,int) -> longToShortArray
    short[] intToShortArray(int,int,short[],int,int) -> intToShortArray
    byte[] longToByteArray(long,int,byte[],int,int) -> longToByteArray
    byte[] intToByteArray(int,int,byte[],int,int) -> intToByteArray
    byte[] shortToByteArray(short,int,byte[],int,int) -> shortToByteArray
    java.lang.String longToHex(long,int,java.lang.String,int,int) -> longToHex
    java.lang.String intToHex(int,int,java.lang.String,int,int) -> intToHex
    java.lang.String shortToHex(short,int,java.lang.String,int,int) -> shortToHex
    java.lang.String byteToHex(byte,int,java.lang.String,int,int) -> byteToHex
    boolean[] longToBinary(long,int,boolean[],int,int) -> longToBinary
    boolean[] intToBinary(int,int,boolean[],int,int) -> intToBinary
    boolean[] shortToBinary(short,int,boolean[],int,int) -> shortToBinary
    boolean[] byteToBinary(byte,int,boolean[],int,int) -> byteToBinary
    byte[] uuidToByteArray(java.util.UUID,byte[],int,int) -> uuidToByteArray
    java.util.UUID byteArrayToUuid(byte[],int) -> byteArrayToUuid
org.apache.commons.lang3.EnumUtils -> org.apache.commons.lang3.EnumUtils:
    java.lang.String NULL_ELEMENTS_NOT_PERMITTED -> NULL_ELEMENTS_NOT_PERMITTED
    java.lang.String CANNOT_STORE_S_S_VALUES_IN_S_BITS -> CANNOT_STORE_S_S_VALUES_IN_S_BITS
    java.lang.String S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE -> S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE
    java.lang.String ENUM_CLASS_MUST_BE_DEFINED -> ENUM_CLASS_MUST_BE_DEFINED
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    boolean isValidEnum(java.lang.Class,java.lang.String) -> isValidEnum
    java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    long generateBitVector(java.lang.Class,java.lang.Iterable) -> generateBitVector
    long[] generateBitVectors(java.lang.Class,java.lang.Iterable) -> generateBitVectors
    long generateBitVector(java.lang.Class,java.lang.Enum[]) -> generateBitVector
    long[] generateBitVectors(java.lang.Class,java.lang.Enum[]) -> generateBitVectors
    java.util.EnumSet processBitVector(java.lang.Class,long) -> processBitVector
    java.util.EnumSet processBitVectors(java.lang.Class,long[]) -> processBitVectors
    java.lang.Class checkBitVectorable(java.lang.Class) -> checkBitVectorable
    java.lang.Class asEnum(java.lang.Class) -> asEnum
org.apache.commons.lang3.JavaVersion -> org.apache.commons.lang3.JavaVersion:
    org.apache.commons.lang3.JavaVersion JAVA_0_9 -> JAVA_0_9
    org.apache.commons.lang3.JavaVersion JAVA_1_1 -> JAVA_1_1
    org.apache.commons.lang3.JavaVersion JAVA_1_2 -> JAVA_1_2
    org.apache.commons.lang3.JavaVersion JAVA_1_3 -> JAVA_1_3
    org.apache.commons.lang3.JavaVersion JAVA_1_4 -> JAVA_1_4
    org.apache.commons.lang3.JavaVersion JAVA_1_5 -> JAVA_1_5
    org.apache.commons.lang3.JavaVersion JAVA_1_6 -> JAVA_1_6
    org.apache.commons.lang3.JavaVersion JAVA_1_7 -> JAVA_1_7
    org.apache.commons.lang3.JavaVersion JAVA_1_8 -> JAVA_1_8
    float value -> value
    java.lang.String name -> name
    org.apache.commons.lang3.JavaVersion[] $VALUES -> $VALUES
    org.apache.commons.lang3.JavaVersion[] values() -> values
    org.apache.commons.lang3.JavaVersion valueOf(java.lang.String) -> valueOf
    boolean atLeast(org.apache.commons.lang3.JavaVersion) -> atLeast
    org.apache.commons.lang3.JavaVersion getJavaVersion(java.lang.String) -> getJavaVersion
    org.apache.commons.lang3.JavaVersion get(java.lang.String) -> get
    java.lang.String toString() -> toString
org.apache.commons.lang3.LocaleUtils -> org.apache.commons.lang3.LocaleUtils:
    java.util.concurrent.ConcurrentMap cLanguagesByCountry -> cLanguagesByCountry
    java.util.concurrent.ConcurrentMap cCountriesByLanguage -> cCountriesByLanguage
    java.util.Locale toLocale(java.lang.String) -> toLocale
    java.util.List localeLookupList(java.util.Locale) -> localeLookupList
    java.util.List localeLookupList(java.util.Locale,java.util.Locale) -> localeLookupList
    java.util.List availableLocaleList() -> availableLocaleList
    java.util.Set availableLocaleSet() -> availableLocaleSet
    boolean isAvailableLocale(java.util.Locale) -> isAvailableLocale
    java.util.List languagesByCountry(java.lang.String) -> languagesByCountry
    java.util.List countriesByLanguage(java.lang.String) -> countriesByLanguage
org.apache.commons.lang3.LocaleUtils$SyncAvoid -> org.apache.commons.lang3.i:
    java.util.List AVAILABLE_LOCALE_LIST -> a
    java.util.Set AVAILABLE_LOCALE_SET -> b
    java.util.List access$000() -> a
    java.util.Set access$100() -> b
org.apache.commons.lang3.NotImplementedException -> org.apache.commons.lang3.NotImplementedException:
    long serialVersionUID -> serialVersionUID
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
org.apache.commons.lang3.ObjectUtils -> org.apache.commons.lang3.ObjectUtils:
    org.apache.commons.lang3.ObjectUtils$Null NULL -> NULL
    java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    java.lang.Object firstNonNull(java.lang.Object[]) -> firstNonNull
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean notEqual(java.lang.Object,java.lang.Object) -> notEqual
    int hashCode(java.lang.Object) -> hashCode
    int hashCodeMulti(java.lang.Object[]) -> hashCodeMulti
    java.lang.String identityToString(java.lang.Object) -> identityToString
    void identityToString(java.lang.Appendable,java.lang.Object) -> identityToString
    void identityToString(org.apache.commons.lang3.text.StrBuilder,java.lang.Object) -> identityToString
    void identityToString(java.lang.StringBuffer,java.lang.Object) -> identityToString
    void identityToString(java.lang.StringBuilder,java.lang.Object) -> identityToString
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    java.lang.Comparable min(java.lang.Comparable[]) -> min
    java.lang.Comparable max(java.lang.Comparable[]) -> max
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Comparable,java.lang.Comparable,boolean) -> compare
    java.lang.Comparable median(java.lang.Comparable[]) -> median
    java.lang.Object median(java.util.Comparator,java.lang.Object[]) -> median
    java.lang.Object mode(java.lang.Object[]) -> mode
    java.lang.Object clone(java.lang.Object) -> clone
    java.lang.Object cloneIfPossible(java.lang.Object) -> cloneIfPossible
    boolean CONST(boolean) -> CONST
    byte CONST(byte) -> CONST
    byte CONST_BYTE(int) -> CONST_BYTE
    char CONST(char) -> CONST
    short CONST(short) -> CONST
    short CONST_SHORT(int) -> CONST_SHORT
    int CONST(int) -> CONST
    long CONST(long) -> CONST
    float CONST(float) -> CONST
    double CONST(double) -> CONST
    java.lang.Object CONST(java.lang.Object) -> CONST
org.apache.commons.lang3.ObjectUtils$Null -> org.apache.commons.lang3.ObjectUtils$Null:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.RandomStringUtils -> org.apache.commons.lang3.RandomStringUtils:
    java.util.Random RANDOM -> RANDOM
    java.lang.String random(int) -> random
    java.lang.String randomAscii(int) -> randomAscii
    java.lang.String randomAlphabetic(int) -> randomAlphabetic
    java.lang.String randomAlphanumeric(int) -> randomAlphanumeric
    java.lang.String randomNumeric(int) -> randomNumeric
    java.lang.String random(int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[]) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random) -> random
    java.lang.String random(int,java.lang.String) -> random
    java.lang.String random(int,char[]) -> random
org.apache.commons.lang3.Range -> org.apache.commons.lang3.Range:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator comparator -> comparator
    java.lang.Object minimum -> minimum
    java.lang.Object maximum -> maximum
    int hashCode -> hashCode
    java.lang.String toString -> toString
    org.apache.commons.lang3.Range is(java.lang.Comparable) -> is
    org.apache.commons.lang3.Range is(java.lang.Object,java.util.Comparator) -> is
    org.apache.commons.lang3.Range between(java.lang.Comparable,java.lang.Comparable) -> between
    org.apache.commons.lang3.Range between(java.lang.Object,java.lang.Object,java.util.Comparator) -> between
    java.lang.Object getMinimum() -> getMinimum
    java.lang.Object getMaximum() -> getMaximum
    java.util.Comparator getComparator() -> getComparator
    boolean isNaturalOrdering() -> isNaturalOrdering
    boolean contains(java.lang.Object) -> contains
    boolean isAfter(java.lang.Object) -> isAfter
    boolean isStartedBy(java.lang.Object) -> isStartedBy
    boolean isEndedBy(java.lang.Object) -> isEndedBy
    boolean isBefore(java.lang.Object) -> isBefore
    int elementCompareTo(java.lang.Object) -> elementCompareTo
    boolean containsRange(org.apache.commons.lang3.Range) -> containsRange
    boolean isAfterRange(org.apache.commons.lang3.Range) -> isAfterRange
    boolean isOverlappedBy(org.apache.commons.lang3.Range) -> isOverlappedBy
    boolean isBeforeRange(org.apache.commons.lang3.Range) -> isBeforeRange
    org.apache.commons.lang3.Range intersectionWith(org.apache.commons.lang3.Range) -> intersectionWith
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
org.apache.commons.lang3.Range$ComparableComparator -> org.apache.commons.lang3.j:
    org.apache.commons.lang3.Range$ComparableComparator INSTANCE -> a
    org.apache.commons.lang3.Range$ComparableComparator[] $VALUES -> b
    org.apache.commons.lang3.Range$ComparableComparator[] values() -> values
    org.apache.commons.lang3.Range$ComparableComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.lang3.SerializationException -> org.apache.commons.lang3.SerializationException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.SerializationUtils -> org.apache.commons.lang3.SerializationUtils:
    java.io.Serializable clone(java.io.Serializable) -> clone
    void serialize(java.io.Serializable,java.io.OutputStream) -> serialize
    byte[] serialize(java.io.Serializable) -> serialize
    java.lang.Object deserialize(java.io.InputStream) -> deserialize
    java.lang.Object deserialize(byte[]) -> deserialize
org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream -> org.apache.commons.lang3.k:
    java.util.Map primitiveTypes -> a
    java.lang.ClassLoader classLoader -> b
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
org.apache.commons.lang3.StringEscapeUtils -> org.apache.commons.lang3.StringEscapeUtils:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JAVA -> ESCAPE_JAVA
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_ECMASCRIPT -> ESCAPE_ECMASCRIPT
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JSON -> ESCAPE_JSON
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML -> ESCAPE_XML
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML3 -> ESCAPE_HTML3
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML4 -> ESCAPE_HTML4
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_CSV -> ESCAPE_CSV
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JAVA -> UNESCAPE_JAVA
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_ECMASCRIPT -> UNESCAPE_ECMASCRIPT
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JSON -> UNESCAPE_JSON
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML3 -> UNESCAPE_HTML3
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML4 -> UNESCAPE_HTML4
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_XML -> UNESCAPE_XML
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_CSV -> UNESCAPE_CSV
    java.lang.String escapeJava(java.lang.String) -> escapeJava
    java.lang.String escapeEcmaScript(java.lang.String) -> escapeEcmaScript
    java.lang.String escapeJson(java.lang.String) -> escapeJson
    java.lang.String unescapeJava(java.lang.String) -> unescapeJava
    java.lang.String unescapeEcmaScript(java.lang.String) -> unescapeEcmaScript
    java.lang.String unescapeJson(java.lang.String) -> unescapeJson
    java.lang.String escapeHtml4(java.lang.String) -> escapeHtml4
    java.lang.String escapeHtml3(java.lang.String) -> escapeHtml3
    java.lang.String unescapeHtml4(java.lang.String) -> unescapeHtml4
    java.lang.String unescapeHtml3(java.lang.String) -> unescapeHtml3
    java.lang.String escapeXml(java.lang.String) -> escapeXml
    java.lang.String unescapeXml(java.lang.String) -> unescapeXml
    java.lang.String escapeCsv(java.lang.String) -> escapeCsv
    java.lang.String unescapeCsv(java.lang.String) -> unescapeCsv
org.apache.commons.lang3.StringEscapeUtils$CsvEscaper -> org.apache.commons.lang3.l:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper -> org.apache.commons.lang3.m:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.StringUtils -> org.apache.commons.lang3.StringUtils:
    java.lang.String SPACE -> SPACE
    java.lang.String EMPTY -> EMPTY
    java.lang.String LF -> LF
    java.lang.String CR -> CR
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    int PAD_LIMIT -> PAD_LIMIT
    java.util.regex.Pattern WHITESPACE_PATTERN -> WHITESPACE_PATTERN
    boolean isEmpty(java.lang.CharSequence) -> isEmpty
    boolean isNotEmpty(java.lang.CharSequence) -> isNotEmpty
    boolean isAnyEmpty(java.lang.CharSequence[]) -> isAnyEmpty
    boolean isNoneEmpty(java.lang.CharSequence[]) -> isNoneEmpty
    boolean isBlank(java.lang.CharSequence) -> isBlank
    boolean isNotBlank(java.lang.CharSequence) -> isNotBlank
    boolean isAnyBlank(java.lang.CharSequence[]) -> isAnyBlank
    boolean isNoneBlank(java.lang.CharSequence[]) -> isNoneBlank
    java.lang.String trim(java.lang.String) -> trim
    java.lang.String trimToNull(java.lang.String) -> trimToNull
    java.lang.String trimToEmpty(java.lang.String) -> trimToEmpty
    java.lang.String strip(java.lang.String) -> strip
    java.lang.String stripToNull(java.lang.String) -> stripToNull
    java.lang.String stripToEmpty(java.lang.String) -> stripToEmpty
    java.lang.String strip(java.lang.String,java.lang.String) -> strip
    java.lang.String stripStart(java.lang.String,java.lang.String) -> stripStart
    java.lang.String stripEnd(java.lang.String,java.lang.String) -> stripEnd
    java.lang.String[] stripAll(java.lang.String[]) -> stripAll
    java.lang.String[] stripAll(java.lang.String[],java.lang.String) -> stripAll
    java.lang.String stripAccents(java.lang.String) -> stripAccents
    boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> equalsIgnoreCase
    int indexOf(java.lang.CharSequence,int) -> indexOf
    int indexOf(java.lang.CharSequence,int,int) -> indexOf
    int indexOf(java.lang.CharSequence,java.lang.CharSequence) -> indexOf
    int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOf
    int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> ordinalIndexOf
    int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean) -> ordinalIndexOf
    int indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> indexOfIgnoreCase
    int indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOfIgnoreCase
    int lastIndexOf(java.lang.CharSequence,int) -> lastIndexOf
    int lastIndexOf(java.lang.CharSequence,int,int) -> lastIndexOf
    int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence) -> lastIndexOf
    int lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastOrdinalIndexOf
    int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOf
    int lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> lastIndexOfIgnoreCase
    int lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOfIgnoreCase
    boolean contains(java.lang.CharSequence,int) -> contains
    boolean contains(java.lang.CharSequence,java.lang.CharSequence) -> contains
    boolean containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> containsIgnoreCase
    boolean containsWhitespace(java.lang.CharSequence) -> containsWhitespace
    int indexOfAny(java.lang.CharSequence,char[]) -> indexOfAny
    int indexOfAny(java.lang.CharSequence,java.lang.String) -> indexOfAny
    boolean containsAny(java.lang.CharSequence,char[]) -> containsAny
    boolean containsAny(java.lang.CharSequence,java.lang.CharSequence) -> containsAny
    int indexOfAnyBut(java.lang.CharSequence,char[]) -> indexOfAnyBut
    int indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence) -> indexOfAnyBut
    boolean containsOnly(java.lang.CharSequence,char[]) -> containsOnly
    boolean containsOnly(java.lang.CharSequence,java.lang.String) -> containsOnly
    boolean containsNone(java.lang.CharSequence,char[]) -> containsNone
    boolean containsNone(java.lang.CharSequence,java.lang.String) -> containsNone
    int indexOfAny(java.lang.CharSequence,java.lang.CharSequence[]) -> indexOfAny
    int lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[]) -> lastIndexOfAny
    java.lang.String substring(java.lang.String,int) -> substring
    java.lang.String substring(java.lang.String,int,int) -> substring
    java.lang.String left(java.lang.String,int) -> left
    java.lang.String right(java.lang.String,int) -> right
    java.lang.String mid(java.lang.String,int,int) -> mid
    java.lang.String substringBefore(java.lang.String,java.lang.String) -> substringBefore
    java.lang.String substringAfter(java.lang.String,java.lang.String) -> substringAfter
    java.lang.String substringBeforeLast(java.lang.String,java.lang.String) -> substringBeforeLast
    java.lang.String substringAfterLast(java.lang.String,java.lang.String) -> substringAfterLast
    java.lang.String substringBetween(java.lang.String,java.lang.String) -> substringBetween
    java.lang.String substringBetween(java.lang.String,java.lang.String,java.lang.String) -> substringBetween
    java.lang.String[] substringsBetween(java.lang.String,java.lang.String,java.lang.String) -> substringsBetween
    java.lang.String[] split(java.lang.String) -> split
    java.lang.String[] split(java.lang.String,char) -> split
    java.lang.String[] split(java.lang.String,java.lang.String) -> split
    java.lang.String[] split(java.lang.String,java.lang.String,int) -> split
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String) -> splitByWholeSeparator
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String,int) -> splitByWholeSeparator
    java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String) -> splitByWholeSeparatorPreserveAllTokens
    java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitByWholeSeparatorPreserveAllTokens
    java.lang.String[] splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean) -> splitByWholeSeparatorWorker
    java.lang.String[] splitPreserveAllTokens(java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,char) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,char,boolean) -> splitWorker
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean) -> splitWorker
    java.lang.String[] splitByCharacterType(java.lang.String) -> splitByCharacterType
    java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String) -> splitByCharacterTypeCamelCase
    java.lang.String[] splitByCharacterType(java.lang.String,boolean) -> splitByCharacterType
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object[],char) -> join
    java.lang.String join(long[],char) -> join
    java.lang.String join(int[],char) -> join
    java.lang.String join(short[],char) -> join
    java.lang.String join(byte[],char) -> join
    java.lang.String join(char[],char) -> join
    java.lang.String join(float[],char) -> join
    java.lang.String join(double[],char) -> join
    java.lang.String join(java.lang.Object[],char,int,int) -> join
    java.lang.String join(long[],char,int,int) -> join
    java.lang.String join(int[],char,int,int) -> join
    java.lang.String join(byte[],char,int,int) -> join
    java.lang.String join(short[],char,int,int) -> join
    java.lang.String join(char[],char,int,int) -> join
    java.lang.String join(double[],char,int,int) -> join
    java.lang.String join(float[],char,int,int) -> join
    java.lang.String join(java.lang.Object[],java.lang.String) -> join
    java.lang.String join(java.lang.Object[],java.lang.String,int,int) -> join
    java.lang.String join(java.util.Iterator,char) -> join
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    java.lang.String join(java.lang.Iterable,char) -> join
    java.lang.String join(java.lang.Iterable,java.lang.String) -> join
    java.lang.String deleteWhitespace(java.lang.String) -> deleteWhitespace
    java.lang.String removeStart(java.lang.String,java.lang.String) -> removeStart
    java.lang.String removeStartIgnoreCase(java.lang.String,java.lang.String) -> removeStartIgnoreCase
    java.lang.String removeEnd(java.lang.String,java.lang.String) -> removeEnd
    java.lang.String removeEndIgnoreCase(java.lang.String,java.lang.String) -> removeEndIgnoreCase
    java.lang.String remove(java.lang.String,java.lang.String) -> remove
    java.lang.String remove(java.lang.String,char) -> remove
    java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String) -> replaceOnce
    java.lang.String replacePattern(java.lang.String,java.lang.String,java.lang.String) -> replacePattern
    java.lang.String removePattern(java.lang.String,java.lang.String) -> removePattern
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> replace
    java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEach
    java.lang.String replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEachRepeatedly
    java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int) -> replaceEach
    java.lang.String replaceChars(java.lang.String,char,char) -> replaceChars
    java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String) -> replaceChars
    java.lang.String overlay(java.lang.String,java.lang.String,int,int) -> overlay
    java.lang.String chomp(java.lang.String) -> chomp
    java.lang.String chomp(java.lang.String,java.lang.String) -> chomp
    java.lang.String chop(java.lang.String) -> chop
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String repeat(java.lang.String,java.lang.String,int) -> repeat
    java.lang.String repeat(char,int) -> repeat
    java.lang.String rightPad(java.lang.String,int) -> rightPad
    java.lang.String rightPad(java.lang.String,int,char) -> rightPad
    java.lang.String rightPad(java.lang.String,int,java.lang.String) -> rightPad
    java.lang.String leftPad(java.lang.String,int) -> leftPad
    java.lang.String leftPad(java.lang.String,int,char) -> leftPad
    java.lang.String leftPad(java.lang.String,int,java.lang.String) -> leftPad
    int length(java.lang.CharSequence) -> length
    java.lang.String center(java.lang.String,int) -> center
    java.lang.String center(java.lang.String,int,char) -> center
    java.lang.String center(java.lang.String,int,java.lang.String) -> center
    java.lang.String upperCase(java.lang.String) -> upperCase
    java.lang.String upperCase(java.lang.String,java.util.Locale) -> upperCase
    java.lang.String lowerCase(java.lang.String) -> lowerCase
    java.lang.String lowerCase(java.lang.String,java.util.Locale) -> lowerCase
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String swapCase(java.lang.String) -> swapCase
    int countMatches(java.lang.CharSequence,java.lang.CharSequence) -> countMatches
    boolean isAlpha(java.lang.CharSequence) -> isAlpha
    boolean isAlphaSpace(java.lang.CharSequence) -> isAlphaSpace
    boolean isAlphanumeric(java.lang.CharSequence) -> isAlphanumeric
    boolean isAlphanumericSpace(java.lang.CharSequence) -> isAlphanumericSpace
    boolean isAsciiPrintable(java.lang.CharSequence) -> isAsciiPrintable
    boolean isNumeric(java.lang.CharSequence) -> isNumeric
    boolean isNumericSpace(java.lang.CharSequence) -> isNumericSpace
    boolean isWhitespace(java.lang.CharSequence) -> isWhitespace
    boolean isAllLowerCase(java.lang.CharSequence) -> isAllLowerCase
    boolean isAllUpperCase(java.lang.CharSequence) -> isAllUpperCase
    java.lang.String defaultString(java.lang.String) -> defaultString
    java.lang.String defaultString(java.lang.String,java.lang.String) -> defaultString
    java.lang.CharSequence defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence) -> defaultIfBlank
    java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence) -> defaultIfEmpty
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String reverseDelimited(java.lang.String,char) -> reverseDelimited
    java.lang.String abbreviate(java.lang.String,int) -> abbreviate
    java.lang.String abbreviate(java.lang.String,int,int) -> abbreviate
    java.lang.String abbreviateMiddle(java.lang.String,java.lang.String,int) -> abbreviateMiddle
    java.lang.String difference(java.lang.String,java.lang.String) -> difference
    int indexOfDifference(java.lang.CharSequence,java.lang.CharSequence) -> indexOfDifference
    int indexOfDifference(java.lang.CharSequence[]) -> indexOfDifference
    java.lang.String getCommonPrefix(java.lang.String[]) -> getCommonPrefix
    int getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence) -> getLevenshteinDistance
    int getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int) -> getLevenshteinDistance
    boolean startsWith(java.lang.CharSequence,java.lang.CharSequence) -> startsWith
    boolean startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> startsWithIgnoreCase
    boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> startsWith
    boolean startsWithAny(java.lang.CharSequence,java.lang.CharSequence[]) -> startsWithAny
    boolean endsWith(java.lang.CharSequence,java.lang.CharSequence) -> endsWith
    boolean endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> endsWithIgnoreCase
    boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> endsWith
    java.lang.String normalizeSpace(java.lang.String) -> normalizeSpace
    boolean endsWithAny(java.lang.CharSequence,java.lang.CharSequence[]) -> endsWithAny
    java.lang.String appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[]) -> appendIfMissing
    java.lang.String appendIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> appendIfMissing
    java.lang.String appendIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> appendIfMissingIgnoreCase
    java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[]) -> prependIfMissing
    java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> prependIfMissing
    java.lang.String prependIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> prependIfMissingIgnoreCase
    java.lang.String toString(byte[],java.lang.String) -> toString
    java.lang.String toEncodedString(byte[],java.nio.charset.Charset) -> toEncodedString
org.apache.commons.lang3.SystemUtils -> org.apache.commons.lang3.SystemUtils:
    java.lang.String OS_NAME_WINDOWS_PREFIX -> OS_NAME_WINDOWS_PREFIX
    java.lang.String USER_HOME_KEY -> USER_HOME_KEY
    java.lang.String USER_DIR_KEY -> USER_DIR_KEY
    java.lang.String JAVA_IO_TMPDIR_KEY -> JAVA_IO_TMPDIR_KEY
    java.lang.String JAVA_HOME_KEY -> JAVA_HOME_KEY
    java.lang.String AWT_TOOLKIT -> AWT_TOOLKIT
    java.lang.String FILE_ENCODING -> FILE_ENCODING
    java.lang.String FILE_SEPARATOR -> FILE_SEPARATOR
    java.lang.String JAVA_AWT_FONTS -> JAVA_AWT_FONTS
    java.lang.String JAVA_AWT_GRAPHICSENV -> JAVA_AWT_GRAPHICSENV
    java.lang.String JAVA_AWT_HEADLESS -> JAVA_AWT_HEADLESS
    java.lang.String JAVA_AWT_PRINTERJOB -> JAVA_AWT_PRINTERJOB
    java.lang.String JAVA_CLASS_PATH -> JAVA_CLASS_PATH
    java.lang.String JAVA_CLASS_VERSION -> JAVA_CLASS_VERSION
    java.lang.String JAVA_COMPILER -> JAVA_COMPILER
    java.lang.String JAVA_ENDORSED_DIRS -> JAVA_ENDORSED_DIRS
    java.lang.String JAVA_EXT_DIRS -> JAVA_EXT_DIRS
    java.lang.String JAVA_HOME -> JAVA_HOME
    java.lang.String JAVA_IO_TMPDIR -> JAVA_IO_TMPDIR
    java.lang.String JAVA_LIBRARY_PATH -> JAVA_LIBRARY_PATH
    java.lang.String JAVA_RUNTIME_NAME -> JAVA_RUNTIME_NAME
    java.lang.String JAVA_RUNTIME_VERSION -> JAVA_RUNTIME_VERSION
    java.lang.String JAVA_SPECIFICATION_NAME -> JAVA_SPECIFICATION_NAME
    java.lang.String JAVA_SPECIFICATION_VENDOR -> JAVA_SPECIFICATION_VENDOR
    java.lang.String JAVA_SPECIFICATION_VERSION -> JAVA_SPECIFICATION_VERSION
    org.apache.commons.lang3.JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM -> JAVA_SPECIFICATION_VERSION_AS_ENUM
    java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY -> JAVA_UTIL_PREFS_PREFERENCES_FACTORY
    java.lang.String JAVA_VENDOR -> JAVA_VENDOR
    java.lang.String JAVA_VENDOR_URL -> JAVA_VENDOR_URL
    java.lang.String JAVA_VERSION -> JAVA_VERSION
    java.lang.String JAVA_VM_INFO -> JAVA_VM_INFO
    java.lang.String JAVA_VM_NAME -> JAVA_VM_NAME
    java.lang.String JAVA_VM_SPECIFICATION_NAME -> JAVA_VM_SPECIFICATION_NAME
    java.lang.String JAVA_VM_SPECIFICATION_VENDOR -> JAVA_VM_SPECIFICATION_VENDOR
    java.lang.String JAVA_VM_SPECIFICATION_VERSION -> JAVA_VM_SPECIFICATION_VERSION
    java.lang.String JAVA_VM_VENDOR -> JAVA_VM_VENDOR
    java.lang.String JAVA_VM_VERSION -> JAVA_VM_VERSION
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    java.lang.String OS_ARCH -> OS_ARCH
    java.lang.String OS_NAME -> OS_NAME
    java.lang.String OS_VERSION -> OS_VERSION
    java.lang.String PATH_SEPARATOR -> PATH_SEPARATOR
    java.lang.String USER_COUNTRY -> USER_COUNTRY
    java.lang.String USER_DIR -> USER_DIR
    java.lang.String USER_HOME -> USER_HOME
    java.lang.String USER_LANGUAGE -> USER_LANGUAGE
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String USER_TIMEZONE -> USER_TIMEZONE
    boolean IS_JAVA_1_1 -> IS_JAVA_1_1
    boolean IS_JAVA_1_2 -> IS_JAVA_1_2
    boolean IS_JAVA_1_3 -> IS_JAVA_1_3
    boolean IS_JAVA_1_4 -> IS_JAVA_1_4
    boolean IS_JAVA_1_5 -> IS_JAVA_1_5
    boolean IS_JAVA_1_6 -> IS_JAVA_1_6
    boolean IS_JAVA_1_7 -> IS_JAVA_1_7
    boolean IS_OS_AIX -> IS_OS_AIX
    boolean IS_OS_HP_UX -> IS_OS_HP_UX
    boolean IS_OS_IRIX -> IS_OS_IRIX
    boolean IS_OS_LINUX -> IS_OS_LINUX
    boolean IS_OS_MAC -> IS_OS_MAC
    boolean IS_OS_MAC_OSX -> IS_OS_MAC_OSX
    boolean IS_OS_FREE_BSD -> IS_OS_FREE_BSD
    boolean IS_OS_OPEN_BSD -> IS_OS_OPEN_BSD
    boolean IS_OS_NET_BSD -> IS_OS_NET_BSD
    boolean IS_OS_OS2 -> IS_OS_OS2
    boolean IS_OS_SOLARIS -> IS_OS_SOLARIS
    boolean IS_OS_SUN_OS -> IS_OS_SUN_OS
    boolean IS_OS_UNIX -> IS_OS_UNIX
    boolean IS_OS_WINDOWS -> IS_OS_WINDOWS
    boolean IS_OS_WINDOWS_2000 -> IS_OS_WINDOWS_2000
    boolean IS_OS_WINDOWS_2003 -> IS_OS_WINDOWS_2003
    boolean IS_OS_WINDOWS_2008 -> IS_OS_WINDOWS_2008
    boolean IS_OS_WINDOWS_95 -> IS_OS_WINDOWS_95
    boolean IS_OS_WINDOWS_98 -> IS_OS_WINDOWS_98
    boolean IS_OS_WINDOWS_ME -> IS_OS_WINDOWS_ME
    boolean IS_OS_WINDOWS_NT -> IS_OS_WINDOWS_NT
    boolean IS_OS_WINDOWS_XP -> IS_OS_WINDOWS_XP
    boolean IS_OS_WINDOWS_VISTA -> IS_OS_WINDOWS_VISTA
    boolean IS_OS_WINDOWS_7 -> IS_OS_WINDOWS_7
    boolean IS_OS_WINDOWS_8 -> IS_OS_WINDOWS_8
    java.io.File getJavaHome() -> getJavaHome
    java.io.File getJavaIoTmpDir() -> getJavaIoTmpDir
    boolean getJavaVersionMatches(java.lang.String) -> getJavaVersionMatches
    boolean getOSMatches(java.lang.String,java.lang.String) -> getOSMatches
    boolean getOSMatchesName(java.lang.String) -> getOSMatchesName
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    java.io.File getUserDir() -> getUserDir
    java.io.File getUserHome() -> getUserHome
    boolean isJavaAwtHeadless() -> isJavaAwtHeadless
    boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion) -> isJavaVersionAtLeast
    boolean isJavaVersionMatch(java.lang.String,java.lang.String) -> isJavaVersionMatch
    boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> isOSMatch
    boolean isOSNameMatch(java.lang.String,java.lang.String) -> isOSNameMatch
org.apache.commons.lang3.Validate -> org.apache.commons.lang3.Validate:
    java.lang.String DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE -> DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE
    java.lang.String DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE -> DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE
    java.lang.String DEFAULT_MATCHES_PATTERN_EX -> DEFAULT_MATCHES_PATTERN_EX
    java.lang.String DEFAULT_IS_NULL_EX_MESSAGE -> DEFAULT_IS_NULL_EX_MESSAGE
    java.lang.String DEFAULT_IS_TRUE_EX_MESSAGE -> DEFAULT_IS_TRUE_EX_MESSAGE
    java.lang.String DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE -> DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE -> DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_NOT_BLANK_EX_MESSAGE -> DEFAULT_NOT_BLANK_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE -> DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE -> DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE -> DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE -> DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE -> DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE -> DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE -> DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_VALID_STATE_EX_MESSAGE -> DEFAULT_VALID_STATE_EX_MESSAGE
    java.lang.String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE -> DEFAULT_IS_ASSIGNABLE_EX_MESSAGE
    java.lang.String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE -> DEFAULT_IS_INSTANCE_OF_EX_MESSAGE
    void isTrue(boolean,java.lang.String,long) -> isTrue
    void isTrue(boolean,java.lang.String,double) -> isTrue
    void isTrue(boolean,java.lang.String,java.lang.Object[]) -> isTrue
    void isTrue(boolean) -> isTrue
    java.lang.Object notNull(java.lang.Object) -> notNull
    java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> notNull
    java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String,java.lang.Object[]) -> notEmpty
    java.lang.Object[] notEmpty(java.lang.Object[]) -> notEmpty
    java.util.Collection notEmpty(java.util.Collection,java.lang.String,java.lang.Object[]) -> notEmpty
    java.util.Collection notEmpty(java.util.Collection) -> notEmpty
    java.util.Map notEmpty(java.util.Map,java.lang.String,java.lang.Object[]) -> notEmpty
    java.util.Map notEmpty(java.util.Map) -> notEmpty
    java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[]) -> notEmpty
    java.lang.CharSequence notEmpty(java.lang.CharSequence) -> notEmpty
    java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String,java.lang.Object[]) -> notBlank
    java.lang.CharSequence notBlank(java.lang.CharSequence) -> notBlank
    java.lang.Object[] noNullElements(java.lang.Object[],java.lang.String,java.lang.Object[]) -> noNullElements
    java.lang.Object[] noNullElements(java.lang.Object[]) -> noNullElements
    java.lang.Iterable noNullElements(java.lang.Iterable,java.lang.String,java.lang.Object[]) -> noNullElements
    java.lang.Iterable noNullElements(java.lang.Iterable) -> noNullElements
    java.lang.Object[] validIndex(java.lang.Object[],int,java.lang.String,java.lang.Object[]) -> validIndex
    java.lang.Object[] validIndex(java.lang.Object[],int) -> validIndex
    java.util.Collection validIndex(java.util.Collection,int,java.lang.String,java.lang.Object[]) -> validIndex
    java.util.Collection validIndex(java.util.Collection,int) -> validIndex
    java.lang.CharSequence validIndex(java.lang.CharSequence,int,java.lang.String,java.lang.Object[]) -> validIndex
    java.lang.CharSequence validIndex(java.lang.CharSequence,int) -> validIndex
    void validState(boolean) -> validState
    void validState(boolean,java.lang.String,java.lang.Object[]) -> validState
    void matchesPattern(java.lang.CharSequence,java.lang.String) -> matchesPattern
    void matchesPattern(java.lang.CharSequence,java.lang.String,java.lang.String,java.lang.Object[]) -> matchesPattern
    void inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable) -> inclusiveBetween
    void inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[]) -> inclusiveBetween
    void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable) -> exclusiveBetween
    void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[]) -> exclusiveBetween
    void isInstanceOf(java.lang.Class,java.lang.Object) -> isInstanceOf
    void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[]) -> isInstanceOf
    void isAssignableFrom(java.lang.Class,java.lang.Class) -> isAssignableFrom
    void isAssignableFrom(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[]) -> isAssignableFrom
org.apache.commons.lang3.builder.Builder -> org.apache.commons.lang3.builder.Builder:
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.CompareToBuilder -> org.apache.commons.lang3.builder.CompareToBuilder:
    int comparison -> comparison
    int reflectionCompare(java.lang.Object,java.lang.Object) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionCompare
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang3.builder.CompareToBuilder appendSuper(int) -> appendSuper
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(long,long) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(int,int) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(short,short) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(char,char) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(byte,byte) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(double,double) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(float,float) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(boolean,boolean) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(long[],long[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(int[],int[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(short[],short[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(char[],char[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(double[],double[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(float[],float[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(boolean[],boolean[]) -> append
    int toComparison() -> toComparison
    java.lang.Integer build() -> build
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.EqualsBuilder -> org.apache.commons.lang3.builder.EqualsBuilder:
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    boolean isEquals -> isEquals
    java.util.Set getRegistry() -> getRegistry
    org.apache.commons.lang3.tuple.Pair getRegisterPair(java.lang.Object,java.lang.Object) -> getRegisterPair
    boolean isRegistered(java.lang.Object,java.lang.Object) -> isRegistered
    void register(java.lang.Object,java.lang.Object) -> register
    void unregister(java.lang.Object,java.lang.Object) -> unregister
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionEquals
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang3.builder.EqualsBuilder appendSuper(boolean) -> appendSuper
    org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(long,long) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(int,int) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(short,short) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(char,char) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(byte,byte) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(double,double) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(float,float) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(boolean,boolean) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(long[],long[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(int[],int[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(short[],short[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(char[],char[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(double[],double[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(float[],float[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(boolean[],boolean[]) -> append
    boolean isEquals() -> isEquals
    java.lang.Boolean build() -> build
    void setEquals(boolean) -> setEquals
    void reset() -> reset
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.HashCodeBuilder -> org.apache.commons.lang3.builder.HashCodeBuilder:
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    int iConstant -> iConstant
    int iTotal -> iTotal
    java.util.Set getRegistry() -> getRegistry
    boolean isRegistered(java.lang.Object) -> isRegistered
    void reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[]) -> reflectionAppend
    int reflectionHashCode(int,int,java.lang.Object) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.util.Collection) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.lang.String[]) -> reflectionHashCode
    void register(java.lang.Object) -> register
    void unregister(java.lang.Object) -> unregister
    org.apache.commons.lang3.builder.HashCodeBuilder append(boolean) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(byte) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(byte[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(char) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(char[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(double) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(double[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(float) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(float[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(int) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(int[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(long) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(long[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(short) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(short[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder appendSuper(int) -> appendSuper
    int toHashCode() -> toHashCode
    java.lang.Integer build() -> build
    int hashCode() -> hashCode
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.IDKey -> org.apache.commons.lang3.builder.a:
    java.lang.Object value -> a
    int id -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.lang3.builder.ReflectionToStringBuilder -> org.apache.commons.lang3.builder.ReflectionToStringBuilder:
    boolean appendStatics -> appendStatics
    boolean appendTransients -> appendTransients
    java.lang.String[] excludeFieldNames -> excludeFieldNames
    java.lang.Class upToClass -> upToClass
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class) -> toString
    java.lang.String toStringExclude(java.lang.Object,java.util.Collection) -> toStringExclude
    java.lang.String[] toNoNullStringArray(java.util.Collection) -> toNoNullStringArray
    java.lang.String[] toNoNullStringArray(java.lang.Object[]) -> toNoNullStringArray
    java.lang.String toStringExclude(java.lang.Object,java.lang.String[]) -> toStringExclude
    boolean accept(java.lang.reflect.Field) -> accept
    void appendFieldsIn(java.lang.Class) -> appendFieldsIn
    java.lang.String[] getExcludeFieldNames() -> getExcludeFieldNames
    java.lang.Class getUpToClass() -> getUpToClass
    java.lang.Object getValue(java.lang.reflect.Field) -> getValue
    boolean isAppendStatics() -> isAppendStatics
    boolean isAppendTransients() -> isAppendTransients
    org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(java.lang.Object) -> reflectionAppendArray
    void setAppendStatics(boolean) -> setAppendStatics
    void setAppendTransients(boolean) -> setAppendTransients
    org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[]) -> setExcludeFieldNames
    void setUpToClass(java.lang.Class) -> setUpToClass
    java.lang.String toString() -> toString
org.apache.commons.lang3.builder.StandardToStringStyle -> org.apache.commons.lang3.builder.StandardToStringStyle:
    long serialVersionUID -> serialVersionUID
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang3.builder.ToStringBuilder -> org.apache.commons.lang3.builder.ToStringBuilder:
    org.apache.commons.lang3.builder.ToStringStyle defaultStyle -> defaultStyle
    java.lang.StringBuffer buffer -> buffer
    java.lang.Object object -> object
    org.apache.commons.lang3.builder.ToStringStyle style -> style
    org.apache.commons.lang3.builder.ToStringStyle getDefaultStyle() -> getDefaultStyle
    void setDefaultStyle(org.apache.commons.lang3.builder.ToStringStyle) -> setDefaultStyle
    java.lang.String reflectionToString(java.lang.Object) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,java.lang.Class) -> reflectionToString
    org.apache.commons.lang3.builder.ToStringBuilder append(boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(boolean[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(byte) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(byte[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(char) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(char[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(double) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(double[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(float) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(float[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(int) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(int[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(long) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(long[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(short) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(short[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object,boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder appendAsObjectToString(java.lang.Object) -> appendAsObjectToString
    org.apache.commons.lang3.builder.ToStringBuilder appendSuper(java.lang.String) -> appendSuper
    org.apache.commons.lang3.builder.ToStringBuilder appendToString(java.lang.String) -> appendToString
    java.lang.Object getObject() -> getObject
    java.lang.StringBuffer getStringBuffer() -> getStringBuffer
    org.apache.commons.lang3.builder.ToStringStyle getStyle() -> getStyle
    java.lang.String toString() -> toString
    java.lang.String build() -> build
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.ToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.builder.ToStringStyle DEFAULT_STYLE -> DEFAULT_STYLE
    org.apache.commons.lang3.builder.ToStringStyle MULTI_LINE_STYLE -> MULTI_LINE_STYLE
    org.apache.commons.lang3.builder.ToStringStyle NO_FIELD_NAMES_STYLE -> NO_FIELD_NAMES_STYLE
    org.apache.commons.lang3.builder.ToStringStyle SHORT_PREFIX_STYLE -> SHORT_PREFIX_STYLE
    org.apache.commons.lang3.builder.ToStringStyle SIMPLE_STYLE -> SIMPLE_STYLE
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    boolean useFieldNames -> useFieldNames
    boolean useClassName -> useClassName
    boolean useShortClassName -> useShortClassName
    boolean useIdentityHashCode -> useIdentityHashCode
    java.lang.String contentStart -> contentStart
    java.lang.String contentEnd -> contentEnd
    java.lang.String fieldNameValueSeparator -> fieldNameValueSeparator
    boolean fieldSeparatorAtStart -> fieldSeparatorAtStart
    boolean fieldSeparatorAtEnd -> fieldSeparatorAtEnd
    java.lang.String fieldSeparator -> fieldSeparator
    java.lang.String arrayStart -> arrayStart
    java.lang.String arraySeparator -> arraySeparator
    boolean arrayContentDetail -> arrayContentDetail
    java.lang.String arrayEnd -> arrayEnd
    boolean defaultFullDetail -> defaultFullDetail
    java.lang.String nullText -> nullText
    java.lang.String sizeStartText -> sizeStartText
    java.lang.String sizeEndText -> sizeEndText
    java.lang.String summaryObjectStartText -> summaryObjectStartText
    java.lang.String summaryObjectEndText -> summaryObjectEndText
    java.util.Map getRegistry() -> getRegistry
    boolean isRegistered(java.lang.Object) -> isRegistered
    void register(java.lang.Object) -> register
    void unregister(java.lang.Object) -> unregister
    void appendSuper(java.lang.StringBuffer,java.lang.String) -> appendSuper
    void appendToString(java.lang.StringBuffer,java.lang.String) -> appendToString
    void appendStart(java.lang.StringBuffer,java.lang.Object) -> appendStart
    void appendEnd(java.lang.StringBuffer,java.lang.Object) -> appendEnd
    void removeLastFieldSeparator(java.lang.StringBuffer) -> removeLastFieldSeparator
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean) -> append
    void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> appendInternal
    void appendCyclicObject(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendCyclicObject
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,int) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,short) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,byte) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,char) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,double) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,float) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendDetail
    void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> reflectionAppendArrayDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,long[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,int[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,int[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,short[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,short[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,byte[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,char[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,char[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,double[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,double[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,float[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,float[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,boolean[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendSummary
    void appendClassName(java.lang.StringBuffer,java.lang.Object) -> appendClassName
    void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object) -> appendIdentityHashCode
    void appendContentStart(java.lang.StringBuffer) -> appendContentStart
    void appendContentEnd(java.lang.StringBuffer) -> appendContentEnd
    void appendNullText(java.lang.StringBuffer,java.lang.String) -> appendNullText
    void appendFieldSeparator(java.lang.StringBuffer) -> appendFieldSeparator
    void appendFieldStart(java.lang.StringBuffer,java.lang.String) -> appendFieldStart
    void appendFieldEnd(java.lang.StringBuffer,java.lang.String) -> appendFieldEnd
    void appendSummarySize(java.lang.StringBuffer,java.lang.String,int) -> appendSummarySize
    boolean isFullDetail(java.lang.Boolean) -> isFullDetail
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle -> org.apache.commons.lang3.builder.b:
org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle -> org.apache.commons.lang3.builder.c:
org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle -> org.apache.commons.lang3.builder.d:
org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle -> org.apache.commons.lang3.builder.e:
org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle -> org.apache.commons.lang3.builder.f:
org.apache.commons.lang3.concurrent.AtomicInitializer -> org.apache.commons.lang3.concurrent.AtomicInitializer:
    java.util.concurrent.atomic.AtomicReference reference -> reference
    java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.AtomicSafeInitializer -> org.apache.commons.lang3.concurrent.AtomicSafeInitializer:
    java.util.concurrent.atomic.AtomicReference factory -> factory
    java.util.concurrent.atomic.AtomicReference reference -> reference
    java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.BackgroundInitializer -> org.apache.commons.lang3.concurrent.BackgroundInitializer:
    java.util.concurrent.ExecutorService externalExecutor -> externalExecutor
    java.util.concurrent.ExecutorService executor -> executor
    java.util.concurrent.Future future -> future
    java.util.concurrent.ExecutorService getExternalExecutor() -> getExternalExecutor
    boolean isStarted() -> isStarted
    void setExternalExecutor(java.util.concurrent.ExecutorService) -> setExternalExecutor
    boolean start() -> start
    java.lang.Object get() -> get
    java.util.concurrent.Future getFuture() -> getFuture
    java.util.concurrent.ExecutorService getActiveExecutor() -> getActiveExecutor
    int getTaskCount() -> getTaskCount
    java.lang.Object initialize() -> initialize
    java.util.concurrent.Callable createTask(java.util.concurrent.ExecutorService) -> createTask
    java.util.concurrent.ExecutorService createExecutor() -> createExecutor
org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask -> org.apache.commons.lang3.concurrent.a:
    java.util.concurrent.ExecutorService execFinally -> b
    org.apache.commons.lang3.concurrent.BackgroundInitializer this$0 -> a
    java.lang.Object call() -> call
org.apache.commons.lang3.concurrent.BasicThreadFactory -> org.apache.commons.lang3.concurrent.BasicThreadFactory:
    java.util.concurrent.atomic.AtomicLong threadCounter -> threadCounter
    java.util.concurrent.ThreadFactory wrappedFactory -> wrappedFactory
    java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler -> uncaughtExceptionHandler
    java.lang.String namingPattern -> namingPattern
    java.lang.Integer priority -> priority
    java.lang.Boolean daemonFlag -> daemonFlag
    java.util.concurrent.ThreadFactory getWrappedFactory() -> getWrappedFactory
    java.lang.String getNamingPattern() -> getNamingPattern
    java.lang.Boolean getDaemonFlag() -> getDaemonFlag
    java.lang.Integer getPriority() -> getPriority
    java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler() -> getUncaughtExceptionHandler
    long getThreadCount() -> getThreadCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
    void initializeThread(java.lang.Thread) -> initializeThread
org.apache.commons.lang3.concurrent.BasicThreadFactory$1 -> org.apache.commons.lang3.concurrent.b:
org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder -> org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder:
    java.util.concurrent.ThreadFactory wrappedFactory -> wrappedFactory
    java.lang.Thread$UncaughtExceptionHandler exceptionHandler -> exceptionHandler
    java.lang.String namingPattern -> namingPattern
    java.lang.Integer priority -> priority
    java.lang.Boolean daemonFlag -> daemonFlag
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder wrappedFactory(java.util.concurrent.ThreadFactory) -> wrappedFactory
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder namingPattern(java.lang.String) -> namingPattern
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder daemon(boolean) -> daemon
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder priority(int) -> priority
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder uncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> uncaughtExceptionHandler
    void reset() -> reset
    org.apache.commons.lang3.concurrent.BasicThreadFactory build() -> build
    java.lang.Object build() -> build
    java.util.concurrent.ThreadFactory access$000(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$000
    java.lang.String access$100(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$100
    java.lang.Integer access$200(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$200
    java.lang.Boolean access$300(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$300
    java.lang.Thread$UncaughtExceptionHandler access$400(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$400
org.apache.commons.lang3.concurrent.CallableBackgroundInitializer -> org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:
    java.util.concurrent.Callable callable -> callable
    java.lang.Object initialize() -> initialize
    void checkCallable(java.util.concurrent.Callable) -> checkCallable
org.apache.commons.lang3.concurrent.ConcurrentException -> org.apache.commons.lang3.concurrent.ConcurrentException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.concurrent.ConcurrentInitializer -> org.apache.commons.lang3.concurrent.ConcurrentInitializer:
    java.lang.Object get() -> get
org.apache.commons.lang3.concurrent.ConcurrentRuntimeException -> org.apache.commons.lang3.concurrent.ConcurrentRuntimeException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.concurrent.ConcurrentUtils -> org.apache.commons.lang3.concurrent.ConcurrentUtils:
    org.apache.commons.lang3.concurrent.ConcurrentException extractCause(java.util.concurrent.ExecutionException) -> extractCause
    org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(java.util.concurrent.ExecutionException) -> extractCauseUnchecked
    void handleCause(java.util.concurrent.ExecutionException) -> handleCause
    void handleCauseUnchecked(java.util.concurrent.ExecutionException) -> handleCauseUnchecked
    java.lang.Throwable checkedException(java.lang.Throwable) -> checkedException
    void throwCause(java.util.concurrent.ExecutionException) -> throwCause
    java.lang.Object initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> initialize
    java.lang.Object initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> initializeUnchecked
    java.lang.Object putIfAbsent(java.util.concurrent.ConcurrentMap,java.lang.Object,java.lang.Object) -> putIfAbsent
    java.lang.Object createIfAbsent(java.util.concurrent.ConcurrentMap,java.lang.Object,org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> createIfAbsent
    java.lang.Object createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap,java.lang.Object,org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> createIfAbsentUnchecked
    java.util.concurrent.Future constantFuture(java.lang.Object) -> constantFuture
org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture -> org.apache.commons.lang3.concurrent.c:
    java.lang.Object value -> a
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
org.apache.commons.lang3.concurrent.ConstantInitializer -> org.apache.commons.lang3.concurrent.ConstantInitializer:
    java.lang.String FMT_TO_STRING -> FMT_TO_STRING
    java.lang.Object object -> object
    java.lang.Object getObject() -> getObject
    java.lang.Object get() -> get
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.commons.lang3.concurrent.LazyInitializer -> org.apache.commons.lang3.concurrent.LazyInitializer:
    java.lang.Object object -> object
    java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:
    java.util.Map childInitializers -> childInitializers
    void addInitializer(java.lang.String,org.apache.commons.lang3.concurrent.BackgroundInitializer) -> addInitializer
    int getTaskCount() -> getTaskCount
    org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults initialize() -> initialize
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1 -> org.apache.commons.lang3.concurrent.d:
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults:
    java.util.Map initializers -> initializers
    java.util.Map resultObjects -> resultObjects
    java.util.Map exceptions -> exceptions
    org.apache.commons.lang3.concurrent.BackgroundInitializer getInitializer(java.lang.String) -> getInitializer
    java.lang.Object getResultObject(java.lang.String) -> getResultObject
    boolean isException(java.lang.String) -> isException
    org.apache.commons.lang3.concurrent.ConcurrentException getException(java.lang.String) -> getException
    java.util.Set initializerNames() -> initializerNames
    boolean isSuccessful() -> isSuccessful
    org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String) -> checkName
org.apache.commons.lang3.concurrent.TimedSemaphore -> org.apache.commons.lang3.concurrent.TimedSemaphore:
    int NO_LIMIT -> NO_LIMIT
    int THREAD_POOL_SIZE -> THREAD_POOL_SIZE
    java.util.concurrent.ScheduledExecutorService executorService -> executorService
    long period -> period
    java.util.concurrent.TimeUnit unit -> unit
    boolean ownExecutor -> ownExecutor
    java.util.concurrent.ScheduledFuture task -> task
    long totalAcquireCount -> totalAcquireCount
    long periodCount -> periodCount
    int limit -> limit
    int acquireCount -> acquireCount
    int lastCallsPerPeriod -> lastCallsPerPeriod
    boolean shutdown -> shutdown
    int getLimit() -> getLimit
    void setLimit(int) -> setLimit
    void shutdown() -> shutdown
    boolean isShutdown() -> isShutdown
    void acquire() -> acquire
    int getLastAcquiresPerPeriod() -> getLastAcquiresPerPeriod
    int getAcquireCount() -> getAcquireCount
    int getAvailablePermits() -> getAvailablePermits
    double getAverageCallsPerPeriod() -> getAverageCallsPerPeriod
    long getPeriod() -> getPeriod
    java.util.concurrent.TimeUnit getUnit() -> getUnit
    java.util.concurrent.ScheduledExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.ScheduledFuture startTimer() -> startTimer
    void endOfPeriod() -> endOfPeriod
org.apache.commons.lang3.concurrent.TimedSemaphore$1 -> org.apache.commons.lang3.concurrent.e:
    org.apache.commons.lang3.concurrent.TimedSemaphore this$0 -> a
    void run() -> run
org.apache.commons.lang3.event.EventListenerSupport -> org.apache.commons.lang3.event.EventListenerSupport:
    long serialVersionUID -> serialVersionUID
    java.util.List listeners -> listeners
    java.lang.Object proxy -> proxy
    java.lang.Object[] prototypeArray -> prototypeArray
    org.apache.commons.lang3.event.EventListenerSupport create(java.lang.Class) -> create
    java.lang.Object fire() -> fire
    void addListener(java.lang.Object) -> addListener
    int getListenerCount() -> getListenerCount
    void removeListener(java.lang.Object) -> removeListener
    java.lang.Object[] getListeners() -> getListeners
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void initializeTransientFields(java.lang.Class,java.lang.ClassLoader) -> initializeTransientFields
    void createProxy(java.lang.Class,java.lang.ClassLoader) -> createProxy
    java.lang.reflect.InvocationHandler createInvocationHandler() -> createInvocationHandler
    java.util.List access$000(org.apache.commons.lang3.event.EventListenerSupport) -> access$000
org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler -> org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler:
    org.apache.commons.lang3.event.EventListenerSupport this$0 -> this$0
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.apache.commons.lang3.event.EventUtils -> org.apache.commons.lang3.event.EventUtils:
    void addEventListener(java.lang.Object,java.lang.Class,java.lang.Object) -> addEventListener
    void bindEventsToMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class,java.lang.String[]) -> bindEventsToMethod
org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler -> org.apache.commons.lang3.event.a:
    java.lang.Object target -> a
    java.lang.String methodName -> b
    java.util.Set eventTypes -> c
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    boolean hasMatchingParametersMethod(java.lang.reflect.Method) -> a
org.apache.commons.lang3.exception.CloneFailedException -> org.apache.commons.lang3.exception.CloneFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.exception.ContextedException -> org.apache.commons.lang3.exception.ContextedException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.exception.ExceptionContext exceptionContext -> exceptionContext
    org.apache.commons.lang3.exception.ContextedException addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.ContextedException setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.List getContextEntries() -> getContextEntries
    java.util.Set getContextLabels() -> getContextLabels
    java.lang.String getMessage() -> getMessage
    java.lang.String getRawMessage() -> getRawMessage
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.ContextedRuntimeException -> org.apache.commons.lang3.exception.ContextedRuntimeException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.exception.ExceptionContext exceptionContext -> exceptionContext
    org.apache.commons.lang3.exception.ContextedRuntimeException addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.ContextedRuntimeException setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.List getContextEntries() -> getContextEntries
    java.util.Set getContextLabels() -> getContextLabels
    java.lang.String getMessage() -> getMessage
    java.lang.String getRawMessage() -> getRawMessage
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.DefaultExceptionContext -> org.apache.commons.lang3.exception.DefaultExceptionContext:
    long serialVersionUID -> serialVersionUID
    java.util.List contextValues -> contextValues
    org.apache.commons.lang3.exception.DefaultExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.Set getContextLabels() -> getContextLabels
    java.util.List getContextEntries() -> getContextEntries
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.ExceptionContext -> org.apache.commons.lang3.exception.ExceptionContext:
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.Set getContextLabels() -> getContextLabels
    java.util.List getContextEntries() -> getContextEntries
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
org.apache.commons.lang3.exception.ExceptionUtils -> org.apache.commons.lang3.exception.ExceptionUtils:
    java.lang.String WRAPPED_MARKER -> WRAPPED_MARKER
    java.lang.String[] CAUSE_METHOD_NAMES -> CAUSE_METHOD_NAMES
    java.lang.String[] getDefaultCauseMethodNames() -> getDefaultCauseMethodNames
    java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]) -> getCause
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String) -> getCauseUsingMethodName
    int getThrowableCount(java.lang.Throwable) -> getThrowableCount
    java.lang.Throwable[] getThrowables(java.lang.Throwable) -> getThrowables
    java.util.List getThrowableList(java.lang.Throwable) -> getThrowableList
    int indexOfThrowable(java.lang.Throwable,java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Throwable,java.lang.Class,int) -> indexOfThrowable
    int indexOfType(java.lang.Throwable,java.lang.Class) -> indexOfType
    int indexOfType(java.lang.Throwable,java.lang.Class,int) -> indexOfType
    int indexOf(java.lang.Throwable,java.lang.Class,int,boolean) -> indexOf
    void printRootCauseStackTrace(java.lang.Throwable) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintStream) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintWriter) -> printRootCauseStackTrace
    java.lang.String[] getRootCauseStackTrace(java.lang.Throwable) -> getRootCauseStackTrace
    void removeCommonFrames(java.util.List,java.util.List) -> removeCommonFrames
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.lang.String[] getStackFrames(java.lang.Throwable) -> getStackFrames
    java.lang.String[] getStackFrames(java.lang.String) -> getStackFrames
    java.util.List getStackFrameList(java.lang.Throwable) -> getStackFrameList
    java.lang.String getMessage(java.lang.Throwable) -> getMessage
    java.lang.String getRootCauseMessage(java.lang.Throwable) -> getRootCauseMessage
org.apache.commons.lang3.math.Fraction -> org.apache.commons.lang3.math.Fraction:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.math.Fraction ZERO -> ZERO
    org.apache.commons.lang3.math.Fraction ONE -> ONE
    org.apache.commons.lang3.math.Fraction ONE_HALF -> ONE_HALF
    org.apache.commons.lang3.math.Fraction ONE_THIRD -> ONE_THIRD
    org.apache.commons.lang3.math.Fraction TWO_THIRDS -> TWO_THIRDS
    org.apache.commons.lang3.math.Fraction ONE_QUARTER -> ONE_QUARTER
    org.apache.commons.lang3.math.Fraction TWO_QUARTERS -> TWO_QUARTERS
    org.apache.commons.lang3.math.Fraction THREE_QUARTERS -> THREE_QUARTERS
    org.apache.commons.lang3.math.Fraction ONE_FIFTH -> ONE_FIFTH
    org.apache.commons.lang3.math.Fraction TWO_FIFTHS -> TWO_FIFTHS
    org.apache.commons.lang3.math.Fraction THREE_FIFTHS -> THREE_FIFTHS
    org.apache.commons.lang3.math.Fraction FOUR_FIFTHS -> FOUR_FIFTHS
    int numerator -> numerator
    int denominator -> denominator
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.String toProperString -> toProperString
    org.apache.commons.lang3.math.Fraction getFraction(int,int) -> getFraction
    org.apache.commons.lang3.math.Fraction getFraction(int,int,int) -> getFraction
    org.apache.commons.lang3.math.Fraction getReducedFraction(int,int) -> getReducedFraction
    org.apache.commons.lang3.math.Fraction getFraction(double) -> getFraction
    org.apache.commons.lang3.math.Fraction getFraction(java.lang.String) -> getFraction
    int getNumerator() -> getNumerator
    int getDenominator() -> getDenominator
    int getProperNumerator() -> getProperNumerator
    int getProperWhole() -> getProperWhole
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    org.apache.commons.lang3.math.Fraction reduce() -> reduce
    org.apache.commons.lang3.math.Fraction invert() -> invert
    org.apache.commons.lang3.math.Fraction negate() -> negate
    org.apache.commons.lang3.math.Fraction abs() -> abs
    org.apache.commons.lang3.math.Fraction pow(int) -> pow
    int greatestCommonDivisor(int,int) -> greatestCommonDivisor
    int mulAndCheck(int,int) -> mulAndCheck
    int mulPosAndCheck(int,int) -> mulPosAndCheck
    int addAndCheck(int,int) -> addAndCheck
    int subAndCheck(int,int) -> subAndCheck
    org.apache.commons.lang3.math.Fraction add(org.apache.commons.lang3.math.Fraction) -> add
    org.apache.commons.lang3.math.Fraction subtract(org.apache.commons.lang3.math.Fraction) -> subtract
    org.apache.commons.lang3.math.Fraction addSub(org.apache.commons.lang3.math.Fraction,boolean) -> addSub
    org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction) -> multiplyBy
    org.apache.commons.lang3.math.Fraction divideBy(org.apache.commons.lang3.math.Fraction) -> divideBy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.math.Fraction) -> compareTo
    java.lang.String toString() -> toString
    java.lang.String toProperString() -> toProperString
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.lang3.math.IEEE754rUtils -> org.apache.commons.lang3.math.IEEE754rUtils:
    double min(double[]) -> min
    float min(float[]) -> min
    double min(double,double,double) -> min
    double min(double,double) -> min
    float min(float,float,float) -> min
    float min(float,float) -> min
    double max(double[]) -> max
    float max(float[]) -> max
    double max(double,double,double) -> max
    double max(double,double) -> max
    float max(float,float,float) -> max
    float max(float,float) -> max
org.apache.commons.lang3.math.NumberUtils -> org.apache.commons.lang3.math.NumberUtils:
    java.lang.Long LONG_ZERO -> LONG_ZERO
    java.lang.Long LONG_ONE -> LONG_ONE
    java.lang.Long LONG_MINUS_ONE -> LONG_MINUS_ONE
    java.lang.Integer INTEGER_ZERO -> INTEGER_ZERO
    java.lang.Integer INTEGER_ONE -> INTEGER_ONE
    java.lang.Integer INTEGER_MINUS_ONE -> INTEGER_MINUS_ONE
    java.lang.Short SHORT_ZERO -> SHORT_ZERO
    java.lang.Short SHORT_ONE -> SHORT_ONE
    java.lang.Short SHORT_MINUS_ONE -> SHORT_MINUS_ONE
    java.lang.Byte BYTE_ZERO -> BYTE_ZERO
    java.lang.Byte BYTE_ONE -> BYTE_ONE
    java.lang.Byte BYTE_MINUS_ONE -> BYTE_MINUS_ONE
    java.lang.Double DOUBLE_ZERO -> DOUBLE_ZERO
    java.lang.Double DOUBLE_ONE -> DOUBLE_ONE
    java.lang.Double DOUBLE_MINUS_ONE -> DOUBLE_MINUS_ONE
    java.lang.Float FLOAT_ZERO -> FLOAT_ZERO
    java.lang.Float FLOAT_ONE -> FLOAT_ONE
    java.lang.Float FLOAT_MINUS_ONE -> FLOAT_MINUS_ONE
    int toInt(java.lang.String) -> toInt
    int toInt(java.lang.String,int) -> toInt
    long toLong(java.lang.String) -> toLong
    long toLong(java.lang.String,long) -> toLong
    float toFloat(java.lang.String) -> toFloat
    float toFloat(java.lang.String,float) -> toFloat
    double toDouble(java.lang.String) -> toDouble
    double toDouble(java.lang.String,double) -> toDouble
    byte toByte(java.lang.String) -> toByte
    byte toByte(java.lang.String,byte) -> toByte
    short toShort(java.lang.String) -> toShort
    short toShort(java.lang.String,short) -> toShort
    java.lang.Number createNumber(java.lang.String) -> createNumber
    boolean isAllZeros(java.lang.String) -> isAllZeros
    java.lang.Float createFloat(java.lang.String) -> createFloat
    java.lang.Double createDouble(java.lang.String) -> createDouble
    java.lang.Integer createInteger(java.lang.String) -> createInteger
    java.lang.Long createLong(java.lang.String) -> createLong
    java.math.BigInteger createBigInteger(java.lang.String) -> createBigInteger
    java.math.BigDecimal createBigDecimal(java.lang.String) -> createBigDecimal
    long min(long[]) -> min
    int min(int[]) -> min
    short min(short[]) -> min
    byte min(byte[]) -> min
    double min(double[]) -> min
    float min(float[]) -> min
    long max(long[]) -> max
    int max(int[]) -> max
    short max(short[]) -> max
    byte max(byte[]) -> max
    double max(double[]) -> max
    float max(float[]) -> max
    void validateArray(java.lang.Object) -> validateArray
    long min(long,long,long) -> min
    int min(int,int,int) -> min
    short min(short,short,short) -> min
    byte min(byte,byte,byte) -> min
    double min(double,double,double) -> min
    float min(float,float,float) -> min
    long max(long,long,long) -> max
    int max(int,int,int) -> max
    short max(short,short,short) -> max
    byte max(byte,byte,byte) -> max
    double max(double,double,double) -> max
    float max(float,float,float) -> max
    boolean isDigits(java.lang.String) -> isDigits
    boolean isNumber(java.lang.String) -> isNumber
org.apache.commons.lang3.mutable.Mutable -> org.apache.commons.lang3.mutable.Mutable:
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.mutable.MutableBoolean -> org.apache.commons.lang3.mutable.MutableBoolean:
    long serialVersionUID -> serialVersionUID
    boolean value -> value
    java.lang.Boolean getValue() -> getValue
    void setValue(boolean) -> setValue
    void setValue(java.lang.Boolean) -> setValue
    boolean isTrue() -> isTrue
    boolean isFalse() -> isFalse
    boolean booleanValue() -> booleanValue
    java.lang.Boolean toBoolean() -> toBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableBoolean) -> compareTo
    java.lang.String toString() -> toString
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.lang3.mutable.MutableByte -> org.apache.commons.lang3.mutable.MutableByte:
    long serialVersionUID -> serialVersionUID
    byte value -> value
    java.lang.Byte getValue() -> getValue
    void setValue(byte) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(byte) -> add
    void add(java.lang.Number) -> add
    void subtract(byte) -> subtract
    void subtract(java.lang.Number) -> subtract
    byte byteValue() -> byteValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Byte toByte() -> toByte
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableByte) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableDouble -> org.apache.commons.lang3.mutable.MutableDouble:
    long serialVersionUID -> serialVersionUID
    double value -> value
    java.lang.Double getValue() -> getValue
    void setValue(double) -> setValue
    void setValue(java.lang.Number) -> setValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    void increment() -> increment
    void decrement() -> decrement
    void add(double) -> add
    void add(java.lang.Number) -> add
    void subtract(double) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Double toDouble() -> toDouble
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableDouble) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableFloat -> org.apache.commons.lang3.mutable.MutableFloat:
    long serialVersionUID -> serialVersionUID
    float value -> value
    java.lang.Float getValue() -> getValue
    void setValue(float) -> setValue
    void setValue(java.lang.Number) -> setValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    void increment() -> increment
    void decrement() -> decrement
    void add(float) -> add
    void add(java.lang.Number) -> add
    void subtract(float) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Float toFloat() -> toFloat
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableFloat) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableInt -> org.apache.commons.lang3.mutable.MutableInt:
    long serialVersionUID -> serialVersionUID
    int value -> value
    java.lang.Integer getValue() -> getValue
    void setValue(int) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(int) -> add
    void add(java.lang.Number) -> add
    void subtract(int) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Integer toInteger() -> toInteger
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableInt) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableLong -> org.apache.commons.lang3.mutable.MutableLong:
    long serialVersionUID -> serialVersionUID
    long value -> value
    java.lang.Long getValue() -> getValue
    void setValue(long) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(long) -> add
    void add(java.lang.Number) -> add
    void subtract(long) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Long toLong() -> toLong
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableLong) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableObject -> org.apache.commons.lang3.mutable.MutableObject:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang3.mutable.MutableShort -> org.apache.commons.lang3.mutable.MutableShort:
    long serialVersionUID -> serialVersionUID
    short value -> value
    java.lang.Short getValue() -> getValue
    void setValue(short) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(short) -> add
    void add(java.lang.Number) -> add
    void subtract(short) -> subtract
    void subtract(java.lang.Number) -> subtract
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Short toShort() -> toShort
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableShort) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.reflect.ConstructorUtils -> org.apache.commons.lang3.reflect.ConstructorUtils:
    java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[]) -> invokeConstructor
    java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[]) -> invokeConstructor
    java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[]) -> invokeExactConstructor
    java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[]) -> invokeExactConstructor
    java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[]) -> getAccessibleConstructor
    java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor) -> getAccessibleConstructor
    java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[]) -> getMatchingAccessibleConstructor
org.apache.commons.lang3.reflect.FieldUtils -> org.apache.commons.lang3.reflect.FieldUtils:
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String,boolean) -> getField
    java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
    java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String,boolean) -> getDeclaredField
    java.lang.reflect.Field[] getAllFields(java.lang.Class) -> getAllFields
    java.util.List getAllFieldsList(java.lang.Class) -> getAllFieldsList
    java.lang.Object readStaticField(java.lang.reflect.Field) -> readStaticField
    java.lang.Object readStaticField(java.lang.reflect.Field,boolean) -> readStaticField
    java.lang.Object readStaticField(java.lang.Class,java.lang.String) -> readStaticField
    java.lang.Object readStaticField(java.lang.Class,java.lang.String,boolean) -> readStaticField
    java.lang.Object readDeclaredStaticField(java.lang.Class,java.lang.String) -> readDeclaredStaticField
    java.lang.Object readDeclaredStaticField(java.lang.Class,java.lang.String,boolean) -> readDeclaredStaticField
    java.lang.Object readField(java.lang.reflect.Field,java.lang.Object) -> readField
    java.lang.Object readField(java.lang.reflect.Field,java.lang.Object,boolean) -> readField
    java.lang.Object readField(java.lang.Object,java.lang.String) -> readField
    java.lang.Object readField(java.lang.Object,java.lang.String,boolean) -> readField
    java.lang.Object readDeclaredField(java.lang.Object,java.lang.String) -> readDeclaredField
    java.lang.Object readDeclaredField(java.lang.Object,java.lang.String,boolean) -> readDeclaredField
    void writeStaticField(java.lang.reflect.Field,java.lang.Object) -> writeStaticField
    void writeStaticField(java.lang.reflect.Field,java.lang.Object,boolean) -> writeStaticField
    void writeStaticField(java.lang.Class,java.lang.String,java.lang.Object) -> writeStaticField
    void writeStaticField(java.lang.Class,java.lang.String,java.lang.Object,boolean) -> writeStaticField
    void writeDeclaredStaticField(java.lang.Class,java.lang.String,java.lang.Object) -> writeDeclaredStaticField
    void writeDeclaredStaticField(java.lang.Class,java.lang.String,java.lang.Object,boolean) -> writeDeclaredStaticField
    void writeField(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> writeField
    void writeField(java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean) -> writeField
    void removeFinalModifier(java.lang.reflect.Field) -> removeFinalModifier
    void writeField(java.lang.Object,java.lang.String,java.lang.Object) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,boolean) -> writeField
    void writeDeclaredField(java.lang.Object,java.lang.String,java.lang.Object) -> writeDeclaredField
    void writeDeclaredField(java.lang.Object,java.lang.String,java.lang.Object,boolean) -> writeDeclaredField
org.apache.commons.lang3.reflect.InheritanceUtils -> org.apache.commons.lang3.reflect.InheritanceUtils:
    int distance(java.lang.Class,java.lang.Class) -> distance
org.apache.commons.lang3.reflect.MemberUtils -> org.apache.commons.lang3.reflect.a:
    java.lang.Class[] ORDERED_PRIMITIVE_TYPES -> a
    void setAccessibleWorkaround(java.lang.reflect.AccessibleObject) -> a
    boolean isPackageAccess(int) -> a
    boolean isAccessible(java.lang.reflect.Member) -> a
    int compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[]) -> a
    float getTotalTransformationCost(java.lang.Class[],java.lang.Class[]) -> a
    float getObjectTransformationCost(java.lang.Class,java.lang.Class) -> a
    float getPrimitivePromotionCost(java.lang.Class,java.lang.Class) -> b
org.apache.commons.lang3.reflect.MethodUtils -> org.apache.commons.lang3.reflect.MethodUtils:
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeMethod
    java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeExactMethod
    java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeExactMethod
    java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeExactStaticMethod
    java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]) -> invokeStaticMethod
    java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeStaticMethod
    java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]) -> invokeExactStaticMethod
    java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethod
    java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method) -> getAccessibleMethod
    java.lang.reflect.Method getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethodFromSuperclass
    java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethodFromInterfaceNest
    java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMatchingAccessibleMethod
    java.util.Set getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces) -> getOverrideHierarchy
org.apache.commons.lang3.reflect.TypeLiteral -> org.apache.commons.lang3.reflect.TypeLiteral:
    java.lang.reflect.TypeVariable T -> T
    java.lang.reflect.Type value -> value
    java.lang.String toString -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.reflect.Type getType() -> getType
org.apache.commons.lang3.reflect.TypeUtils -> org.apache.commons.lang3.reflect.TypeUtils:
    java.lang.reflect.WildcardType WILDCARD_ALL -> WILDCARD_ALL
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.Class) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignable
    java.lang.reflect.Type unrollVariableAssignments(java.lang.reflect.TypeVariable,java.util.Map) -> unrollVariableAssignments
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.WildcardType,java.util.Map) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map) -> isAssignable
    java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map) -> substituteTypeVariables
    java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.Class,java.lang.Class,java.util.Map) -> getTypeArguments
    java.util.Map determineTypeArguments(java.lang.Class,java.lang.reflect.ParameterizedType) -> determineTypeArguments
    void mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map) -> mapTypeVariablesToArguments
    java.lang.reflect.Type getClosestParentType(java.lang.Class,java.lang.Class) -> getClosestParentType
    boolean isInstance(java.lang.Object,java.lang.reflect.Type) -> isInstance
    java.lang.reflect.Type[] normalizeUpperBounds(java.lang.reflect.Type[]) -> normalizeUpperBounds
    java.lang.reflect.Type[] getImplicitBounds(java.lang.reflect.TypeVariable) -> getImplicitBounds
    java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType) -> getImplicitUpperBounds
    java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType) -> getImplicitLowerBounds
    boolean typesSatisfyVariables(java.util.Map) -> typesSatisfyVariables
    java.lang.Class getRawType(java.lang.reflect.ParameterizedType) -> getRawType
    java.lang.Class getRawType(java.lang.reflect.Type,java.lang.reflect.Type) -> getRawType
    boolean isArrayType(java.lang.reflect.Type) -> isArrayType
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type unrollVariables(java.util.Map,java.lang.reflect.Type) -> unrollVariables
    java.lang.reflect.Type[] unrollBounds(java.util.Map,java.lang.reflect.Type[]) -> unrollBounds
    boolean containsTypeVariables(java.lang.reflect.Type) -> containsTypeVariables
    java.lang.reflect.ParameterizedType parameterize(java.lang.Class,java.lang.reflect.Type[]) -> parameterize
    java.lang.reflect.ParameterizedType parameterize(java.lang.Class,java.util.Map) -> parameterize
    java.lang.reflect.ParameterizedType parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[]) -> parameterizeWithOwner
    java.lang.reflect.ParameterizedType parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.util.Map) -> parameterizeWithOwner
    java.lang.reflect.Type[] extractTypeArgumentsFrom(java.util.Map,java.lang.reflect.TypeVariable[]) -> extractTypeArgumentsFrom
    org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder wildcardType() -> wildcardType
    java.lang.reflect.GenericArrayType genericArrayType(java.lang.reflect.Type) -> genericArrayType
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.ParameterizedType,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.GenericArrayType,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.WildcardType,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> equals
    java.lang.String toString(java.lang.reflect.Type) -> toString
    java.lang.String toLongString(java.lang.reflect.TypeVariable) -> toLongString
    org.apache.commons.lang3.reflect.Typed wrap(java.lang.reflect.Type) -> wrap
    org.apache.commons.lang3.reflect.Typed wrap(java.lang.Class) -> wrap
    java.lang.String classToString(java.lang.Class) -> classToString
    java.lang.String typeVariableToString(java.lang.reflect.TypeVariable) -> typeVariableToString
    java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType) -> parameterizedTypeToString
    java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType) -> wildcardTypeToString
    java.lang.String genericArrayTypeToString(java.lang.reflect.GenericArrayType) -> genericArrayTypeToString
    java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]) -> appendAllTo
    boolean access$100(java.lang.reflect.GenericArrayType,java.lang.reflect.Type) -> access$100
    boolean access$200(java.lang.reflect.ParameterizedType,java.lang.reflect.Type) -> access$200
    boolean access$300(java.lang.reflect.WildcardType,java.lang.reflect.Type) -> access$300
org.apache.commons.lang3.reflect.TypeUtils$1 -> org.apache.commons.lang3.reflect.b:
    java.lang.reflect.Type val$type -> a
    java.lang.reflect.Type getType() -> getType
org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl -> org.apache.commons.lang3.reflect.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl -> org.apache.commons.lang3.reflect.d:
    java.lang.Class raw -> a
    java.lang.reflect.Type useOwner -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder -> org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder:
    java.lang.reflect.Type[] upperBounds -> upperBounds
    java.lang.reflect.Type[] lowerBounds -> lowerBounds
    org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder withUpperBounds(java.lang.reflect.Type[]) -> withUpperBounds
    org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder withLowerBounds(java.lang.reflect.Type[]) -> withLowerBounds
    java.lang.reflect.WildcardType build() -> build
    java.lang.Object build() -> build
org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl -> org.apache.commons.lang3.reflect.e:
    java.lang.reflect.Type[] EMPTY_BOUNDS -> a
    java.lang.reflect.Type[] upperBounds -> b
    java.lang.reflect.Type[] lowerBounds -> c
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.reflect.Typed -> org.apache.commons.lang3.reflect.Typed:
    java.lang.reflect.Type getType() -> getType
org.apache.commons.lang3.text.CompositeFormat -> org.apache.commons.lang3.text.CompositeFormat:
    long serialVersionUID -> serialVersionUID
    java.text.Format parser -> parser
    java.text.Format formatter -> formatter
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.text.Format getParser() -> getParser
    java.text.Format getFormatter() -> getFormatter
    java.lang.String reformat(java.lang.String) -> reformat
org.apache.commons.lang3.text.ExtendedMessageFormat -> org.apache.commons.lang3.text.ExtendedMessageFormat:
    long serialVersionUID -> serialVersionUID
    int HASH_SEED -> HASH_SEED
    java.lang.String DUMMY_PATTERN -> DUMMY_PATTERN
    java.lang.String ESCAPED_QUOTE -> ESCAPED_QUOTE
    char START_FMT -> START_FMT
    char END_FE -> END_FE
    char START_FE -> START_FE
    char QUOTE -> QUOTE
    java.lang.String toPattern -> toPattern
    java.util.Map registry -> registry
    java.lang.String toPattern() -> toPattern
    void applyPattern(java.lang.String) -> applyPattern
    void setFormat(int,java.text.Format) -> setFormat
    void setFormatByArgumentIndex(int,java.text.Format) -> setFormatByArgumentIndex
    void setFormats(java.text.Format[]) -> setFormats
    void setFormatsByArgumentIndex(java.text.Format[]) -> setFormatsByArgumentIndex
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.text.Format getFormat(java.lang.String) -> getFormat
    int readArgumentIndex(java.lang.String,java.text.ParsePosition) -> readArgumentIndex
    java.lang.String parseFormatDescription(java.lang.String,java.text.ParsePosition) -> parseFormatDescription
    java.lang.String insertFormats(java.lang.String,java.util.ArrayList) -> insertFormats
    void seekNonWs(java.lang.String,java.text.ParsePosition) -> seekNonWs
    java.text.ParsePosition next(java.text.ParsePosition) -> next
    java.lang.StringBuilder appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder,boolean) -> appendQuotedString
    void getQuotedString(java.lang.String,java.text.ParsePosition,boolean) -> getQuotedString
    boolean containsElements(java.util.Collection) -> containsElements
org.apache.commons.lang3.text.FormatFactory -> org.apache.commons.lang3.text.FormatFactory:
    java.text.Format getFormat(java.lang.String,java.lang.String,java.util.Locale) -> getFormat
org.apache.commons.lang3.text.FormattableUtils -> org.apache.commons.lang3.text.FormattableUtils:
    java.lang.String SIMPLEST_FORMAT -> SIMPLEST_FORMAT
    java.lang.String toString(java.util.Formattable) -> toString
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int) -> append
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char) -> append
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence) -> append
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence) -> append
org.apache.commons.lang3.text.StrBuilder -> org.apache.commons.lang3.text.StrBuilder:
    int CAPACITY -> CAPACITY
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int size -> size
    java.lang.String newLine -> newLine
    java.lang.String nullText -> nullText
    java.lang.String getNewLineText() -> getNewLineText
    org.apache.commons.lang3.text.StrBuilder setNewLineText(java.lang.String) -> setNewLineText
    java.lang.String getNullText() -> getNullText
    org.apache.commons.lang3.text.StrBuilder setNullText(java.lang.String) -> setNullText
    int length() -> length
    org.apache.commons.lang3.text.StrBuilder setLength(int) -> setLength
    int capacity() -> capacity
    org.apache.commons.lang3.text.StrBuilder ensureCapacity(int) -> ensureCapacity
    org.apache.commons.lang3.text.StrBuilder minimizeCapacity() -> minimizeCapacity
    int size() -> size
    boolean isEmpty() -> isEmpty
    org.apache.commons.lang3.text.StrBuilder clear() -> clear
    char charAt(int) -> charAt
    org.apache.commons.lang3.text.StrBuilder setCharAt(int,char) -> setCharAt
    org.apache.commons.lang3.text.StrBuilder deleteCharAt(int) -> deleteCharAt
    char[] toCharArray() -> toCharArray
    char[] toCharArray(int,int) -> toCharArray
    char[] getChars(char[]) -> getChars
    void getChars(int,int,char[],int) -> getChars
    org.apache.commons.lang3.text.StrBuilder appendNewLine() -> appendNewLine
    org.apache.commons.lang3.text.StrBuilder appendNull() -> appendNull
    org.apache.commons.lang3.text.StrBuilder append(java.lang.Object) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.CharSequence) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.CharSequence,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.String) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.String,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.String,java.lang.Object[]) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuilder) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuilder,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(org.apache.commons.lang3.text.StrBuilder) -> append
    org.apache.commons.lang3.text.StrBuilder append(org.apache.commons.lang3.text.StrBuilder,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(char[]) -> append
    org.apache.commons.lang3.text.StrBuilder append(char[],int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(boolean) -> append
    org.apache.commons.lang3.text.StrBuilder append(char) -> append
    org.apache.commons.lang3.text.StrBuilder append(int) -> append
    org.apache.commons.lang3.text.StrBuilder append(long) -> append
    org.apache.commons.lang3.text.StrBuilder append(float) -> append
    org.apache.commons.lang3.text.StrBuilder append(double) -> append
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.Object) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String,java.lang.Object[]) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuffer) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuilder) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuilder,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuffer,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(org.apache.commons.lang3.text.StrBuilder) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(org.apache.commons.lang3.text.StrBuilder,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(char[]) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(char[],int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(boolean) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(char) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(long) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(float) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(double) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendAll(java.lang.Object[]) -> appendAll
    org.apache.commons.lang3.text.StrBuilder appendAll(java.lang.Iterable) -> appendAll
    org.apache.commons.lang3.text.StrBuilder appendAll(java.util.Iterator) -> appendAll
    org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Object[],java.lang.String) -> appendWithSeparators
    org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Iterable,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.util.Iterator,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String,java.lang.String) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(char) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(char,char) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String,int) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(char,int) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendPadding(int,char) -> appendPadding
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(java.lang.Object,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(int,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(java.lang.Object,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(int,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.Object) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.String) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,char[]) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,char[],int,int) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,boolean) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,char) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,int) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,long) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,float) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,double) -> insert
    void deleteImpl(int,int,int) -> deleteImpl
    org.apache.commons.lang3.text.StrBuilder delete(int,int) -> delete
    org.apache.commons.lang3.text.StrBuilder deleteAll(char) -> deleteAll
    org.apache.commons.lang3.text.StrBuilder deleteFirst(char) -> deleteFirst
    org.apache.commons.lang3.text.StrBuilder deleteAll(java.lang.String) -> deleteAll
    org.apache.commons.lang3.text.StrBuilder deleteFirst(java.lang.String) -> deleteFirst
    org.apache.commons.lang3.text.StrBuilder deleteAll(org.apache.commons.lang3.text.StrMatcher) -> deleteAll
    org.apache.commons.lang3.text.StrBuilder deleteFirst(org.apache.commons.lang3.text.StrMatcher) -> deleteFirst
    void replaceImpl(int,int,int,java.lang.String,int) -> replaceImpl
    org.apache.commons.lang3.text.StrBuilder replace(int,int,java.lang.String) -> replace
    org.apache.commons.lang3.text.StrBuilder replaceAll(char,char) -> replaceAll
    org.apache.commons.lang3.text.StrBuilder replaceFirst(char,char) -> replaceFirst
    org.apache.commons.lang3.text.StrBuilder replaceAll(java.lang.String,java.lang.String) -> replaceAll
    org.apache.commons.lang3.text.StrBuilder replaceFirst(java.lang.String,java.lang.String) -> replaceFirst
    org.apache.commons.lang3.text.StrBuilder replaceAll(org.apache.commons.lang3.text.StrMatcher,java.lang.String) -> replaceAll
    org.apache.commons.lang3.text.StrBuilder replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String) -> replaceFirst
    org.apache.commons.lang3.text.StrBuilder replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int) -> replace
    org.apache.commons.lang3.text.StrBuilder replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int) -> replaceImpl
    org.apache.commons.lang3.text.StrBuilder reverse() -> reverse
    org.apache.commons.lang3.text.StrBuilder trim() -> trim
    boolean startsWith(java.lang.String) -> startsWith
    boolean endsWith(java.lang.String) -> endsWith
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String leftString(int) -> leftString
    java.lang.String rightString(int) -> rightString
    java.lang.String midString(int,int) -> midString
    boolean contains(char) -> contains
    boolean contains(java.lang.String) -> contains
    boolean contains(org.apache.commons.lang3.text.StrMatcher) -> contains
    int indexOf(char) -> indexOf
    int indexOf(char,int) -> indexOf
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int indexOf(org.apache.commons.lang3.text.StrMatcher) -> indexOf
    int indexOf(org.apache.commons.lang3.text.StrMatcher,int) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    int lastIndexOf(char,int) -> lastIndexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang3.text.StrMatcher) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int) -> lastIndexOf
    org.apache.commons.lang3.text.StrTokenizer asTokenizer() -> asTokenizer
    java.io.Reader asReader() -> asReader
    java.io.Writer asWriter() -> asWriter
    boolean equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder) -> equalsIgnoreCase
    boolean equals(org.apache.commons.lang3.text.StrBuilder) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.StringBuffer toStringBuffer() -> toStringBuffer
    java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    java.lang.String build() -> build
    int validateRange(int,int) -> validateRange
    void validateIndex(int) -> validateIndex
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Object build() -> build
org.apache.commons.lang3.text.StrBuilder$StrBuilderReader -> org.apache.commons.lang3.text.a:
    int pos -> b
    int mark -> c
    org.apache.commons.lang3.text.StrBuilder this$0 -> a
    void close() -> close
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer -> org.apache.commons.lang3.text.b:
    org.apache.commons.lang3.text.StrBuilder this$0 -> a
    java.util.List tokenize(char[],int,int) -> tokenize
    java.lang.String getContent() -> getContent
org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter -> org.apache.commons.lang3.text.c:
    org.apache.commons.lang3.text.StrBuilder this$0 -> a
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
org.apache.commons.lang3.text.StrLookup -> org.apache.commons.lang3.text.StrLookup:
    org.apache.commons.lang3.text.StrLookup NONE_LOOKUP -> NONE_LOOKUP
    org.apache.commons.lang3.text.StrLookup SYSTEM_PROPERTIES_LOOKUP -> SYSTEM_PROPERTIES_LOOKUP
    org.apache.commons.lang3.text.StrLookup noneLookup() -> noneLookup
    org.apache.commons.lang3.text.StrLookup systemPropertiesLookup() -> systemPropertiesLookup
    org.apache.commons.lang3.text.StrLookup mapLookup(java.util.Map) -> mapLookup
    java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang3.text.StrLookup$MapStrLookup -> org.apache.commons.lang3.text.d:
    java.util.Map map -> a
    java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang3.text.StrMatcher -> org.apache.commons.lang3.text.StrMatcher:
    org.apache.commons.lang3.text.StrMatcher COMMA_MATCHER -> COMMA_MATCHER
    org.apache.commons.lang3.text.StrMatcher TAB_MATCHER -> TAB_MATCHER
    org.apache.commons.lang3.text.StrMatcher SPACE_MATCHER -> SPACE_MATCHER
    org.apache.commons.lang3.text.StrMatcher SPLIT_MATCHER -> SPLIT_MATCHER
    org.apache.commons.lang3.text.StrMatcher TRIM_MATCHER -> TRIM_MATCHER
    org.apache.commons.lang3.text.StrMatcher SINGLE_QUOTE_MATCHER -> SINGLE_QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher DOUBLE_QUOTE_MATCHER -> DOUBLE_QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher QUOTE_MATCHER -> QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher NONE_MATCHER -> NONE_MATCHER
    org.apache.commons.lang3.text.StrMatcher commaMatcher() -> commaMatcher
    org.apache.commons.lang3.text.StrMatcher tabMatcher() -> tabMatcher
    org.apache.commons.lang3.text.StrMatcher spaceMatcher() -> spaceMatcher
    org.apache.commons.lang3.text.StrMatcher splitMatcher() -> splitMatcher
    org.apache.commons.lang3.text.StrMatcher trimMatcher() -> trimMatcher
    org.apache.commons.lang3.text.StrMatcher singleQuoteMatcher() -> singleQuoteMatcher
    org.apache.commons.lang3.text.StrMatcher doubleQuoteMatcher() -> doubleQuoteMatcher
    org.apache.commons.lang3.text.StrMatcher quoteMatcher() -> quoteMatcher
    org.apache.commons.lang3.text.StrMatcher noneMatcher() -> noneMatcher
    org.apache.commons.lang3.text.StrMatcher charMatcher(char) -> charMatcher
    org.apache.commons.lang3.text.StrMatcher charSetMatcher(char[]) -> charSetMatcher
    org.apache.commons.lang3.text.StrMatcher charSetMatcher(java.lang.String) -> charSetMatcher
    org.apache.commons.lang3.text.StrMatcher stringMatcher(java.lang.String) -> stringMatcher
    int isMatch(char[],int,int,int) -> isMatch
    int isMatch(char[],int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$CharMatcher -> org.apache.commons.lang3.text.e:
    char ch -> a
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$CharSetMatcher -> org.apache.commons.lang3.text.f:
    char[] chars -> a
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$NoMatcher -> org.apache.commons.lang3.text.g:
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$StringMatcher -> org.apache.commons.lang3.text.h:
    char[] chars -> a
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$TrimMatcher -> org.apache.commons.lang3.text.i:
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrSubstitutor -> org.apache.commons.lang3.text.StrSubstitutor:
    char DEFAULT_ESCAPE -> DEFAULT_ESCAPE
    org.apache.commons.lang3.text.StrMatcher DEFAULT_PREFIX -> DEFAULT_PREFIX
    org.apache.commons.lang3.text.StrMatcher DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    org.apache.commons.lang3.text.StrMatcher DEFAULT_VALUE_DELIMITER -> DEFAULT_VALUE_DELIMITER
    char escapeChar -> escapeChar
    org.apache.commons.lang3.text.StrMatcher prefixMatcher -> prefixMatcher
    org.apache.commons.lang3.text.StrMatcher suffixMatcher -> suffixMatcher
    org.apache.commons.lang3.text.StrMatcher valueDelimiterMatcher -> valueDelimiterMatcher
    org.apache.commons.lang3.text.StrLookup variableResolver -> variableResolver
    boolean enableSubstitutionInVariables -> enableSubstitutionInVariables
    java.lang.String replace(java.lang.Object,java.util.Map) -> replace
    java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String) -> replace
    java.lang.String replace(java.lang.Object,java.util.Properties) -> replace
    java.lang.String replaceSystemProperties(java.lang.Object) -> replaceSystemProperties
    java.lang.String replace(java.lang.String) -> replace
    java.lang.String replace(java.lang.String,int,int) -> replace
    java.lang.String replace(char[]) -> replace
    java.lang.String replace(char[],int,int) -> replace
    java.lang.String replace(java.lang.StringBuffer) -> replace
    java.lang.String replace(java.lang.StringBuffer,int,int) -> replace
    java.lang.String replace(java.lang.CharSequence) -> replace
    java.lang.String replace(java.lang.CharSequence,int,int) -> replace
    java.lang.String replace(org.apache.commons.lang3.text.StrBuilder) -> replace
    java.lang.String replace(org.apache.commons.lang3.text.StrBuilder,int,int) -> replace
    java.lang.String replace(java.lang.Object) -> replace
    boolean replaceIn(java.lang.StringBuffer) -> replaceIn
    boolean replaceIn(java.lang.StringBuffer,int,int) -> replaceIn
    boolean replaceIn(java.lang.StringBuilder) -> replaceIn
    boolean replaceIn(java.lang.StringBuilder,int,int) -> replaceIn
    boolean replaceIn(org.apache.commons.lang3.text.StrBuilder) -> replaceIn
    boolean replaceIn(org.apache.commons.lang3.text.StrBuilder,int,int) -> replaceIn
    boolean substitute(org.apache.commons.lang3.text.StrBuilder,int,int) -> substitute
    int substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List) -> substitute
    void checkCyclicSubstitution(java.lang.String,java.util.List) -> checkCyclicSubstitution
    java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang3.text.StrBuilder,int,int) -> resolveVariable
    char getEscapeChar() -> getEscapeChar
    void setEscapeChar(char) -> setEscapeChar
    org.apache.commons.lang3.text.StrMatcher getVariablePrefixMatcher() -> getVariablePrefixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher) -> setVariablePrefixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(char) -> setVariablePrefix
    org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(java.lang.String) -> setVariablePrefix
    org.apache.commons.lang3.text.StrMatcher getVariableSuffixMatcher() -> getVariableSuffixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher) -> setVariableSuffixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(char) -> setVariableSuffix
    org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(java.lang.String) -> setVariableSuffix
    org.apache.commons.lang3.text.StrMatcher getValueDelimiterMatcher() -> getValueDelimiterMatcher
    org.apache.commons.lang3.text.StrSubstitutor setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher) -> setValueDelimiterMatcher
    org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(char) -> setValueDelimiter
    org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(java.lang.String) -> setValueDelimiter
    org.apache.commons.lang3.text.StrLookup getVariableResolver() -> getVariableResolver
    void setVariableResolver(org.apache.commons.lang3.text.StrLookup) -> setVariableResolver
    boolean isEnableSubstitutionInVariables() -> isEnableSubstitutionInVariables
    void setEnableSubstitutionInVariables(boolean) -> setEnableSubstitutionInVariables
org.apache.commons.lang3.text.StrTokenizer -> org.apache.commons.lang3.text.StrTokenizer:
    org.apache.commons.lang3.text.StrTokenizer CSV_TOKENIZER_PROTOTYPE -> CSV_TOKENIZER_PROTOTYPE
    org.apache.commons.lang3.text.StrTokenizer TSV_TOKENIZER_PROTOTYPE -> TSV_TOKENIZER_PROTOTYPE
    char[] chars -> chars
    java.lang.String[] tokens -> tokens
    int tokenPos -> tokenPos
    org.apache.commons.lang3.text.StrMatcher delimMatcher -> delimMatcher
    org.apache.commons.lang3.text.StrMatcher quoteMatcher -> quoteMatcher
    org.apache.commons.lang3.text.StrMatcher ignoredMatcher -> ignoredMatcher
    org.apache.commons.lang3.text.StrMatcher trimmerMatcher -> trimmerMatcher
    boolean emptyAsNull -> emptyAsNull
    boolean ignoreEmptyTokens -> ignoreEmptyTokens
    org.apache.commons.lang3.text.StrTokenizer getCSVClone() -> getCSVClone
    org.apache.commons.lang3.text.StrTokenizer getCSVInstance() -> getCSVInstance
    org.apache.commons.lang3.text.StrTokenizer getCSVInstance(java.lang.String) -> getCSVInstance
    org.apache.commons.lang3.text.StrTokenizer getCSVInstance(char[]) -> getCSVInstance
    org.apache.commons.lang3.text.StrTokenizer getTSVClone() -> getTSVClone
    org.apache.commons.lang3.text.StrTokenizer getTSVInstance() -> getTSVInstance
    org.apache.commons.lang3.text.StrTokenizer getTSVInstance(java.lang.String) -> getTSVInstance
    org.apache.commons.lang3.text.StrTokenizer getTSVInstance(char[]) -> getTSVInstance
    int size() -> size
    java.lang.String nextToken() -> nextToken
    java.lang.String previousToken() -> previousToken
    java.lang.String[] getTokenArray() -> getTokenArray
    java.util.List getTokenList() -> getTokenList
    org.apache.commons.lang3.text.StrTokenizer reset() -> reset
    org.apache.commons.lang3.text.StrTokenizer reset(java.lang.String) -> reset
    org.apache.commons.lang3.text.StrTokenizer reset(char[]) -> reset
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
    int nextIndex() -> nextIndex
    boolean hasPrevious() -> hasPrevious
    java.lang.String previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.String) -> set
    void add(java.lang.String) -> add
    void checkTokenized() -> checkTokenized
    java.util.List tokenize(char[],int,int) -> tokenize
    void addToken(java.util.List,java.lang.String) -> addToken
    int readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List) -> readNextToken
    int readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int) -> readWithQuotes
    boolean isQuote(char[],int,int,int,int) -> isQuote
    org.apache.commons.lang3.text.StrMatcher getDelimiterMatcher() -> getDelimiterMatcher
    org.apache.commons.lang3.text.StrTokenizer setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher) -> setDelimiterMatcher
    org.apache.commons.lang3.text.StrTokenizer setDelimiterChar(char) -> setDelimiterChar
    org.apache.commons.lang3.text.StrTokenizer setDelimiterString(java.lang.String) -> setDelimiterString
    org.apache.commons.lang3.text.StrMatcher getQuoteMatcher() -> getQuoteMatcher
    org.apache.commons.lang3.text.StrTokenizer setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher) -> setQuoteMatcher
    org.apache.commons.lang3.text.StrTokenizer setQuoteChar(char) -> setQuoteChar
    org.apache.commons.lang3.text.StrMatcher getIgnoredMatcher() -> getIgnoredMatcher
    org.apache.commons.lang3.text.StrTokenizer setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher) -> setIgnoredMatcher
    org.apache.commons.lang3.text.StrTokenizer setIgnoredChar(char) -> setIgnoredChar
    org.apache.commons.lang3.text.StrMatcher getTrimmerMatcher() -> getTrimmerMatcher
    org.apache.commons.lang3.text.StrTokenizer setTrimmerMatcher(org.apache.commons.lang3.text.StrMatcher) -> setTrimmerMatcher
    boolean isEmptyTokenAsNull() -> isEmptyTokenAsNull
    org.apache.commons.lang3.text.StrTokenizer setEmptyTokenAsNull(boolean) -> setEmptyTokenAsNull
    boolean isIgnoreEmptyTokens() -> isIgnoreEmptyTokens
    org.apache.commons.lang3.text.StrTokenizer setIgnoreEmptyTokens(boolean) -> setIgnoreEmptyTokens
    java.lang.String getContent() -> getContent
    java.lang.Object clone() -> clone
    java.lang.Object cloneReset() -> cloneReset
    java.lang.String toString() -> toString
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
org.apache.commons.lang3.text.WordUtils -> org.apache.commons.lang3.text.WordUtils:
    java.lang.String wrap(java.lang.String,int) -> wrap
    java.lang.String wrap(java.lang.String,int,java.lang.String,boolean) -> wrap
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String capitalize(java.lang.String,char[]) -> capitalize
    java.lang.String capitalizeFully(java.lang.String) -> capitalizeFully
    java.lang.String capitalizeFully(java.lang.String,char[]) -> capitalizeFully
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String uncapitalize(java.lang.String,char[]) -> uncapitalize
    java.lang.String swapCase(java.lang.String) -> swapCase
    java.lang.String initials(java.lang.String) -> initials
    java.lang.String initials(java.lang.String,char[]) -> initials
    boolean isDelimiter(char,char[]) -> isDelimiter
org.apache.commons.lang3.text.translate.AggregateTranslator -> org.apache.commons.lang3.text.translate.AggregateTranslator:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator[] translators -> translators
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.CharSequenceTranslator -> org.apache.commons.lang3.text.translate.CharSequenceTranslator:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    java.lang.String translate(java.lang.CharSequence) -> translate
    void translate(java.lang.CharSequence,java.io.Writer) -> translate
    org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> with
    java.lang.String hex(int) -> hex
org.apache.commons.lang3.text.translate.CodePointTranslator -> org.apache.commons.lang3.text.translate.CodePointTranslator:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.EntityArrays -> org.apache.commons.lang3.text.translate.EntityArrays:
    java.lang.String[][] ISO8859_1_ESCAPE -> ISO8859_1_ESCAPE
    java.lang.String[][] ISO8859_1_UNESCAPE -> ISO8859_1_UNESCAPE
    java.lang.String[][] HTML40_EXTENDED_ESCAPE -> HTML40_EXTENDED_ESCAPE
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE -> HTML40_EXTENDED_UNESCAPE
    java.lang.String[][] BASIC_ESCAPE -> BASIC_ESCAPE
    java.lang.String[][] BASIC_UNESCAPE -> BASIC_UNESCAPE
    java.lang.String[][] APOS_ESCAPE -> APOS_ESCAPE
    java.lang.String[][] APOS_UNESCAPE -> APOS_UNESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE -> JAVA_CTRL_CHARS_ESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE -> JAVA_CTRL_CHARS_UNESCAPE
    java.lang.String[][] ISO8859_1_ESCAPE() -> ISO8859_1_ESCAPE
    java.lang.String[][] ISO8859_1_UNESCAPE() -> ISO8859_1_UNESCAPE
    java.lang.String[][] HTML40_EXTENDED_ESCAPE() -> HTML40_EXTENDED_ESCAPE
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE() -> HTML40_EXTENDED_UNESCAPE
    java.lang.String[][] BASIC_ESCAPE() -> BASIC_ESCAPE
    java.lang.String[][] BASIC_UNESCAPE() -> BASIC_UNESCAPE
    java.lang.String[][] APOS_ESCAPE() -> APOS_ESCAPE
    java.lang.String[][] APOS_UNESCAPE() -> APOS_UNESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE() -> JAVA_CTRL_CHARS_ESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE() -> JAVA_CTRL_CHARS_UNESCAPE
    java.lang.String[][] invert(java.lang.String[][]) -> invert
org.apache.commons.lang3.text.translate.JavaUnicodeEscaper -> org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper above(int) -> above
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(int) -> below
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper between(int,int) -> between
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper outsideOf(int,int) -> outsideOf
    java.lang.String toUtf16Escape(int) -> toUtf16Escape
org.apache.commons.lang3.text.translate.LookupTranslator -> org.apache.commons.lang3.text.translate.LookupTranslator:
    java.util.HashMap lookupMap -> lookupMap
    int shortest -> shortest
    int longest -> longest
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityEscaper -> org.apache.commons.lang3.text.translate.NumericEntityEscaper:
    int below -> below
    int above -> above
    boolean between -> between
    org.apache.commons.lang3.text.translate.NumericEntityEscaper below(int) -> below
    org.apache.commons.lang3.text.translate.NumericEntityEscaper above(int) -> above
    org.apache.commons.lang3.text.translate.NumericEntityEscaper between(int,int) -> between
    org.apache.commons.lang3.text.translate.NumericEntityEscaper outsideOf(int,int) -> outsideOf
    boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityUnescaper -> org.apache.commons.lang3.text.translate.NumericEntityUnescaper:
    java.util.EnumSet options -> options
    boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION) -> isSet
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION -> org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION:
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired -> semiColonRequired
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonOptional -> semiColonOptional
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon -> errorIfNoSemiColon
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] $VALUES -> $VALUES
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values() -> values
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.text.translate.OctalUnescaper -> org.apache.commons.lang3.text.translate.OctalUnescaper:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    boolean isOctalDigit(char) -> isOctalDigit
    boolean isZeroToThree(char) -> isZeroToThree
org.apache.commons.lang3.text.translate.UnicodeEscaper -> org.apache.commons.lang3.text.translate.UnicodeEscaper:
    int below -> below
    int above -> above
    boolean between -> between
    org.apache.commons.lang3.text.translate.UnicodeEscaper below(int) -> below
    org.apache.commons.lang3.text.translate.UnicodeEscaper above(int) -> above
    org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(int,int) -> outsideOf
    org.apache.commons.lang3.text.translate.UnicodeEscaper between(int,int) -> between
    boolean translate(int,java.io.Writer) -> translate
    java.lang.String toUtf16Escape(int) -> toUtf16Escape
org.apache.commons.lang3.text.translate.UnicodeUnescaper -> org.apache.commons.lang3.text.translate.UnicodeUnescaper:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.time.DateFormatUtils -> org.apache.commons.lang3.time.DateFormatUtils:
    java.util.TimeZone UTC_TIME_ZONE -> UTC_TIME_ZONE
    org.apache.commons.lang3.time.FastDateFormat ISO_DATETIME_FORMAT -> ISO_DATETIME_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT -> ISO_DATETIME_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATE_FORMAT -> ISO_DATE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATE_TIME_ZONE_FORMAT -> ISO_DATE_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_FORMAT -> ISO_TIME_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_TIME_ZONE_FORMAT -> ISO_TIME_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_NO_T_FORMAT -> ISO_TIME_NO_T_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT -> ISO_TIME_NO_T_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat SMTP_DATETIME_FORMAT -> SMTP_DATETIME_FORMAT
    java.lang.String formatUTC(long,java.lang.String) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String) -> formatUTC
    java.lang.String formatUTC(long,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String format(long,java.lang.String) -> format
    java.lang.String format(java.util.Date,java.lang.String) -> format
    java.lang.String format(java.util.Calendar,java.lang.String) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(long,java.lang.String,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.Locale) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.Locale) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
org.apache.commons.lang3.time.DateParser -> org.apache.commons.lang3.time.DateParser:
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    java.lang.Object parseObject(java.lang.String) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
org.apache.commons.lang3.time.DatePrinter -> org.apache.commons.lang3.time.DatePrinter:
    java.lang.String format(long) -> format
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
org.apache.commons.lang3.time.DateUtils -> org.apache.commons.lang3.time.DateUtils:
    long MILLIS_PER_SECOND -> MILLIS_PER_SECOND
    long MILLIS_PER_MINUTE -> MILLIS_PER_MINUTE
    long MILLIS_PER_HOUR -> MILLIS_PER_HOUR
    long MILLIS_PER_DAY -> MILLIS_PER_DAY
    int SEMI_MONTH -> SEMI_MONTH
    int[][] fields -> fields
    int RANGE_WEEK_SUNDAY -> RANGE_WEEK_SUNDAY
    int RANGE_WEEK_MONDAY -> RANGE_WEEK_MONDAY
    int RANGE_WEEK_RELATIVE -> RANGE_WEEK_RELATIVE
    int RANGE_WEEK_CENTER -> RANGE_WEEK_CENTER
    int RANGE_MONTH_SUNDAY -> RANGE_MONTH_SUNDAY
    int RANGE_MONTH_MONDAY -> RANGE_MONTH_MONDAY
    int MODIFY_TRUNCATE -> MODIFY_TRUNCATE
    int MODIFY_ROUND -> MODIFY_ROUND
    int MODIFY_CEILING -> MODIFY_CEILING
    boolean isSameDay(java.util.Date,java.util.Date) -> isSameDay
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> isSameDay
    boolean isSameInstant(java.util.Date,java.util.Date) -> isSameInstant
    boolean isSameInstant(java.util.Calendar,java.util.Calendar) -> isSameInstant
    boolean isSameLocalTime(java.util.Calendar,java.util.Calendar) -> isSameLocalTime
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Locale,java.lang.String[]) -> parseDate
    java.util.Date parseDateStrictly(java.lang.String,java.lang.String[]) -> parseDateStrictly
    java.util.Date parseDateStrictly(java.lang.String,java.util.Locale,java.lang.String[]) -> parseDateStrictly
    java.util.Date parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean) -> parseDateWithLeniency
    java.util.Date addYears(java.util.Date,int) -> addYears
    java.util.Date addMonths(java.util.Date,int) -> addMonths
    java.util.Date addWeeks(java.util.Date,int) -> addWeeks
    java.util.Date addDays(java.util.Date,int) -> addDays
    java.util.Date addHours(java.util.Date,int) -> addHours
    java.util.Date addMinutes(java.util.Date,int) -> addMinutes
    java.util.Date addSeconds(java.util.Date,int) -> addSeconds
    java.util.Date addMilliseconds(java.util.Date,int) -> addMilliseconds
    java.util.Date add(java.util.Date,int,int) -> add
    java.util.Date setYears(java.util.Date,int) -> setYears
    java.util.Date setMonths(java.util.Date,int) -> setMonths
    java.util.Date setDays(java.util.Date,int) -> setDays
    java.util.Date setHours(java.util.Date,int) -> setHours
    java.util.Date setMinutes(java.util.Date,int) -> setMinutes
    java.util.Date setSeconds(java.util.Date,int) -> setSeconds
    java.util.Date setMilliseconds(java.util.Date,int) -> setMilliseconds
    java.util.Date set(java.util.Date,int,int) -> set
    java.util.Calendar toCalendar(java.util.Date) -> toCalendar
    java.util.Date round(java.util.Date,int) -> round
    java.util.Calendar round(java.util.Calendar,int) -> round
    java.util.Date round(java.lang.Object,int) -> round
    java.util.Date truncate(java.util.Date,int) -> truncate
    java.util.Calendar truncate(java.util.Calendar,int) -> truncate
    java.util.Date truncate(java.lang.Object,int) -> truncate
    java.util.Date ceiling(java.util.Date,int) -> ceiling
    java.util.Calendar ceiling(java.util.Calendar,int) -> ceiling
    java.util.Date ceiling(java.lang.Object,int) -> ceiling
    void modify(java.util.Calendar,int,int) -> modify
    java.util.Iterator iterator(java.util.Date,int) -> iterator
    java.util.Iterator iterator(java.util.Calendar,int) -> iterator
    java.util.Iterator iterator(java.lang.Object,int) -> iterator
    long getFragmentInMilliseconds(java.util.Date,int) -> getFragmentInMilliseconds
    long getFragmentInSeconds(java.util.Date,int) -> getFragmentInSeconds
    long getFragmentInMinutes(java.util.Date,int) -> getFragmentInMinutes
    long getFragmentInHours(java.util.Date,int) -> getFragmentInHours
    long getFragmentInDays(java.util.Date,int) -> getFragmentInDays
    long getFragmentInMilliseconds(java.util.Calendar,int) -> getFragmentInMilliseconds
    long getFragmentInSeconds(java.util.Calendar,int) -> getFragmentInSeconds
    long getFragmentInMinutes(java.util.Calendar,int) -> getFragmentInMinutes
    long getFragmentInHours(java.util.Calendar,int) -> getFragmentInHours
    long getFragmentInDays(java.util.Calendar,int) -> getFragmentInDays
    long getFragment(java.util.Date,int,int) -> getFragment
    long getFragment(java.util.Calendar,int,int) -> getFragment
    boolean truncatedEquals(java.util.Calendar,java.util.Calendar,int) -> truncatedEquals
    boolean truncatedEquals(java.util.Date,java.util.Date,int) -> truncatedEquals
    int truncatedCompareTo(java.util.Calendar,java.util.Calendar,int) -> truncatedCompareTo
    int truncatedCompareTo(java.util.Date,java.util.Date,int) -> truncatedCompareTo
    long getMillisPerUnit(int) -> getMillisPerUnit
org.apache.commons.lang3.time.DateUtils$DateIterator -> org.apache.commons.lang3.time.a:
    java.util.Calendar endFinal -> a
    java.util.Calendar spot -> b
    boolean hasNext() -> hasNext
    java.util.Calendar next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.time.DurationFormatUtils -> org.apache.commons.lang3.time.DurationFormatUtils:
    java.lang.String ISO_EXTENDED_FORMAT_PATTERN -> ISO_EXTENDED_FORMAT_PATTERN
    java.lang.Object y -> y
    java.lang.Object M -> M
    java.lang.Object d -> d
    java.lang.Object H -> H
    java.lang.Object m -> m
    java.lang.Object s -> s
    java.lang.Object S -> S
    java.lang.String formatDurationHMS(long) -> formatDurationHMS
    java.lang.String formatDurationISO(long) -> formatDurationISO
    java.lang.String formatDuration(long,java.lang.String) -> formatDuration
    java.lang.String formatDuration(long,java.lang.String,boolean) -> formatDuration
    java.lang.String formatDurationWords(long,boolean,boolean) -> formatDurationWords
    java.lang.String formatPeriodISO(long,long) -> formatPeriodISO
    java.lang.String formatPeriod(long,long,java.lang.String) -> formatPeriod
    java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone) -> formatPeriod
    java.lang.String format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],int,int,int,int,int,int,int,boolean) -> format
    org.apache.commons.lang3.time.DurationFormatUtils$Token[] lexx(java.lang.String) -> lexx
org.apache.commons.lang3.time.DurationFormatUtils$Token -> org.apache.commons.lang3.time.b:
    java.lang.Object value -> a
    int count -> b
    boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object) -> a
    void increment() -> a
    int getCount() -> b
    java.lang.Object getValue() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang3.time.FastDateFormat -> org.apache.commons.lang3.time.FastDateFormat:
    long serialVersionUID -> serialVersionUID
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    org.apache.commons.lang3.time.FormatCache cache -> cache
    org.apache.commons.lang3.time.FastDatePrinter printer -> printer
    org.apache.commons.lang3.time.FastDateParser parser -> parser
    org.apache.commons.lang3.time.FastDateFormat getInstance() -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.Locale) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.Locale) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.TimeZone) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.TimeZone,java.util.Locale) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.TimeZone) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.TimeZone,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int) -> getDateTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.Locale) -> getDateTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone) -> getDateTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.String format(long) -> format
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    int getMaxLengthEstimate() -> getMaxLengthEstimate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer) -> applyRules
org.apache.commons.lang3.time.FastDateFormat$1 -> org.apache.commons.lang3.time.c:
    org.apache.commons.lang3.time.FastDateFormat createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> a
    java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> b
org.apache.commons.lang3.time.FastDateParser -> org.apache.commons.lang3.time.FastDateParser:
    long serialVersionUID -> serialVersionUID
    java.util.Locale JAPANESE_IMPERIAL -> JAPANESE_IMPERIAL
    java.lang.String pattern -> pattern
    java.util.TimeZone timeZone -> timeZone
    java.util.Locale locale -> locale
    java.util.regex.Pattern parsePattern -> parsePattern
    org.apache.commons.lang3.time.FastDateParser$Strategy[] strategies -> strategies
    int thisYear -> thisYear
    java.lang.String currentFormatField -> currentFormatField
    org.apache.commons.lang3.time.FastDateParser$Strategy nextStrategy -> nextStrategy
    java.util.regex.Pattern formatPattern -> formatPattern
    java.util.concurrent.ConcurrentMap[] caches -> caches
    org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY -> ABBREVIATED_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY -> NUMBER_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy LITERAL_YEAR_STRATEGY -> LITERAL_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY -> WEEK_OF_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY -> WEEK_OF_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY -> DAY_OF_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY -> DAY_OF_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY -> DAY_OF_WEEK_IN_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY -> HOUR_OF_DAY_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MODULO_HOUR_OF_DAY_STRATEGY -> MODULO_HOUR_OF_DAY_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MODULO_HOUR_STRATEGY -> MODULO_HOUR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY -> HOUR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY -> MINUTE_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY -> SECOND_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY -> MILLISECOND_STRATEGY
    void init() -> init
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    java.util.regex.Pattern getParsePattern() -> getParsePattern
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object parseObject(java.lang.String) -> parseObject
    java.util.Date parse(java.lang.String) -> parse
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.StringBuilder escapeRegex(java.lang.StringBuilder,java.lang.String,boolean) -> escapeRegex
    java.util.Map getDisplayNames(int,java.util.Calendar,java.util.Locale) -> getDisplayNames
    int adjustYear(int) -> adjustYear
    boolean isNextNumber() -> isNextNumber
    int getFieldWidth() -> getFieldWidth
    org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(java.lang.String,java.util.Calendar) -> getStrategy
    java.util.concurrent.ConcurrentMap getCache(int) -> getCache
    org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar) -> getLocaleSpecificStrategy
    java.lang.StringBuilder access$100(java.lang.StringBuilder,java.lang.String,boolean) -> access$100
    java.util.Map access$200(int,java.util.Calendar,java.util.Locale) -> access$200
org.apache.commons.lang3.time.FastDateParser$1 -> org.apache.commons.lang3.time.d:
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> a
org.apache.commons.lang3.time.FastDateParser$2 -> org.apache.commons.lang3.time.e:
    int modify(int) -> a
org.apache.commons.lang3.time.FastDateParser$3 -> org.apache.commons.lang3.time.f:
    int modify(int) -> a
org.apache.commons.lang3.time.FastDateParser$4 -> org.apache.commons.lang3.time.g:
    int modify(int) -> a
org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy -> org.apache.commons.lang3.time.h:
    java.lang.String formatField -> a
    boolean isNumber() -> a
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> a
org.apache.commons.lang3.time.FastDateParser$NumberStrategy -> org.apache.commons.lang3.time.i:
    int field -> a
    boolean isNumber() -> a
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> a
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> a
    int modify(int) -> a
org.apache.commons.lang3.time.FastDateParser$Strategy -> org.apache.commons.lang3.time.j:
    boolean isNumber() -> a
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> a
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> a
org.apache.commons.lang3.time.FastDateParser$TextStrategy -> org.apache.commons.lang3.time.k:
    int field -> a
    java.util.Map keyValues -> b
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> a
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> a
org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy -> org.apache.commons.lang3.time.l:
    java.lang.String validTimeZoneChars -> a
    java.util.SortedMap tzNames -> b
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> a
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> a
org.apache.commons.lang3.time.FastDatePrinter -> org.apache.commons.lang3.time.FastDatePrinter:
    long serialVersionUID -> serialVersionUID
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    java.lang.String mPattern -> mPattern
    java.util.TimeZone mTimeZone -> mTimeZone
    java.util.Locale mLocale -> mLocale
    org.apache.commons.lang3.time.FastDatePrinter$Rule[] mRules -> mRules
    int mMaxLengthEstimate -> mMaxLengthEstimate
    java.util.concurrent.ConcurrentMap cTimeZoneDisplayCache -> cTimeZoneDisplayCache
    void init() -> init
    java.util.List parsePattern() -> parsePattern
    java.lang.String parseToken(java.lang.String,int[]) -> parseToken
    org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int) -> selectNumberRule
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.String format(long) -> format
    java.lang.String applyRulesToString(java.util.Calendar) -> applyRulesToString
    java.util.GregorianCalendar newCalendar() -> newCalendar
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer) -> applyRules
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    int getMaxLengthEstimate() -> getMaxLengthEstimate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale) -> getTimeZoneDisplay
org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral -> org.apache.commons.lang3.time.m:
    char mValue -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
org.apache.commons.lang3.time.FastDatePrinter$NumberRule -> org.apache.commons.lang3.time.n:
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField -> org.apache.commons.lang3.time.o:
    int mField -> a
    int mSize -> b
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$Rule -> org.apache.commons.lang3.time.p:
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
org.apache.commons.lang3.time.FastDatePrinter$StringLiteral -> org.apache.commons.lang3.time.q:
    java.lang.String mValue -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
org.apache.commons.lang3.time.FastDatePrinter$TextField -> org.apache.commons.lang3.time.r:
    int mField -> a
    java.lang.String[] mValues -> b
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey -> org.apache.commons.lang3.time.s:
    java.util.TimeZone mTimeZone -> a
    int mStyle -> b
    java.util.Locale mLocale -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule -> org.apache.commons.lang3.time.t:
    java.util.Locale mLocale -> a
    int mStyle -> b
    java.lang.String mStandard -> c
    java.lang.String mDaylight -> d
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule -> org.apache.commons.lang3.time.u:
    org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_COLON -> a
    org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_NO_COLON -> b
    boolean mColon -> c
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField -> org.apache.commons.lang3.time.v:
    org.apache.commons.lang3.time.FastDatePrinter$NumberRule mRule -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField -> org.apache.commons.lang3.time.w:
    org.apache.commons.lang3.time.FastDatePrinter$NumberRule mRule -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField -> org.apache.commons.lang3.time.x:
    org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField INSTANCE -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField -> org.apache.commons.lang3.time.y:
    int mField -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField -> org.apache.commons.lang3.time.z:
    org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField INSTANCE -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField -> org.apache.commons.lang3.time.aa:
    org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField INSTANCE -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField -> org.apache.commons.lang3.time.ab:
    int mField -> a
    int estimateLength() -> a
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> a
    void appendTo(java.lang.StringBuffer,int) -> a
org.apache.commons.lang3.time.FormatCache -> org.apache.commons.lang3.time.ac:
    java.util.concurrent.ConcurrentMap cInstanceCache -> a
    java.util.concurrent.ConcurrentMap cDateTimeInstanceCache -> b
    java.text.Format getInstance() -> a
    java.text.Format getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> c
    java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> b
    java.text.Format getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale) -> a
    java.text.Format getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale) -> a
    java.text.Format getDateInstance(int,java.util.TimeZone,java.util.Locale) -> a
    java.text.Format getTimeInstance(int,java.util.TimeZone,java.util.Locale) -> b
    java.lang.String getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale) -> a
org.apache.commons.lang3.time.FormatCache$MultipartKey -> org.apache.commons.lang3.time.ad:
    java.lang.Object[] keys -> a
    int hashCode -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.time.StopWatch -> org.apache.commons.lang3.time.StopWatch:
    long NANO_2_MILLIS -> NANO_2_MILLIS
    org.apache.commons.lang3.time.StopWatch$State runningState -> runningState
    org.apache.commons.lang3.time.StopWatch$SplitState splitState -> splitState
    long startTime -> startTime
    long startTimeMillis -> startTimeMillis
    long stopTime -> stopTime
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    void split() -> split
    void unsplit() -> unsplit
    void suspend() -> suspend
    void resume() -> resume
    long getTime() -> getTime
    long getNanoTime() -> getNanoTime
    long getSplitTime() -> getSplitTime
    long getSplitNanoTime() -> getSplitNanoTime
    long getStartTime() -> getStartTime
    java.lang.String toString() -> toString
    java.lang.String toSplitString() -> toSplitString
    boolean isStarted() -> isStarted
    boolean isSuspended() -> isSuspended
    boolean isStopped() -> isStopped
org.apache.commons.lang3.time.StopWatch$1 -> org.apache.commons.lang3.time.ae:
org.apache.commons.lang3.time.StopWatch$SplitState -> org.apache.commons.lang3.time.af:
    org.apache.commons.lang3.time.StopWatch$SplitState SPLIT -> a
    org.apache.commons.lang3.time.StopWatch$SplitState UNSPLIT -> b
    org.apache.commons.lang3.time.StopWatch$SplitState[] $VALUES -> c
    org.apache.commons.lang3.time.StopWatch$SplitState[] values() -> values
    org.apache.commons.lang3.time.StopWatch$SplitState valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.time.StopWatch$State -> org.apache.commons.lang3.time.ag:
    org.apache.commons.lang3.time.StopWatch$State UNSTARTED -> a
    org.apache.commons.lang3.time.StopWatch$State RUNNING -> b
    org.apache.commons.lang3.time.StopWatch$State STOPPED -> c
    org.apache.commons.lang3.time.StopWatch$State SUSPENDED -> d
    org.apache.commons.lang3.time.StopWatch$State[] $VALUES -> e
    org.apache.commons.lang3.time.StopWatch$State[] values() -> values
    org.apache.commons.lang3.time.StopWatch$State valueOf(java.lang.String) -> valueOf
    boolean isStarted() -> a
    boolean isStopped() -> b
    boolean isSuspended() -> c
org.apache.commons.lang3.time.StopWatch$State$1 -> org.apache.commons.lang3.time.ah:
    boolean isStarted() -> a
    boolean isStopped() -> b
    boolean isSuspended() -> c
org.apache.commons.lang3.time.StopWatch$State$2 -> org.apache.commons.lang3.time.ai:
    boolean isStarted() -> a
    boolean isStopped() -> b
    boolean isSuspended() -> c
org.apache.commons.lang3.time.StopWatch$State$3 -> org.apache.commons.lang3.time.aj:
    boolean isStarted() -> a
    boolean isStopped() -> b
    boolean isSuspended() -> c
org.apache.commons.lang3.time.StopWatch$State$4 -> org.apache.commons.lang3.time.ak:
    boolean isStarted() -> a
    boolean isStopped() -> b
    boolean isSuspended() -> c
org.apache.commons.lang3.tuple.ImmutablePair -> org.apache.commons.lang3.tuple.ImmutablePair:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.ImmutablePair of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getRight() -> getRight
    java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.tuple.ImmutableTriple -> org.apache.commons.lang3.tuple.ImmutableTriple:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object middle -> middle
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.ImmutableTriple of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getMiddle() -> getMiddle
    java.lang.Object getRight() -> getRight
org.apache.commons.lang3.tuple.MutablePair -> org.apache.commons.lang3.tuple.MutablePair:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.MutablePair of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    void setLeft(java.lang.Object) -> setLeft
    java.lang.Object getRight() -> getRight
    void setRight(java.lang.Object) -> setRight
    java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.tuple.MutableTriple -> org.apache.commons.lang3.tuple.MutableTriple:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object middle -> middle
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.MutableTriple of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    void setLeft(java.lang.Object) -> setLeft
    java.lang.Object getMiddle() -> getMiddle
    void setMiddle(java.lang.Object) -> setMiddle
    java.lang.Object getRight() -> getRight
    void setRight(java.lang.Object) -> setRight
org.apache.commons.lang3.tuple.Pair -> org.apache.commons.lang3.tuple.Pair:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.tuple.Pair of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getRight() -> getRight
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    int compareTo(org.apache.commons.lang3.tuple.Pair) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.lang3.tuple.Triple -> org.apache.commons.lang3.tuple.Triple:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.tuple.Triple of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getMiddle() -> getMiddle
    java.lang.Object getRight() -> getRight
    int compareTo(org.apache.commons.lang3.tuple.Triple) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    int compareTo(java.lang.Object) -> compareTo
org.jsoup.Connection -> org.jsoup.Connection:
    org.jsoup.Connection url(java.net.URL) -> url
    org.jsoup.Connection url(java.lang.String) -> url
    org.jsoup.Connection userAgent(java.lang.String) -> userAgent
    org.jsoup.Connection timeout(int) -> timeout
    org.jsoup.Connection maxBodySize(int) -> maxBodySize
    org.jsoup.Connection referrer(java.lang.String) -> referrer
    org.jsoup.Connection followRedirects(boolean) -> followRedirects
    org.jsoup.Connection method(org.jsoup.Connection$Method) -> method
    org.jsoup.Connection ignoreHttpErrors(boolean) -> ignoreHttpErrors
    org.jsoup.Connection ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection data(java.lang.String,java.lang.String) -> data
    org.jsoup.Connection data(java.util.Map) -> data
    org.jsoup.Connection data(java.lang.String[]) -> data
    org.jsoup.Connection header(java.lang.String,java.lang.String) -> header
    org.jsoup.Connection cookie(java.lang.String,java.lang.String) -> cookie
    org.jsoup.Connection cookies(java.util.Map) -> cookies
    org.jsoup.Connection parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.nodes.Document get() -> get
    org.jsoup.nodes.Document post() -> post
    org.jsoup.Connection$Response execute() -> execute
    org.jsoup.Connection$Request request() -> request
    org.jsoup.Connection request(org.jsoup.Connection$Request) -> request
    org.jsoup.Connection$Response response() -> response
    org.jsoup.Connection response(org.jsoup.Connection$Response) -> response
org.jsoup.Connection$Base -> org.jsoup.Connection$Base:
    java.net.URL url() -> url
    org.jsoup.Connection$Base url(java.net.URL) -> url
    org.jsoup.Connection$Method method() -> method
    org.jsoup.Connection$Base method(org.jsoup.Connection$Method) -> method
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Base header(java.lang.String,java.lang.String) -> header
    boolean hasHeader(java.lang.String) -> hasHeader
    org.jsoup.Connection$Base removeHeader(java.lang.String) -> removeHeader
    java.util.Map headers() -> headers
    java.lang.String cookie(java.lang.String) -> cookie
    org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String) -> cookie
    boolean hasCookie(java.lang.String) -> hasCookie
    org.jsoup.Connection$Base removeCookie(java.lang.String) -> removeCookie
    java.util.Map cookies() -> cookies
org.jsoup.Connection$KeyVal -> org.jsoup.Connection$KeyVal:
    org.jsoup.Connection$KeyVal key(java.lang.String) -> key
    java.lang.String key() -> key
    org.jsoup.Connection$KeyVal value(java.lang.String) -> value
    java.lang.String value() -> value
org.jsoup.Connection$Method -> org.jsoup.Connection$Method:
    org.jsoup.Connection$Method GET -> GET
    org.jsoup.Connection$Method POST -> POST
    org.jsoup.Connection$Method[] $VALUES -> $VALUES
    org.jsoup.Connection$Method[] values() -> values
    org.jsoup.Connection$Method valueOf(java.lang.String) -> valueOf
org.jsoup.Connection$Request -> org.jsoup.Connection$Request:
    int timeout() -> timeout
    org.jsoup.Connection$Request timeout(int) -> timeout
    int maxBodySize() -> maxBodySize
    org.jsoup.Connection$Request maxBodySize(int) -> maxBodySize
    boolean followRedirects() -> followRedirects
    org.jsoup.Connection$Request followRedirects(boolean) -> followRedirects
    boolean ignoreHttpErrors() -> ignoreHttpErrors
    org.jsoup.Connection$Request ignoreHttpErrors(boolean) -> ignoreHttpErrors
    boolean ignoreContentType() -> ignoreContentType
    org.jsoup.Connection$Request ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal) -> data
    java.util.Collection data() -> data
    org.jsoup.Connection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.parser.Parser parser() -> parser
org.jsoup.Connection$Response -> org.jsoup.Connection$Response:
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    java.lang.String charset() -> charset
    java.lang.String contentType() -> contentType
    org.jsoup.nodes.Document parse() -> parse
    java.lang.String body() -> body
    byte[] bodyAsBytes() -> bodyAsBytes
org.jsoup.HttpStatusException -> org.jsoup.HttpStatusException:
    int statusCode -> statusCode
    java.lang.String url -> url
    int getStatusCode() -> getStatusCode
    java.lang.String getUrl() -> getUrl
    java.lang.String toString() -> toString
org.jsoup.Jsoup -> org.jsoup.Jsoup:
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> parse
    org.jsoup.nodes.Document parse(java.lang.String) -> parse
    org.jsoup.Connection connect(java.lang.String) -> connect
    org.jsoup.nodes.Document parse(java.io.File,java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.File,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.InputStream,java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> parse
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String) -> parseBodyFragment
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String) -> parseBodyFragment
    org.jsoup.nodes.Document parse(java.net.URL,int) -> parse
    java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist) -> clean
    java.lang.String clean(java.lang.String,org.jsoup.safety.Whitelist) -> clean
    java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist,org.jsoup.nodes.Document$OutputSettings) -> clean
    boolean isValid(java.lang.String,org.jsoup.safety.Whitelist) -> isValid
org.jsoup.UnsupportedMimeTypeException -> org.jsoup.UnsupportedMimeTypeException:
    java.lang.String mimeType -> mimeType
    java.lang.String url -> url
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getUrl() -> getUrl
    java.lang.String toString() -> toString
org.jsoup.examples.HtmlToPlainText -> org.jsoup.examples.HtmlToPlainText:
    void main(java.lang.String[]) -> main
    java.lang.String getPlainText(org.jsoup.nodes.Element) -> getPlainText
org.jsoup.examples.HtmlToPlainText$1 -> org.jsoup.examples.a:
org.jsoup.examples.HtmlToPlainText$FormattingVisitor -> org.jsoup.examples.b:
    int width -> b
    java.lang.StringBuilder accum -> c
    org.jsoup.examples.HtmlToPlainText this$0 -> a
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
    void append(java.lang.String) -> a
    java.lang.String toString() -> toString
org.jsoup.examples.ListLinks -> org.jsoup.examples.ListLinks:
    void main(java.lang.String[]) -> main
    void print(java.lang.String,java.lang.Object[]) -> print
    java.lang.String trim(java.lang.String,int) -> trim
org.jsoup.helper.DataUtil -> org.jsoup.helper.DataUtil:
    java.util.regex.Pattern charsetPattern -> charsetPattern
    java.lang.String defaultCharset -> defaultCharset
    int bufferSize -> bufferSize
    org.jsoup.nodes.Document load(java.io.File,java.lang.String,java.lang.String) -> load
    org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String) -> load
    org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> load
    org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> parseByteData
    java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int) -> readToByteBuffer
    java.nio.ByteBuffer readToByteBuffer(java.io.InputStream) -> readToByteBuffer
    java.lang.String getCharsetFromContentType(java.lang.String) -> getCharsetFromContentType
org.jsoup.helper.DescendableLinkedList -> org.jsoup.helper.DescendableLinkedList:
    void push(java.lang.Object) -> push
    java.lang.Object peekLast() -> peekLast
    java.lang.Object pollLast() -> pollLast
    java.util.Iterator descendingIterator() -> descendingIterator
org.jsoup.helper.DescendableLinkedList$1 -> org.jsoup.helper.a:
org.jsoup.helper.DescendableLinkedList$DescendingIterator -> org.jsoup.helper.b:
    java.util.ListIterator iter -> b
    org.jsoup.helper.DescendableLinkedList this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jsoup.helper.HttpConnection -> org.jsoup.helper.HttpConnection:
    org.jsoup.Connection$Request req -> req
    org.jsoup.Connection$Response res -> res
    org.jsoup.Connection connect(java.lang.String) -> connect
    org.jsoup.Connection connect(java.net.URL) -> connect
    org.jsoup.Connection url(java.net.URL) -> url
    org.jsoup.Connection url(java.lang.String) -> url
    org.jsoup.Connection userAgent(java.lang.String) -> userAgent
    org.jsoup.Connection timeout(int) -> timeout
    org.jsoup.Connection maxBodySize(int) -> maxBodySize
    org.jsoup.Connection followRedirects(boolean) -> followRedirects
    org.jsoup.Connection referrer(java.lang.String) -> referrer
    org.jsoup.Connection method(org.jsoup.Connection$Method) -> method
    org.jsoup.Connection ignoreHttpErrors(boolean) -> ignoreHttpErrors
    org.jsoup.Connection ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection data(java.lang.String,java.lang.String) -> data
    org.jsoup.Connection data(java.util.Map) -> data
    org.jsoup.Connection data(java.lang.String[]) -> data
    org.jsoup.Connection header(java.lang.String,java.lang.String) -> header
    org.jsoup.Connection cookie(java.lang.String,java.lang.String) -> cookie
    org.jsoup.Connection cookies(java.util.Map) -> cookies
    org.jsoup.Connection parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.nodes.Document get() -> get
    org.jsoup.nodes.Document post() -> post
    org.jsoup.Connection$Response execute() -> execute
    org.jsoup.Connection$Request request() -> request
    org.jsoup.Connection request(org.jsoup.Connection$Request) -> request
    org.jsoup.Connection$Response response() -> response
    org.jsoup.Connection response(org.jsoup.Connection$Response) -> response
org.jsoup.helper.HttpConnection$1 -> org.jsoup.helper.c:
org.jsoup.helper.HttpConnection$Base -> org.jsoup.helper.d:
    java.net.URL url -> url
    org.jsoup.Connection$Method method -> method
    java.util.Map headers -> headers
    java.util.Map cookies -> cookies
    java.net.URL url() -> url
    org.jsoup.Connection$Base url(java.net.URL) -> url
    org.jsoup.Connection$Method method() -> method
    org.jsoup.Connection$Base method(org.jsoup.Connection$Method) -> method
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Base header(java.lang.String,java.lang.String) -> header
    boolean hasHeader(java.lang.String) -> hasHeader
    org.jsoup.Connection$Base removeHeader(java.lang.String) -> removeHeader
    java.util.Map headers() -> headers
    java.lang.String getHeaderCaseInsensitive(java.lang.String) -> getHeaderCaseInsensitive
    java.util.Map$Entry scanHeaders(java.lang.String) -> scanHeaders
    java.lang.String cookie(java.lang.String) -> cookie
    org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String) -> cookie
    boolean hasCookie(java.lang.String) -> hasCookie
    org.jsoup.Connection$Base removeCookie(java.lang.String) -> removeCookie
    java.util.Map cookies() -> cookies
org.jsoup.helper.HttpConnection$KeyVal -> org.jsoup.helper.HttpConnection$KeyVal:
    java.lang.String key -> key
    java.lang.String value -> value
    org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String) -> create
    org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String) -> key
    java.lang.String key() -> key
    org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String) -> value
    java.lang.String value() -> value
    java.lang.String toString() -> toString
    org.jsoup.Connection$KeyVal value(java.lang.String) -> value
    org.jsoup.Connection$KeyVal key(java.lang.String) -> key
org.jsoup.helper.HttpConnection$Request -> org.jsoup.helper.HttpConnection$Request:
    int timeoutMilliseconds -> timeoutMilliseconds
    int maxBodySizeBytes -> maxBodySizeBytes
    boolean followRedirects -> followRedirects
    java.util.Collection data -> data
    boolean ignoreHttpErrors -> ignoreHttpErrors
    boolean ignoreContentType -> ignoreContentType
    org.jsoup.parser.Parser parser -> parser
    int timeout() -> timeout
    org.jsoup.helper.HttpConnection$Request timeout(int) -> timeout
    int maxBodySize() -> maxBodySize
    org.jsoup.Connection$Request maxBodySize(int) -> maxBodySize
    boolean followRedirects() -> followRedirects
    org.jsoup.Connection$Request followRedirects(boolean) -> followRedirects
    boolean ignoreHttpErrors() -> ignoreHttpErrors
    org.jsoup.Connection$Request ignoreHttpErrors(boolean) -> ignoreHttpErrors
    boolean ignoreContentType() -> ignoreContentType
    org.jsoup.Connection$Request ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal) -> data
    java.util.Collection data() -> data
    org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.parser.Parser parser() -> parser
    java.util.Map cookies() -> cookies
    boolean hasCookie(java.lang.String) -> hasCookie
    java.lang.String cookie(java.lang.String) -> cookie
    java.util.Map headers() -> headers
    boolean hasHeader(java.lang.String) -> hasHeader
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Method method() -> method
    java.net.URL url() -> url
    org.jsoup.Connection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal) -> data
    org.jsoup.Connection$Request timeout(int) -> timeout
org.jsoup.helper.HttpConnection$Response -> org.jsoup.helper.HttpConnection$Response:
    int MAX_REDIRECTS -> MAX_REDIRECTS
    int statusCode -> statusCode
    java.lang.String statusMessage -> statusMessage
    java.nio.ByteBuffer byteData -> byteData
    java.lang.String charset -> charset
    java.lang.String contentType -> contentType
    boolean executed -> executed
    int numRedirects -> numRedirects
    org.jsoup.Connection$Request req -> req
    org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request) -> execute
    org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response) -> execute
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    java.lang.String charset() -> charset
    java.lang.String contentType() -> contentType
    org.jsoup.nodes.Document parse() -> parse
    java.lang.String body() -> body
    byte[] bodyAsBytes() -> bodyAsBytes
    java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request) -> createConnection
    void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response) -> setupFromConnection
    void processResponseHeaders(java.util.Map) -> processResponseHeaders
    void writePost(java.util.Collection,java.io.OutputStream) -> writePost
    java.lang.String getRequestCookieString(org.jsoup.Connection$Request) -> getRequestCookieString
    void serialiseRequestUrl(org.jsoup.Connection$Request) -> serialiseRequestUrl
    java.util.Map cookies() -> cookies
    boolean hasCookie(java.lang.String) -> hasCookie
    java.lang.String cookie(java.lang.String) -> cookie
    java.util.Map headers() -> headers
    boolean hasHeader(java.lang.String) -> hasHeader
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Method method() -> method
    java.net.URL url() -> url
org.jsoup.helper.StringUtil -> org.jsoup.helper.StringUtil:
    java.lang.String[] padding -> padding
    java.lang.String join(java.util.Collection,java.lang.String) -> join
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    java.lang.String padding(int) -> padding
    boolean isBlank(java.lang.String) -> isBlank
    boolean isNumeric(java.lang.String) -> isNumeric
    boolean isWhitespace(int) -> isWhitespace
    java.lang.String normaliseWhitespace(java.lang.String) -> normaliseWhitespace
    boolean in(java.lang.String,java.lang.String[]) -> in
org.jsoup.helper.Validate -> org.jsoup.helper.Validate:
    void notNull(java.lang.Object) -> notNull
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void isTrue(boolean) -> isTrue
    void isTrue(boolean,java.lang.String) -> isTrue
    void isFalse(boolean) -> isFalse
    void isFalse(boolean,java.lang.String) -> isFalse
    void noNullElements(java.lang.Object[]) -> noNullElements
    void noNullElements(java.lang.Object[],java.lang.String) -> noNullElements
    void notEmpty(java.lang.String) -> notEmpty
    void notEmpty(java.lang.String,java.lang.String) -> notEmpty
    void fail(java.lang.String) -> fail
org.jsoup.nodes.Attribute -> org.jsoup.nodes.Attribute:
    java.lang.String key -> key
    java.lang.String value -> value
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    java.lang.String setValue(java.lang.String) -> setValue
    java.lang.String html() -> html
    void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings) -> html
    java.lang.String toString() -> toString
    org.jsoup.nodes.Attribute createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
    boolean isDataAttribute() -> isDataAttribute
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Attribute clone() -> clone
    java.lang.Object clone() -> clone
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
org.jsoup.nodes.Attributes -> org.jsoup.nodes.Attributes:
    java.lang.String dataPrefix -> dataPrefix
    java.util.LinkedHashMap attributes -> attributes
    java.lang.String get(java.lang.String) -> get
    void put(java.lang.String,java.lang.String) -> put
    void put(org.jsoup.nodes.Attribute) -> put
    void remove(java.lang.String) -> remove
    boolean hasKey(java.lang.String) -> hasKey
    int size() -> size
    void addAll(org.jsoup.nodes.Attributes) -> addAll
    java.util.Iterator iterator() -> iterator
    java.util.List asList() -> asList
    java.util.Map dataset() -> dataset
    java.lang.String html() -> html
    void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings) -> html
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Attributes clone() -> clone
    java.lang.String dataKey(java.lang.String) -> dataKey
    java.lang.Object clone() -> clone
    java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes) -> access$100
    java.util.LinkedHashMap access$102(org.jsoup.nodes.Attributes,java.util.LinkedHashMap) -> access$102
    java.lang.String access$300(java.lang.String) -> access$300
org.jsoup.nodes.Attributes$1 -> org.jsoup.nodes.a:
org.jsoup.nodes.Attributes$Dataset -> org.jsoup.nodes.b:
    org.jsoup.nodes.Attributes this$0 -> a
    java.util.Set entrySet() -> entrySet
    java.lang.String put(java.lang.String,java.lang.String) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
org.jsoup.nodes.Attributes$Dataset$DatasetIterator -> org.jsoup.nodes.c:
    java.util.Iterator attrIter -> b
    org.jsoup.nodes.Attribute attr -> c
    org.jsoup.nodes.Attributes$Dataset this$1 -> a
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.jsoup.nodes.Attributes$Dataset$EntrySet -> org.jsoup.nodes.d:
    org.jsoup.nodes.Attributes$Dataset this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.jsoup.nodes.Comment -> org.jsoup.nodes.Comment:
    java.lang.String COMMENT_KEY -> COMMENT_KEY
    java.lang.String nodeName() -> nodeName
    java.lang.String getData() -> getData
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlHead
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlTail
    java.lang.String toString() -> toString
org.jsoup.nodes.DataNode -> org.jsoup.nodes.DataNode:
    java.lang.String DATA_KEY -> DATA_KEY
    java.lang.String nodeName() -> nodeName
    java.lang.String getWholeData() -> getWholeData
    org.jsoup.nodes.DataNode setWholeData(java.lang.String) -> setWholeData
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlHead
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlTail
    java.lang.String toString() -> toString
    org.jsoup.nodes.DataNode createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
org.jsoup.nodes.Document -> org.jsoup.nodes.Document:
    org.jsoup.nodes.Document$OutputSettings outputSettings -> outputSettings
    org.jsoup.nodes.Document$QuirksMode quirksMode -> quirksMode
    org.jsoup.nodes.Document createShell(java.lang.String) -> createShell
    org.jsoup.nodes.Element head() -> head
    org.jsoup.nodes.Element body() -> body
    java.lang.String title() -> title
    void title(java.lang.String) -> title
    org.jsoup.nodes.Element createElement(java.lang.String) -> createElement
    org.jsoup.nodes.Document normalise() -> normalise
    void normaliseTextNodes(org.jsoup.nodes.Element) -> normaliseTextNodes
    void normaliseStructure(java.lang.String,org.jsoup.nodes.Element) -> normaliseStructure
    org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node) -> findFirstElementByTagName
    java.lang.String outerHtml() -> outerHtml
    org.jsoup.nodes.Element text(java.lang.String) -> text
    java.lang.String nodeName() -> nodeName
    org.jsoup.nodes.Document clone() -> clone
    org.jsoup.nodes.Document$OutputSettings outputSettings() -> outputSettings
    org.jsoup.nodes.Document outputSettings(org.jsoup.nodes.Document$OutputSettings) -> outputSettings
    org.jsoup.nodes.Document$QuirksMode quirksMode() -> quirksMode
    org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode) -> quirksMode
    org.jsoup.nodes.Element clone() -> clone
    org.jsoup.nodes.Node clone() -> clone
    java.lang.Object clone() -> clone
org.jsoup.nodes.Document$OutputSettings -> org.jsoup.nodes.Document$OutputSettings:
    org.jsoup.nodes.Entities$EscapeMode escapeMode -> escapeMode
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CharsetEncoder charsetEncoder -> charsetEncoder
    boolean prettyPrint -> prettyPrint
    boolean outline -> outline
    int indentAmount -> indentAmount
    org.jsoup.nodes.Entities$EscapeMode escapeMode() -> escapeMode
    org.jsoup.nodes.Document$OutputSettings escapeMode(org.jsoup.nodes.Entities$EscapeMode) -> escapeMode
    java.nio.charset.Charset charset() -> charset
    org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset) -> charset
    org.jsoup.nodes.Document$OutputSettings charset(java.lang.String) -> charset
    java.nio.charset.CharsetEncoder encoder() -> encoder
    boolean prettyPrint() -> prettyPrint
    org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean) -> prettyPrint
    boolean outline() -> outline
    org.jsoup.nodes.Document$OutputSettings outline(boolean) -> outline
    int indentAmount() -> indentAmount
    org.jsoup.nodes.Document$OutputSettings indentAmount(int) -> indentAmount
    org.jsoup.nodes.Document$OutputSettings clone() -> clone
    java.lang.Object clone() -> clone
org.jsoup.nodes.Document$QuirksMode -> org.jsoup.nodes.Document$QuirksMode:
    org.jsoup.nodes.Document$QuirksMode noQuirks -> noQuirks
    org.jsoup.nodes.Document$QuirksMode quirks -> quirks
    org.jsoup.nodes.Document$QuirksMode limitedQuirks -> limitedQuirks
    org.jsoup.nodes.Document$QuirksMode[] $VALUES -> $VALUES
    org.jsoup.nodes.Document$QuirksMode[] values() -> values
    org.jsoup.nodes.Document$QuirksMode valueOf(java.lang.String) -> valueOf
org.jsoup.nodes.DocumentType -> org.jsoup.nodes.DocumentType:
    java.lang.String nodeName() -> nodeName
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlHead
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlTail
org.jsoup.nodes.Element -> org.jsoup.nodes.Element:
    org.jsoup.parser.Tag tag -> tag
    java.util.Set classNames -> classNames
    java.lang.String nodeName() -> nodeName
    java.lang.String tagName() -> tagName
    org.jsoup.nodes.Element tagName(java.lang.String) -> tagName
    org.jsoup.parser.Tag tag() -> tag
    boolean isBlock() -> isBlock
    java.lang.String id() -> id
    org.jsoup.nodes.Element attr(java.lang.String,java.lang.String) -> attr
    java.util.Map dataset() -> dataset
    org.jsoup.nodes.Element parent() -> parent
    org.jsoup.select.Elements parents() -> parents
    void accumulateParents(org.jsoup.nodes.Element,org.jsoup.select.Elements) -> accumulateParents
    org.jsoup.nodes.Element child(int) -> child
    org.jsoup.select.Elements children() -> children
    java.util.List textNodes() -> textNodes
    java.util.List dataNodes() -> dataNodes
    org.jsoup.select.Elements select(java.lang.String) -> select
    org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node) -> appendChild
    org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node) -> prependChild
    org.jsoup.nodes.Element insertChildren(int,java.util.Collection) -> insertChildren
    org.jsoup.nodes.Element appendElement(java.lang.String) -> appendElement
    org.jsoup.nodes.Element prependElement(java.lang.String) -> prependElement
    org.jsoup.nodes.Element appendText(java.lang.String) -> appendText
    org.jsoup.nodes.Element prependText(java.lang.String) -> prependText
    org.jsoup.nodes.Element append(java.lang.String) -> append
    org.jsoup.nodes.Element prepend(java.lang.String) -> prepend
    org.jsoup.nodes.Element before(java.lang.String) -> before
    org.jsoup.nodes.Element before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Element after(java.lang.String) -> after
    org.jsoup.nodes.Element after(org.jsoup.nodes.Node) -> after
    org.jsoup.nodes.Element empty() -> empty
    org.jsoup.nodes.Element wrap(java.lang.String) -> wrap
    org.jsoup.select.Elements siblingElements() -> siblingElements
    org.jsoup.nodes.Element nextElementSibling() -> nextElementSibling
    org.jsoup.nodes.Element previousElementSibling() -> previousElementSibling
    org.jsoup.nodes.Element firstElementSibling() -> firstElementSibling
    java.lang.Integer elementSiblingIndex() -> elementSiblingIndex
    org.jsoup.nodes.Element lastElementSibling() -> lastElementSibling
    java.lang.Integer indexInList(org.jsoup.nodes.Element,java.util.List) -> indexInList
    org.jsoup.select.Elements getElementsByTag(java.lang.String) -> getElementsByTag
    org.jsoup.nodes.Element getElementById(java.lang.String) -> getElementById
    org.jsoup.select.Elements getElementsByClass(java.lang.String) -> getElementsByClass
    org.jsoup.select.Elements getElementsByAttribute(java.lang.String) -> getElementsByAttribute
    org.jsoup.select.Elements getElementsByAttributeStarting(java.lang.String) -> getElementsByAttributeStarting
    org.jsoup.select.Elements getElementsByAttributeValue(java.lang.String,java.lang.String) -> getElementsByAttributeValue
    org.jsoup.select.Elements getElementsByAttributeValueNot(java.lang.String,java.lang.String) -> getElementsByAttributeValueNot
    org.jsoup.select.Elements getElementsByAttributeValueStarting(java.lang.String,java.lang.String) -> getElementsByAttributeValueStarting
    org.jsoup.select.Elements getElementsByAttributeValueEnding(java.lang.String,java.lang.String) -> getElementsByAttributeValueEnding
    org.jsoup.select.Elements getElementsByAttributeValueContaining(java.lang.String,java.lang.String) -> getElementsByAttributeValueContaining
    org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String,java.util.regex.Pattern) -> getElementsByAttributeValueMatching
    org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String,java.lang.String) -> getElementsByAttributeValueMatching
    org.jsoup.select.Elements getElementsByIndexLessThan(int) -> getElementsByIndexLessThan
    org.jsoup.select.Elements getElementsByIndexGreaterThan(int) -> getElementsByIndexGreaterThan
    org.jsoup.select.Elements getElementsByIndexEquals(int) -> getElementsByIndexEquals
    org.jsoup.select.Elements getElementsContainingText(java.lang.String) -> getElementsContainingText
    org.jsoup.select.Elements getElementsContainingOwnText(java.lang.String) -> getElementsContainingOwnText
    org.jsoup.select.Elements getElementsMatchingText(java.util.regex.Pattern) -> getElementsMatchingText
    org.jsoup.select.Elements getElementsMatchingText(java.lang.String) -> getElementsMatchingText
    org.jsoup.select.Elements getElementsMatchingOwnText(java.util.regex.Pattern) -> getElementsMatchingOwnText
    org.jsoup.select.Elements getElementsMatchingOwnText(java.lang.String) -> getElementsMatchingOwnText
    org.jsoup.select.Elements getAllElements() -> getAllElements
    java.lang.String text() -> text
    java.lang.String ownText() -> ownText
    void ownText(java.lang.StringBuilder) -> ownText
    void appendNormalisedText(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> appendNormalisedText
    void appendWhitespaceIfBr(org.jsoup.nodes.Element,java.lang.StringBuilder) -> appendWhitespaceIfBr
    boolean preserveWhitespace(org.jsoup.nodes.Node) -> preserveWhitespace
    org.jsoup.nodes.Element text(java.lang.String) -> text
    boolean hasText() -> hasText
    java.lang.String data() -> data
    java.lang.String className() -> className
    java.util.Set classNames() -> classNames
    org.jsoup.nodes.Element classNames(java.util.Set) -> classNames
    boolean hasClass(java.lang.String) -> hasClass
    org.jsoup.nodes.Element addClass(java.lang.String) -> addClass
    org.jsoup.nodes.Element removeClass(java.lang.String) -> removeClass
    org.jsoup.nodes.Element toggleClass(java.lang.String) -> toggleClass
    java.lang.String val() -> val
    org.jsoup.nodes.Element val(java.lang.String) -> val
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlHead
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlTail
    java.lang.String html() -> html
    void html(java.lang.StringBuilder) -> html
    org.jsoup.nodes.Element html(java.lang.String) -> html
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Element clone() -> clone
    org.jsoup.nodes.Node clone() -> clone
    org.jsoup.nodes.Node wrap(java.lang.String) -> wrap
    org.jsoup.nodes.Node after(org.jsoup.nodes.Node) -> after
    org.jsoup.nodes.Node after(java.lang.String) -> after
    org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Node before(java.lang.String) -> before
    org.jsoup.nodes.Node parent() -> parent
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    java.lang.Object clone() -> clone
    void access$000(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> access$000
    org.jsoup.parser.Tag access$100(org.jsoup.nodes.Element) -> access$100
org.jsoup.nodes.Element$1 -> org.jsoup.nodes.e:
    java.lang.StringBuilder val$accum -> a
    org.jsoup.nodes.Element this$0 -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.Entities -> org.jsoup.nodes.Entities:
    java.util.Map full -> full
    java.util.Map xhtmlByVal -> xhtmlByVal
    java.util.Map base -> base
    java.util.Map baseByVal -> baseByVal
    java.util.Map fullByVal -> fullByVal
    java.util.regex.Pattern unescapePattern -> unescapePattern
    java.util.regex.Pattern strictUnescapePattern -> strictUnescapePattern
    java.lang.Object[][] xhtmlArray -> xhtmlArray
    boolean isNamedEntity(java.lang.String) -> isNamedEntity
    boolean isBaseNamedEntity(java.lang.String) -> isBaseNamedEntity
    java.lang.Character getCharacterByName(java.lang.String) -> getCharacterByName
    java.lang.String escape(java.lang.String,org.jsoup.nodes.Document$OutputSettings) -> escape
    java.lang.String escape(java.lang.String,java.nio.charset.CharsetEncoder,org.jsoup.nodes.Entities$EscapeMode) -> escape
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String unescape(java.lang.String,boolean) -> unescape
    java.util.Map loadEntities(java.lang.String) -> loadEntities
    java.util.Map toCharacterKey(java.util.Map) -> toCharacterKey
    java.util.Map access$000() -> access$000
    java.util.Map access$100() -> access$100
    java.util.Map access$200() -> access$200
org.jsoup.nodes.Entities$EscapeMode -> org.jsoup.nodes.Entities$EscapeMode:
    org.jsoup.nodes.Entities$EscapeMode xhtml -> xhtml
    org.jsoup.nodes.Entities$EscapeMode base -> base
    org.jsoup.nodes.Entities$EscapeMode extended -> extended
    java.util.Map map -> map
    org.jsoup.nodes.Entities$EscapeMode[] $VALUES -> $VALUES
    org.jsoup.nodes.Entities$EscapeMode[] values() -> values
    org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String) -> valueOf
    java.util.Map getMap() -> getMap
org.jsoup.nodes.Node -> org.jsoup.nodes.Node:
    org.jsoup.nodes.Node parentNode -> parentNode
    java.util.List childNodes -> childNodes
    org.jsoup.nodes.Attributes attributes -> attributes
    java.lang.String baseUri -> baseUri
    int siblingIndex -> siblingIndex
    java.lang.String nodeName() -> nodeName
    java.lang.String attr(java.lang.String) -> attr
    org.jsoup.nodes.Attributes attributes() -> attributes
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.nodes.Node removeAttr(java.lang.String) -> removeAttr
    java.lang.String baseUri() -> baseUri
    void setBaseUri(java.lang.String) -> setBaseUri
    java.lang.String absUrl(java.lang.String) -> absUrl
    org.jsoup.nodes.Node childNode(int) -> childNode
    java.util.List childNodes() -> childNodes
    java.util.List childNodesCopy() -> childNodesCopy
    int childNodeSize() -> childNodeSize
    org.jsoup.nodes.Node[] childNodesAsArray() -> childNodesAsArray
    org.jsoup.nodes.Node parent() -> parent
    org.jsoup.nodes.Document ownerDocument() -> ownerDocument
    void remove() -> remove
    org.jsoup.nodes.Node before(java.lang.String) -> before
    org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Node after(java.lang.String) -> after
    org.jsoup.nodes.Node after(org.jsoup.nodes.Node) -> after
    void addSiblingHtml(int,java.lang.String) -> addSiblingHtml
    org.jsoup.nodes.Node wrap(java.lang.String) -> wrap
    org.jsoup.nodes.Node unwrap() -> unwrap
    org.jsoup.nodes.Element getDeepChild(org.jsoup.nodes.Element) -> getDeepChild
    void replaceWith(org.jsoup.nodes.Node) -> replaceWith
    void setParentNode(org.jsoup.nodes.Node) -> setParentNode
    void replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node) -> replaceChild
    void removeChild(org.jsoup.nodes.Node) -> removeChild
    void addChildren(org.jsoup.nodes.Node[]) -> addChildren
    void addChildren(int,org.jsoup.nodes.Node[]) -> addChildren
    void reparentChild(org.jsoup.nodes.Node) -> reparentChild
    void reindexChildren() -> reindexChildren
    java.util.List siblingNodes() -> siblingNodes
    org.jsoup.nodes.Node nextSibling() -> nextSibling
    org.jsoup.nodes.Node previousSibling() -> previousSibling
    int siblingIndex() -> siblingIndex
    void setSiblingIndex(int) -> setSiblingIndex
    org.jsoup.nodes.Node traverse(org.jsoup.select.NodeVisitor) -> traverse
    java.lang.String outerHtml() -> outerHtml
    void outerHtml(java.lang.StringBuilder) -> outerHtml
    org.jsoup.nodes.Document$OutputSettings getOutputSettings() -> getOutputSettings
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlHead
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlTail
    java.lang.String toString() -> toString
    void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> indent
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Node clone() -> clone
    org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node) -> doClone
    java.lang.Object clone() -> clone
org.jsoup.nodes.Node$1 -> org.jsoup.nodes.f:
    java.lang.String val$baseUri -> a
    org.jsoup.nodes.Node this$0 -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.Node$OuterHtmlVisitor -> org.jsoup.nodes.g:
    java.lang.StringBuilder accum -> a
    org.jsoup.nodes.Document$OutputSettings out -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.TextNode -> org.jsoup.nodes.TextNode:
    java.lang.String TEXT_KEY -> TEXT_KEY
    java.lang.String text -> text
    java.lang.String nodeName() -> nodeName
    java.lang.String text() -> text
    org.jsoup.nodes.TextNode text(java.lang.String) -> text
    java.lang.String getWholeText() -> getWholeText
    boolean isBlank() -> isBlank
    org.jsoup.nodes.TextNode splitText(int) -> splitText
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlHead
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlTail
    java.lang.String toString() -> toString
    org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
    java.lang.String normaliseWhitespace(java.lang.String) -> normaliseWhitespace
    java.lang.String stripLeadingWhitespace(java.lang.String) -> stripLeadingWhitespace
    boolean lastCharIsWhitespace(java.lang.StringBuilder) -> lastCharIsWhitespace
    void ensureAttributes() -> ensureAttributes
    java.lang.String attr(java.lang.String) -> attr
    org.jsoup.nodes.Attributes attributes() -> attributes
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.nodes.Node removeAttr(java.lang.String) -> removeAttr
    java.lang.String absUrl(java.lang.String) -> absUrl
org.jsoup.nodes.XmlDeclaration -> org.jsoup.nodes.XmlDeclaration:
    java.lang.String DECL_KEY -> DECL_KEY
    boolean isProcessingInstruction -> isProcessingInstruction
    java.lang.String nodeName() -> nodeName
    java.lang.String getWholeDeclaration() -> getWholeDeclaration
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlHead
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> outerHtmlTail
    java.lang.String toString() -> toString
org.jsoup.parser.CharacterReader -> org.jsoup.parser.a:
    char[] input -> a
    int length -> b
    int pos -> c
    int mark -> d
    int pos() -> a
    boolean isEmpty() -> b
    char current() -> c
    char consume() -> d
    void unconsume() -> e
    void advance() -> f
    void mark() -> g
    void rewindToMark() -> h
    int nextIndexOf(char) -> a
    int nextIndexOf(java.lang.CharSequence) -> a
    java.lang.String consumeTo(char) -> b
    java.lang.String consumeTo(java.lang.String) -> a
    java.lang.String consumeToAny(char[]) -> a
    java.lang.String consumeToEnd() -> i
    java.lang.String consumeLetterSequence() -> j
    java.lang.String consumeLetterThenDigitSequence() -> k
    java.lang.String consumeHexSequence() -> l
    java.lang.String consumeDigitSequence() -> m
    boolean matches(char) -> c
    boolean matches(java.lang.String) -> b
    boolean matchesIgnoreCase(java.lang.String) -> c
    boolean matchesAny(char[]) -> b
    boolean matchesLetter() -> n
    boolean matchesDigit() -> o
    boolean matchConsume(java.lang.String) -> d
    boolean matchConsumeIgnoreCase(java.lang.String) -> e
    boolean containsIgnoreCase(java.lang.String) -> f
    java.lang.String toString() -> toString
org.jsoup.parser.HtmlTreeBuilder -> org.jsoup.parser.b:
    org.jsoup.parser.HtmlTreeBuilderState state -> b
    org.jsoup.parser.HtmlTreeBuilderState originalState -> c
    boolean baseUriSetFromDoc -> d
    org.jsoup.nodes.Element headElement -> e
    org.jsoup.nodes.Element formElement -> f
    org.jsoup.nodes.Element contextElement -> g
    org.jsoup.helper.DescendableLinkedList formattingElements -> h
    java.util.List pendingTableCharacters -> i
    boolean framesetOk -> j
    boolean fosterInserts -> k
    boolean fragmentParsing -> l
    boolean $assertionsDisabled -> a
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> parse
    java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    boolean process(org.jsoup.parser.Token) -> process
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState) -> a
    void transition(org.jsoup.parser.HtmlTreeBuilderState) -> a
    org.jsoup.parser.HtmlTreeBuilderState state() -> a
    void markInsertionMode() -> b
    org.jsoup.parser.HtmlTreeBuilderState originalState() -> c
    void framesetOk(boolean) -> a
    boolean framesetOk() -> d
    org.jsoup.nodes.Document getDocument() -> e
    java.lang.String getBaseUri() -> f
    void maybeSetBaseUri(org.jsoup.nodes.Element) -> a
    boolean isFragmentParsing() -> g
    void error(org.jsoup.parser.HtmlTreeBuilderState) -> b
    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag) -> a
    org.jsoup.nodes.Element insert(java.lang.String) -> a
    void insert(org.jsoup.nodes.Element) -> b
    org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag) -> b
    void insert(org.jsoup.parser.Token$Comment) -> a
    void insert(org.jsoup.parser.Token$Character) -> a
    void insertNode(org.jsoup.nodes.Node) -> b
    org.jsoup.nodes.Element pop() -> h
    void push(org.jsoup.nodes.Element) -> c
    org.jsoup.helper.DescendableLinkedList getStack() -> i
    boolean onStack(org.jsoup.nodes.Element) -> d
    boolean isElementInQueue(org.jsoup.helper.DescendableLinkedList,org.jsoup.nodes.Element) -> a
    org.jsoup.nodes.Element getFromStack(java.lang.String) -> b
    boolean removeFromStack(org.jsoup.nodes.Element) -> e
    void popStackToClose(java.lang.String) -> c
    void popStackToClose(java.lang.String[]) -> a
    void popStackToBefore(java.lang.String) -> d
    void clearStackToTableContext() -> j
    void clearStackToTableBodyContext() -> k
    void clearStackToTableRowContext() -> l
    void clearStackToContext(java.lang.String[]) -> c
    org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element) -> f
    void insertOnStackAfter(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    void replaceOnStack(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    void replaceInQueue(java.util.LinkedList,org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    void resetInsertionMode() -> m
    boolean inSpecificScope(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    boolean inSpecificScope(java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    boolean inScope(java.lang.String[]) -> b
    boolean inScope(java.lang.String) -> e
    boolean inScope(java.lang.String,java.lang.String[]) -> a
    boolean inListItemScope(java.lang.String) -> f
    boolean inButtonScope(java.lang.String) -> g
    boolean inTableScope(java.lang.String) -> h
    boolean inSelectScope(java.lang.String) -> i
    void setHeadElement(org.jsoup.nodes.Element) -> g
    org.jsoup.nodes.Element getHeadElement() -> n
    boolean isFosterInserts() -> o
    void setFosterInserts(boolean) -> b
    org.jsoup.nodes.Element getFormElement() -> p
    void setFormElement(org.jsoup.nodes.Element) -> h
    void newPendingTableCharacters() -> q
    java.util.List getPendingTableCharacters() -> r
    void generateImpliedEndTags(java.lang.String) -> j
    void generateImpliedEndTags() -> s
    boolean isSpecial(org.jsoup.nodes.Element) -> i
    void pushActiveFormattingElements(org.jsoup.nodes.Element) -> j
    boolean isSameFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> d
    void reconstructFormattingElements() -> t
    void clearFormattingElementsToLastMarker() -> u
    void removeFromActiveFormattingElements(org.jsoup.nodes.Element) -> k
    boolean isInActiveFormattingElements(org.jsoup.nodes.Element) -> l
    org.jsoup.nodes.Element getActiveFormattingElement(java.lang.String) -> k
    void replaceActiveFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> c
    void insertMarkerToFormattingElements() -> v
    void insertInFosterParent(org.jsoup.nodes.Node) -> a
    java.lang.String toString() -> toString
org.jsoup.parser.HtmlTreeBuilderState -> org.jsoup.parser.c:
    org.jsoup.parser.HtmlTreeBuilderState Initial -> a
    org.jsoup.parser.HtmlTreeBuilderState BeforeHtml -> b
    org.jsoup.parser.HtmlTreeBuilderState BeforeHead -> c
    org.jsoup.parser.HtmlTreeBuilderState InHead -> d
    org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript -> e
    org.jsoup.parser.HtmlTreeBuilderState AfterHead -> f
    org.jsoup.parser.HtmlTreeBuilderState InBody -> g
    org.jsoup.parser.HtmlTreeBuilderState Text -> h
    org.jsoup.parser.HtmlTreeBuilderState InTable -> i
    org.jsoup.parser.HtmlTreeBuilderState InTableText -> j
    org.jsoup.parser.HtmlTreeBuilderState InCaption -> k
    org.jsoup.parser.HtmlTreeBuilderState InColumnGroup -> l
    org.jsoup.parser.HtmlTreeBuilderState InTableBody -> m
    org.jsoup.parser.HtmlTreeBuilderState InRow -> n
    org.jsoup.parser.HtmlTreeBuilderState InCell -> o
    org.jsoup.parser.HtmlTreeBuilderState InSelect -> p
    org.jsoup.parser.HtmlTreeBuilderState InSelectInTable -> q
    org.jsoup.parser.HtmlTreeBuilderState AfterBody -> r
    org.jsoup.parser.HtmlTreeBuilderState InFrameset -> s
    org.jsoup.parser.HtmlTreeBuilderState AfterFrameset -> t
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody -> u
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset -> v
    org.jsoup.parser.HtmlTreeBuilderState ForeignContent -> w
    java.lang.String nullString -> x
    org.jsoup.parser.HtmlTreeBuilderState[] $VALUES -> y
    org.jsoup.parser.HtmlTreeBuilderState[] values() -> values
    org.jsoup.parser.HtmlTreeBuilderState valueOf(java.lang.String) -> valueOf
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean isWhitespace(org.jsoup.parser.Token) -> b
    void handleRcData(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> c
    void handleRawtext(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> d
    boolean access$100(org.jsoup.parser.Token) -> a
    void access$200(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> a
    void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> b
    java.lang.String access$400() -> a
org.jsoup.parser.HtmlTreeBuilderState$1 -> org.jsoup.parser.d:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$10 -> org.jsoup.parser.e:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$11 -> org.jsoup.parser.f:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$12 -> org.jsoup.parser.g:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$13 -> org.jsoup.parser.h:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> c
org.jsoup.parser.HtmlTreeBuilderState$14 -> org.jsoup.parser.i:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$15 -> org.jsoup.parser.j:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    void closeCell(org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$16 -> org.jsoup.parser.k:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$17 -> org.jsoup.parser.l:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$18 -> org.jsoup.parser.m:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$19 -> org.jsoup.parser.n:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$2 -> org.jsoup.parser.o:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$20 -> org.jsoup.parser.p:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$21 -> org.jsoup.parser.q:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$22 -> org.jsoup.parser.r:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$23 -> org.jsoup.parser.s:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$24 -> org.jsoup.parser.t:
    int[] $SwitchMap$org$jsoup$parser$Token$TokenType -> a
org.jsoup.parser.HtmlTreeBuilderState$3 -> org.jsoup.parser.u:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$4 -> org.jsoup.parser.v:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$5 -> org.jsoup.parser.w:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$6 -> org.jsoup.parser.x:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$7 -> org.jsoup.parser.y:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anyOtherEndTag(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$8 -> org.jsoup.parser.z:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$9 -> org.jsoup.parser.aa:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.ParseError -> org.jsoup.parser.ParseError:
    int pos -> pos
    java.lang.String errorMsg -> errorMsg
    java.lang.String getErrorMessage() -> getErrorMessage
    int getPosition() -> getPosition
    java.lang.String toString() -> toString
org.jsoup.parser.ParseErrorList -> org.jsoup.parser.ab:
    int maxSize -> a
    boolean canAddError() -> a
    org.jsoup.parser.ParseErrorList noTracking() -> b
    org.jsoup.parser.ParseErrorList tracking(int) -> a
org.jsoup.parser.Parser -> org.jsoup.parser.Parser:
    int DEFAULT_MAX_ERRORS -> DEFAULT_MAX_ERRORS
    org.jsoup.parser.TreeBuilder treeBuilder -> treeBuilder
    int maxErrors -> maxErrors
    org.jsoup.parser.ParseErrorList errors -> errors
    org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String) -> parseInput
    org.jsoup.parser.TreeBuilder getTreeBuilder() -> getTreeBuilder
    org.jsoup.parser.Parser setTreeBuilder(org.jsoup.parser.TreeBuilder) -> setTreeBuilder
    boolean isTrackErrors() -> isTrackErrors
    org.jsoup.parser.Parser setTrackErrors(int) -> setTrackErrors
    java.util.List getErrors() -> getErrors
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> parse
    java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String) -> parseFragment
    java.util.List parseXmlFragment(java.lang.String,java.lang.String) -> parseXmlFragment
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String) -> parseBodyFragment
    java.lang.String unescapeEntities(java.lang.String,boolean) -> unescapeEntities
    org.jsoup.nodes.Document parseBodyFragmentRelaxed(java.lang.String,java.lang.String) -> parseBodyFragmentRelaxed
    org.jsoup.parser.Parser htmlParser() -> htmlParser
    org.jsoup.parser.Parser xmlParser() -> xmlParser
org.jsoup.parser.Tag -> org.jsoup.parser.Tag:
    java.util.Map tags -> tags
    java.lang.String tagName -> tagName
    boolean isBlock -> isBlock
    boolean formatAsBlock -> formatAsBlock
    boolean canContainBlock -> canContainBlock
    boolean canContainInline -> canContainInline
    boolean empty -> empty
    boolean selfClosing -> selfClosing
    boolean preserveWhitespace -> preserveWhitespace
    java.lang.String[] blockTags -> blockTags
    java.lang.String[] inlineTags -> inlineTags
    java.lang.String[] emptyTags -> emptyTags
    java.lang.String[] formatAsInlineTags -> formatAsInlineTags
    java.lang.String[] preserveWhitespaceTags -> preserveWhitespaceTags
    java.lang.String getName() -> getName
    org.jsoup.parser.Tag valueOf(java.lang.String) -> valueOf
    boolean isBlock() -> isBlock
    boolean formatAsBlock() -> formatAsBlock
    boolean canContainBlock() -> canContainBlock
    boolean isInline() -> isInline
    boolean isData() -> isData
    boolean isEmpty() -> isEmpty
    boolean isSelfClosing() -> isSelfClosing
    boolean isKnownTag() -> isKnownTag
    boolean isKnownTag(java.lang.String) -> isKnownTag
    boolean preserveWhitespace() -> preserveWhitespace
    org.jsoup.parser.Tag setSelfClosing() -> setSelfClosing
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void register(org.jsoup.parser.Tag) -> register
org.jsoup.parser.Token -> org.jsoup.parser.ac:
    org.jsoup.parser.Token$TokenType type -> a
    java.lang.String tokenType() -> a
    boolean isDoctype() -> b
    org.jsoup.parser.Token$Doctype asDoctype() -> c
    boolean isStartTag() -> d
    org.jsoup.parser.Token$StartTag asStartTag() -> e
    boolean isEndTag() -> f
    org.jsoup.parser.Token$EndTag asEndTag() -> g
    boolean isComment() -> h
    org.jsoup.parser.Token$Comment asComment() -> i
    boolean isCharacter() -> j
    org.jsoup.parser.Token$Character asCharacter() -> k
    boolean isEOF() -> l
org.jsoup.parser.Token$1 -> org.jsoup.parser.ad:
org.jsoup.parser.Token$Character -> org.jsoup.parser.ae:
    java.lang.String data -> b
    java.lang.String getData() -> m
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Comment -> org.jsoup.parser.af:
    java.lang.StringBuilder data -> b
    boolean bogus -> c
    java.lang.String getData() -> m
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Doctype -> org.jsoup.parser.ag:
    java.lang.StringBuilder name -> b
    java.lang.StringBuilder publicIdentifier -> c
    java.lang.StringBuilder systemIdentifier -> d
    boolean forceQuirks -> e
    java.lang.String getName() -> m
    java.lang.String getPublicIdentifier() -> n
    java.lang.String getSystemIdentifier() -> o
    boolean isForceQuirks() -> p
org.jsoup.parser.Token$EOF -> org.jsoup.parser.ah:
org.jsoup.parser.Token$EndTag -> org.jsoup.parser.ai:
    java.lang.String toString() -> toString
org.jsoup.parser.Token$StartTag -> org.jsoup.parser.aj:
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Tag -> org.jsoup.parser.ak:
    java.lang.String tagName -> b
    java.lang.String pendingAttributeName -> e
    java.lang.StringBuilder pendingAttributeValue -> f
    boolean selfClosing -> c
    org.jsoup.nodes.Attributes attributes -> d
    void newAttribute() -> m
    void finaliseTag() -> n
    java.lang.String name() -> o
    org.jsoup.parser.Token$Tag name(java.lang.String) -> a
    boolean isSelfClosing() -> p
    org.jsoup.nodes.Attributes getAttributes() -> q
    void appendTagName(java.lang.String) -> b
    void appendTagName(char) -> a
    void appendAttributeName(java.lang.String) -> c
    void appendAttributeName(char) -> b
    void appendAttributeValue(java.lang.String) -> d
    void appendAttributeValue(char) -> c
    void appendAttributeValue(char[]) -> a
    void ensureAttributeValue() -> r
org.jsoup.parser.Token$TokenType -> org.jsoup.parser.al:
    org.jsoup.parser.Token$TokenType Doctype -> a
    org.jsoup.parser.Token$TokenType StartTag -> b
    org.jsoup.parser.Token$TokenType EndTag -> c
    org.jsoup.parser.Token$TokenType Comment -> d
    org.jsoup.parser.Token$TokenType Character -> e
    org.jsoup.parser.Token$TokenType EOF -> f
    org.jsoup.parser.Token$TokenType[] $VALUES -> g
    org.jsoup.parser.Token$TokenType[] values() -> values
    org.jsoup.parser.Token$TokenType valueOf(java.lang.String) -> valueOf
org.jsoup.parser.TokenQueue -> org.jsoup.parser.TokenQueue:
    java.lang.String queue -> queue
    int pos -> pos
    char ESC -> ESC
    boolean isEmpty() -> isEmpty
    int remainingLength() -> remainingLength
    char peek() -> peek
    void addFirst(java.lang.Character) -> addFirst
    void addFirst(java.lang.String) -> addFirst
    boolean matches(java.lang.String) -> matches
    boolean matchesCS(java.lang.String) -> matchesCS
    boolean matchesAny(java.lang.String[]) -> matchesAny
    boolean matchesAny(char[]) -> matchesAny
    boolean matchesStartTag() -> matchesStartTag
    boolean matchChomp(java.lang.String) -> matchChomp
    boolean matchesWhitespace() -> matchesWhitespace
    boolean matchesWord() -> matchesWord
    void advance() -> advance
    char consume() -> consume
    void consume(java.lang.String) -> consume
    java.lang.String consumeTo(java.lang.String) -> consumeTo
    java.lang.String consumeToIgnoreCase(java.lang.String) -> consumeToIgnoreCase
    java.lang.String consumeToAny(java.lang.String[]) -> consumeToAny
    java.lang.String chompTo(java.lang.String) -> chompTo
    java.lang.String chompToIgnoreCase(java.lang.String) -> chompToIgnoreCase
    java.lang.String chompBalanced(char,char) -> chompBalanced
    java.lang.String unescape(java.lang.String) -> unescape
    boolean consumeWhitespace() -> consumeWhitespace
    java.lang.String consumeWord() -> consumeWord
    java.lang.String consumeTagName() -> consumeTagName
    java.lang.String consumeElementSelector() -> consumeElementSelector
    java.lang.String consumeCssIdentifier() -> consumeCssIdentifier
    java.lang.String consumeAttributeKey() -> consumeAttributeKey
    java.lang.String remainder() -> remainder
    java.lang.String toString() -> toString
org.jsoup.parser.Tokeniser -> org.jsoup.parser.am:
    org.jsoup.parser.CharacterReader reader -> e
    org.jsoup.parser.ParseErrorList errors -> f
    org.jsoup.parser.TokeniserState state -> g
    org.jsoup.parser.Token emitPending -> h
    boolean isEmitPending -> i
    java.lang.StringBuilder charBuffer -> j
    java.lang.StringBuilder dataBuffer -> a
    org.jsoup.parser.Token$Tag tagPending -> b
    org.jsoup.parser.Token$Doctype doctypePending -> c
    org.jsoup.parser.Token$Comment commentPending -> d
    org.jsoup.parser.Token$StartTag lastStartTag -> k
    boolean selfClosingFlagAcknowledged -> l
    org.jsoup.parser.Token read() -> a
    void emit(org.jsoup.parser.Token) -> a
    void emit(java.lang.String) -> a
    void emit(char[]) -> a
    void emit(char) -> a
    void transition(org.jsoup.parser.TokeniserState) -> a
    void advanceTransition(org.jsoup.parser.TokeniserState) -> b
    void acknowledgeSelfClosingFlag() -> b
    char[] consumeCharacterReference(java.lang.Character,boolean) -> a
    org.jsoup.parser.Token$Tag createTagPending(boolean) -> a
    void emitTagPending() -> c
    void createCommentPending() -> d
    void emitCommentPending() -> e
    void createDoctypePending() -> f
    void emitDoctypePending() -> g
    void createTempBuffer() -> h
    boolean isAppropriateEndTagToken() -> i
    java.lang.String appropriateEndTagName() -> j
    void error(org.jsoup.parser.TokeniserState) -> c
    void eofError(org.jsoup.parser.TokeniserState) -> d
    void characterReferenceError(java.lang.String) -> b
    void error(java.lang.String) -> c
    java.lang.String unescapeEntities(boolean) -> b
org.jsoup.parser.TokeniserState -> org.jsoup.parser.an:
    org.jsoup.parser.TokeniserState Data -> a
    org.jsoup.parser.TokeniserState CharacterReferenceInData -> b
    org.jsoup.parser.TokeniserState Rcdata -> c
    org.jsoup.parser.TokeniserState CharacterReferenceInRcdata -> d
    org.jsoup.parser.TokeniserState Rawtext -> e
    org.jsoup.parser.TokeniserState ScriptData -> f
    org.jsoup.parser.TokeniserState PLAINTEXT -> g
    org.jsoup.parser.TokeniserState TagOpen -> h
    org.jsoup.parser.TokeniserState EndTagOpen -> i
    org.jsoup.parser.TokeniserState TagName -> j
    org.jsoup.parser.TokeniserState RcdataLessthanSign -> k
    org.jsoup.parser.TokeniserState RCDATAEndTagOpen -> l
    org.jsoup.parser.TokeniserState RCDATAEndTagName -> m
    org.jsoup.parser.TokeniserState RawtextLessthanSign -> n
    org.jsoup.parser.TokeniserState RawtextEndTagOpen -> o
    org.jsoup.parser.TokeniserState RawtextEndTagName -> p
    org.jsoup.parser.TokeniserState ScriptDataLessthanSign -> q
    org.jsoup.parser.TokeniserState ScriptDataEndTagOpen -> r
    org.jsoup.parser.TokeniserState ScriptDataEndTagName -> s
    org.jsoup.parser.TokeniserState ScriptDataEscapeStart -> t
    org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash -> u
    org.jsoup.parser.TokeniserState ScriptDataEscaped -> v
    org.jsoup.parser.TokeniserState ScriptDataEscapedDash -> w
    org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash -> x
    org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign -> y
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen -> z
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName -> A
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart -> B
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped -> C
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash -> D
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash -> E
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign -> F
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd -> G
    org.jsoup.parser.TokeniserState BeforeAttributeName -> H
    org.jsoup.parser.TokeniserState AttributeName -> I
    org.jsoup.parser.TokeniserState AfterAttributeName -> J
    org.jsoup.parser.TokeniserState BeforeAttributeValue -> K
    org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted -> L
    org.jsoup.parser.TokeniserState AttributeValue_singleQuoted -> M
    org.jsoup.parser.TokeniserState AttributeValue_unquoted -> N
    org.jsoup.parser.TokeniserState AfterAttributeValue_quoted -> O
    org.jsoup.parser.TokeniserState SelfClosingStartTag -> P
    org.jsoup.parser.TokeniserState BogusComment -> Q
    org.jsoup.parser.TokeniserState MarkupDeclarationOpen -> R
    org.jsoup.parser.TokeniserState CommentStart -> S
    org.jsoup.parser.TokeniserState CommentStartDash -> T
    org.jsoup.parser.TokeniserState Comment -> U
    org.jsoup.parser.TokeniserState CommentEndDash -> V
    org.jsoup.parser.TokeniserState CommentEnd -> W
    org.jsoup.parser.TokeniserState CommentEndBang -> X
    org.jsoup.parser.TokeniserState Doctype -> Y
    org.jsoup.parser.TokeniserState BeforeDoctypeName -> Z
    org.jsoup.parser.TokeniserState DoctypeName -> aa
    org.jsoup.parser.TokeniserState AfterDoctypeName -> ab
    org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword -> ac
    org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier -> ad
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted -> ae
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted -> af
    org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier -> ag
    org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers -> ah
    org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword -> ai
    org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier -> aj
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted -> ak
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted -> al
    org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier -> am
    org.jsoup.parser.TokeniserState BogusDoctype -> an
    org.jsoup.parser.TokeniserState CdataSection -> ao
    java.lang.String replacementStr -> ap
    org.jsoup.parser.TokeniserState[] $VALUES -> aq
    org.jsoup.parser.TokeniserState[] values() -> values
    org.jsoup.parser.TokeniserState valueOf(java.lang.String) -> valueOf
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    java.lang.String access$100() -> a
org.jsoup.parser.TokeniserState$1 -> org.jsoup.parser.ao:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$10 -> org.jsoup.parser.ap:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$11 -> org.jsoup.parser.aq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$12 -> org.jsoup.parser.ar:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$13 -> org.jsoup.parser.as:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> b
org.jsoup.parser.TokeniserState$14 -> org.jsoup.parser.at:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$15 -> org.jsoup.parser.au:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$16 -> org.jsoup.parser.av:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> b
org.jsoup.parser.TokeniserState$17 -> org.jsoup.parser.aw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$18 -> org.jsoup.parser.ax:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$19 -> org.jsoup.parser.ay:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> b
org.jsoup.parser.TokeniserState$2 -> org.jsoup.parser.az:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$20 -> org.jsoup.parser.ba:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$21 -> org.jsoup.parser.bb:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$22 -> org.jsoup.parser.bc:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$23 -> org.jsoup.parser.bd:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$24 -> org.jsoup.parser.be:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$25 -> org.jsoup.parser.bf:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$26 -> org.jsoup.parser.bg:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$27 -> org.jsoup.parser.bh:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> b
org.jsoup.parser.TokeniserState$28 -> org.jsoup.parser.bi:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$29 -> org.jsoup.parser.bj:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$3 -> org.jsoup.parser.bk:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$30 -> org.jsoup.parser.bl:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$31 -> org.jsoup.parser.bm:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$32 -> org.jsoup.parser.bn:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$33 -> org.jsoup.parser.bo:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$34 -> org.jsoup.parser.bp:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$35 -> org.jsoup.parser.bq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$36 -> org.jsoup.parser.br:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$37 -> org.jsoup.parser.bs:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$38 -> org.jsoup.parser.bt:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$39 -> org.jsoup.parser.bu:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$4 -> org.jsoup.parser.bv:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$40 -> org.jsoup.parser.bw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$41 -> org.jsoup.parser.bx:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$42 -> org.jsoup.parser.by:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$43 -> org.jsoup.parser.bz:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$44 -> org.jsoup.parser.ca:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$45 -> org.jsoup.parser.cb:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$46 -> org.jsoup.parser.cc:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$47 -> org.jsoup.parser.cd:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$48 -> org.jsoup.parser.ce:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$49 -> org.jsoup.parser.cf:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$5 -> org.jsoup.parser.cg:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$50 -> org.jsoup.parser.ch:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$51 -> org.jsoup.parser.ci:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$52 -> org.jsoup.parser.cj:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$53 -> org.jsoup.parser.ck:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$54 -> org.jsoup.parser.cl:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$55 -> org.jsoup.parser.cm:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$56 -> org.jsoup.parser.cn:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$57 -> org.jsoup.parser.co:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$58 -> org.jsoup.parser.cp:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$59 -> org.jsoup.parser.cq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$6 -> org.jsoup.parser.cr:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$60 -> org.jsoup.parser.cs:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$61 -> org.jsoup.parser.ct:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$62 -> org.jsoup.parser.cu:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$63 -> org.jsoup.parser.cv:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$64 -> org.jsoup.parser.cw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$65 -> org.jsoup.parser.cx:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$66 -> org.jsoup.parser.cy:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$67 -> org.jsoup.parser.cz:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$7 -> org.jsoup.parser.da:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$8 -> org.jsoup.parser.db:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$9 -> org.jsoup.parser.dc:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TreeBuilder -> org.jsoup.parser.dd:
    org.jsoup.parser.CharacterReader reader -> reader
    org.jsoup.parser.Tokeniser tokeniser -> tokeniser
    org.jsoup.nodes.Document doc -> doc
    org.jsoup.helper.DescendableLinkedList stack -> stack
    java.lang.String baseUri -> baseUri
    org.jsoup.parser.Token currentToken -> currentToken
    org.jsoup.parser.ParseErrorList errors -> errors
    void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> initialiseParse
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> parse
    void runParser() -> runParser
    boolean process(org.jsoup.parser.Token) -> process
    org.jsoup.nodes.Element currentElement() -> currentElement
org.jsoup.parser.XmlTreeBuilder -> org.jsoup.parser.XmlTreeBuilder:
    void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> initialiseParse
    boolean process(org.jsoup.parser.Token) -> process
    void insertNode(org.jsoup.nodes.Node) -> insertNode
    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag) -> insert
    void insert(org.jsoup.parser.Token$Comment) -> insert
    void insert(org.jsoup.parser.Token$Character) -> insert
    void insert(org.jsoup.parser.Token$Doctype) -> insert
    void popStackToClose(org.jsoup.parser.Token$EndTag) -> popStackToClose
    java.util.List parseFragment(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> parseFragment
org.jsoup.parser.XmlTreeBuilder$1 -> org.jsoup.parser.de:
    int[] $SwitchMap$org$jsoup$parser$Token$TokenType -> a
org.jsoup.safety.Cleaner -> org.jsoup.safety.Cleaner:
    org.jsoup.safety.Whitelist whitelist -> whitelist
    org.jsoup.nodes.Document clean(org.jsoup.nodes.Document) -> clean
    boolean isValid(org.jsoup.nodes.Document) -> isValid
    int copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> copySafeNodes
    org.jsoup.safety.Cleaner$ElementMeta createSafeElement(org.jsoup.nodes.Element) -> createSafeElement
    org.jsoup.safety.Whitelist access$000(org.jsoup.safety.Cleaner) -> access$000
    org.jsoup.safety.Cleaner$ElementMeta access$100(org.jsoup.safety.Cleaner,org.jsoup.nodes.Element) -> access$100
org.jsoup.safety.Cleaner$1 -> org.jsoup.safety.a:
org.jsoup.safety.Cleaner$CleaningVisitor -> org.jsoup.safety.b:
    int numDiscarded -> b
    org.jsoup.nodes.Element root -> c
    org.jsoup.nodes.Element destination -> d
    org.jsoup.safety.Cleaner this$0 -> a
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
    int access$300(org.jsoup.safety.Cleaner$CleaningVisitor) -> a
org.jsoup.safety.Cleaner$ElementMeta -> org.jsoup.safety.c:
    org.jsoup.nodes.Element el -> a
    int numAttribsDiscarded -> b
org.jsoup.safety.Whitelist -> org.jsoup.safety.Whitelist:
    java.util.Set tagNames -> tagNames
    java.util.Map attributes -> attributes
    java.util.Map enforcedAttributes -> enforcedAttributes
    java.util.Map protocols -> protocols
    boolean preserveRelativeLinks -> preserveRelativeLinks
    org.jsoup.safety.Whitelist none() -> none
    org.jsoup.safety.Whitelist simpleText() -> simpleText
    org.jsoup.safety.Whitelist basic() -> basic
    org.jsoup.safety.Whitelist basicWithImages() -> basicWithImages
    org.jsoup.safety.Whitelist relaxed() -> relaxed
    org.jsoup.safety.Whitelist addTags(java.lang.String[]) -> addTags
    org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[]) -> addAttributes
    org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String) -> addEnforcedAttribute
    org.jsoup.safety.Whitelist preserveRelativeLinks(boolean) -> preserveRelativeLinks
    org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[]) -> addProtocols
    boolean isSafeTag(java.lang.String) -> isSafeTag
    boolean isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute) -> isSafeAttribute
    boolean testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set) -> testValidProtocol
    org.jsoup.nodes.Attributes getEnforcedAttributes(java.lang.String) -> getEnforcedAttributes
org.jsoup.safety.Whitelist$AttributeKey -> org.jsoup.safety.d:
    org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$AttributeValue -> org.jsoup.safety.e:
    org.jsoup.safety.Whitelist$AttributeValue valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$Protocol -> org.jsoup.safety.f:
    org.jsoup.safety.Whitelist$Protocol valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$TagName -> org.jsoup.safety.g:
    org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$TypedValue -> org.jsoup.safety.h:
    java.lang.String value -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.jsoup.select.Collector -> org.jsoup.select.Collector:
    org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element) -> collect
org.jsoup.select.Collector$Accumulator -> org.jsoup.select.a:
    org.jsoup.nodes.Element root -> a
    org.jsoup.select.Elements elements -> b
    org.jsoup.select.Evaluator eval -> c
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.select.CombiningEvaluator -> org.jsoup.select.b:
    java.util.List evaluators -> a
    org.jsoup.select.Evaluator rightMostEvaluator() -> a
    void replaceRightMostEvaluator(org.jsoup.select.Evaluator) -> a
org.jsoup.select.CombiningEvaluator$And -> org.jsoup.select.c:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.CombiningEvaluator$Or -> org.jsoup.select.d:
    void add(org.jsoup.select.Evaluator) -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Elements -> org.jsoup.select.Elements:
    java.util.List contents -> contents
    org.jsoup.select.Elements clone() -> clone
    java.lang.String attr(java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.select.Elements attr(java.lang.String,java.lang.String) -> attr
    org.jsoup.select.Elements removeAttr(java.lang.String) -> removeAttr
    org.jsoup.select.Elements addClass(java.lang.String) -> addClass
    org.jsoup.select.Elements removeClass(java.lang.String) -> removeClass
    org.jsoup.select.Elements toggleClass(java.lang.String) -> toggleClass
    boolean hasClass(java.lang.String) -> hasClass
    java.lang.String val() -> val
    org.jsoup.select.Elements val(java.lang.String) -> val
    java.lang.String text() -> text
    boolean hasText() -> hasText
    java.lang.String html() -> html
    java.lang.String outerHtml() -> outerHtml
    java.lang.String toString() -> toString
    org.jsoup.select.Elements tagName(java.lang.String) -> tagName
    org.jsoup.select.Elements html(java.lang.String) -> html
    org.jsoup.select.Elements prepend(java.lang.String) -> prepend
    org.jsoup.select.Elements append(java.lang.String) -> append
    org.jsoup.select.Elements before(java.lang.String) -> before
    org.jsoup.select.Elements after(java.lang.String) -> after
    org.jsoup.select.Elements wrap(java.lang.String) -> wrap
    org.jsoup.select.Elements unwrap() -> unwrap
    org.jsoup.select.Elements empty() -> empty
    org.jsoup.select.Elements remove() -> remove
    org.jsoup.select.Elements select(java.lang.String) -> select
    org.jsoup.select.Elements not(java.lang.String) -> not
    org.jsoup.select.Elements eq(int) -> eq
    boolean is(java.lang.String) -> is
    org.jsoup.select.Elements parents() -> parents
    org.jsoup.nodes.Element first() -> first
    org.jsoup.nodes.Element last() -> last
    org.jsoup.select.Elements traverse(org.jsoup.select.NodeVisitor) -> traverse
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(org.jsoup.nodes.Element) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Element get(int) -> get
    org.jsoup.nodes.Element set(int,org.jsoup.nodes.Element) -> set
    void add(int,org.jsoup.nodes.Element) -> add
    org.jsoup.nodes.Element remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object clone() -> clone
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    boolean add(java.lang.Object) -> add
org.jsoup.select.Evaluator -> org.jsoup.select.Evaluator:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
org.jsoup.select.Evaluator$AllElements -> org.jsoup.select.Evaluator$AllElements:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Attribute -> org.jsoup.select.Evaluator$Attribute:
    java.lang.String key -> key
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeKeyPair -> org.jsoup.select.Evaluator$AttributeKeyPair:
    java.lang.String key -> key
    java.lang.String value -> value
org.jsoup.select.Evaluator$AttributeStarting -> org.jsoup.select.Evaluator$AttributeStarting:
    java.lang.String keyPrefix -> keyPrefix
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValue -> org.jsoup.select.Evaluator$AttributeWithValue:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueContaining -> org.jsoup.select.Evaluator$AttributeWithValueContaining:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueEnding -> org.jsoup.select.Evaluator$AttributeWithValueEnding:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueMatching -> org.jsoup.select.Evaluator$AttributeWithValueMatching:
    java.lang.String key -> key
    java.util.regex.Pattern pattern -> pattern
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueNot -> org.jsoup.select.Evaluator$AttributeWithValueNot:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueStarting -> org.jsoup.select.Evaluator$AttributeWithValueStarting:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Class -> org.jsoup.select.Evaluator$Class:
    java.lang.String className -> className
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsOwnText -> org.jsoup.select.Evaluator$ContainsOwnText:
    java.lang.String searchText -> searchText
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsText -> org.jsoup.select.Evaluator$ContainsText:
    java.lang.String searchText -> searchText
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$CssNthEvaluator -> org.jsoup.select.Evaluator$CssNthEvaluator:
    int a -> a
    int b -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
    java.lang.String getPseudoClass() -> getPseudoClass
    int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> calculatePosition
org.jsoup.select.Evaluator$Id -> org.jsoup.select.Evaluator$Id:
    java.lang.String id -> id
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEquals -> org.jsoup.select.Evaluator$IndexEquals:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEvaluator -> org.jsoup.select.Evaluator$IndexEvaluator:
    int index -> index
org.jsoup.select.Evaluator$IndexGreaterThan -> org.jsoup.select.Evaluator$IndexGreaterThan:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexLessThan -> org.jsoup.select.Evaluator$IndexLessThan:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsEmpty -> org.jsoup.select.Evaluator$IsEmpty:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstChild -> org.jsoup.select.Evaluator$IsFirstChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstOfType -> org.jsoup.select.Evaluator$IsFirstOfType:
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastChild -> org.jsoup.select.Evaluator$IsLastChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastOfType -> org.jsoup.select.Evaluator$IsLastOfType:
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsNthChild -> org.jsoup.select.Evaluator$IsNthChild:
    int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> calculatePosition
    java.lang.String getPseudoClass() -> getPseudoClass
org.jsoup.select.Evaluator$IsNthLastChild -> org.jsoup.select.Evaluator$IsNthLastChild:
    int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> calculatePosition
    java.lang.String getPseudoClass() -> getPseudoClass
org.jsoup.select.Evaluator$IsNthLastOfType -> org.jsoup.select.Evaluator$IsNthLastOfType:
    int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> calculatePosition
    java.lang.String getPseudoClass() -> getPseudoClass
org.jsoup.select.Evaluator$IsNthOfType -> org.jsoup.select.Evaluator$IsNthOfType:
    int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> calculatePosition
    java.lang.String getPseudoClass() -> getPseudoClass
org.jsoup.select.Evaluator$IsOnlyChild -> org.jsoup.select.Evaluator$IsOnlyChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsOnlyOfType -> org.jsoup.select.Evaluator$IsOnlyOfType:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsRoot -> org.jsoup.select.Evaluator$IsRoot:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Matches -> org.jsoup.select.Evaluator$Matches:
    java.util.regex.Pattern pattern -> pattern
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$MatchesOwn -> org.jsoup.select.Evaluator$MatchesOwn:
    java.util.regex.Pattern pattern -> pattern
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Tag -> org.jsoup.select.Evaluator$Tag:
    java.lang.String tagName -> tagName
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.NodeTraversor -> org.jsoup.select.NodeTraversor:
    org.jsoup.select.NodeVisitor visitor -> visitor
    void traverse(org.jsoup.nodes.Node) -> traverse
org.jsoup.select.NodeVisitor -> org.jsoup.select.NodeVisitor:
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.select.QueryParser -> org.jsoup.select.e:
    java.lang.String[] combinators -> a
    org.jsoup.parser.TokenQueue tq -> b
    java.lang.String query -> c
    java.util.List evals -> d
    java.util.regex.Pattern NTH_AB -> e
    java.util.regex.Pattern NTH_B -> f
    org.jsoup.select.Evaluator parse(java.lang.String) -> a
    org.jsoup.select.Evaluator parse() -> a
    void combinator(char) -> a
    java.lang.String consumeSubQuery() -> b
    void findElements() -> c
    void byId() -> d
    void byClass() -> e
    void byTag() -> f
    void byAttribute() -> g
    void allElements() -> h
    void indexLessThan() -> i
    void indexGreaterThan() -> j
    void indexEquals() -> k
    void cssNthChild(boolean,boolean) -> a
    int consumeIndex() -> l
    void has() -> m
    void contains(boolean) -> a
    void matches(boolean) -> b
    void not() -> n
org.jsoup.select.Selector -> org.jsoup.select.Selector:
    org.jsoup.select.Evaluator evaluator -> evaluator
    org.jsoup.nodes.Element root -> root
    org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element) -> select
    org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable) -> select
    org.jsoup.select.Elements select() -> select
    org.jsoup.select.Elements filterOut(java.util.Collection,java.util.Collection) -> filterOut
org.jsoup.select.Selector$SelectorParseException -> org.jsoup.select.Selector$SelectorParseException:
org.jsoup.select.StructuralEvaluator -> org.jsoup.select.f:
    org.jsoup.select.Evaluator evaluator -> a
org.jsoup.select.StructuralEvaluator$Has -> org.jsoup.select.g:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediateParent -> org.jsoup.select.h:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling -> org.jsoup.select.i:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Not -> org.jsoup.select.j:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Parent -> org.jsoup.select.k:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$PreviousSibling -> org.jsoup.select.l:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Root -> org.jsoup.select.m:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
